/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.18.1)", date = "2023-07-11")
public class TAlterMaterializedViewParam implements org.apache.thrift.TBase<TAlterMaterializedViewParam, TAlterMaterializedViewParam._Fields>, java.io.Serializable, Cloneable, Comparable<TAlterMaterializedViewParam> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAlterMaterializedViewParam");

  private static final org.apache.thrift.protocol.TField COLUMN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("column_name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ORIGIN_COLUMN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("origin_column_name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MV_EXPR_FIELD_DESC = new org.apache.thrift.protocol.TField("mv_expr", org.apache.thrift.protocol.TType.STRUCT, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TAlterMaterializedViewParamStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TAlterMaterializedViewParamTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String column_name; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String origin_column_name; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr mv_expr; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COLUMN_NAME((short)1, "column_name"),
    ORIGIN_COLUMN_NAME((short)2, "origin_column_name"),
    MV_EXPR((short)3, "mv_expr");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COLUMN_NAME
          return COLUMN_NAME;
        case 2: // ORIGIN_COLUMN_NAME
          return ORIGIN_COLUMN_NAME;
        case 3: // MV_EXPR
          return MV_EXPR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.ORIGIN_COLUMN_NAME,_Fields.MV_EXPR};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COLUMN_NAME, new org.apache.thrift.meta_data.FieldMetaData("column_name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORIGIN_COLUMN_NAME, new org.apache.thrift.meta_data.FieldMetaData("origin_column_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MV_EXPR, new org.apache.thrift.meta_data.FieldMetaData("mv_expr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TAlterMaterializedViewParam.class, metaDataMap);
  }

  public TAlterMaterializedViewParam() {
  }

  public TAlterMaterializedViewParam(
    java.lang.String column_name)
  {
    this();
    this.column_name = column_name;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TAlterMaterializedViewParam(TAlterMaterializedViewParam other) {
    if (other.isSetColumnName()) {
      this.column_name = other.column_name;
    }
    if (other.isSetOriginColumnName()) {
      this.origin_column_name = other.origin_column_name;
    }
    if (other.isSetMvExpr()) {
      this.mv_expr = new org.apache.doris.thrift.TExpr(other.mv_expr);
    }
  }

  @Override
  public TAlterMaterializedViewParam deepCopy() {
    return new TAlterMaterializedViewParam(this);
  }

  @Override
  public void clear() {
    this.column_name = null;
    this.origin_column_name = null;
    this.mv_expr = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getColumnName() {
    return this.column_name;
  }

  public TAlterMaterializedViewParam setColumnName(@org.apache.thrift.annotation.Nullable java.lang.String column_name) {
    this.column_name = column_name;
    return this;
  }

  public void unsetColumnName() {
    this.column_name = null;
  }

  /** Returns true if field column_name is set (has been assigned a value) and false otherwise */
  public boolean isSetColumnName() {
    return this.column_name != null;
  }

  public void setColumnNameIsSet(boolean value) {
    if (!value) {
      this.column_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getOriginColumnName() {
    return this.origin_column_name;
  }

  public TAlterMaterializedViewParam setOriginColumnName(@org.apache.thrift.annotation.Nullable java.lang.String origin_column_name) {
    this.origin_column_name = origin_column_name;
    return this;
  }

  public void unsetOriginColumnName() {
    this.origin_column_name = null;
  }

  /** Returns true if field origin_column_name is set (has been assigned a value) and false otherwise */
  public boolean isSetOriginColumnName() {
    return this.origin_column_name != null;
  }

  public void setOriginColumnNameIsSet(boolean value) {
    if (!value) {
      this.origin_column_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TExpr getMvExpr() {
    return this.mv_expr;
  }

  public TAlterMaterializedViewParam setMvExpr(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr mv_expr) {
    this.mv_expr = mv_expr;
    return this;
  }

  public void unsetMvExpr() {
    this.mv_expr = null;
  }

  /** Returns true if field mv_expr is set (has been assigned a value) and false otherwise */
  public boolean isSetMvExpr() {
    return this.mv_expr != null;
  }

  public void setMvExprIsSet(boolean value) {
    if (!value) {
      this.mv_expr = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case COLUMN_NAME:
      if (value == null) {
        unsetColumnName();
      } else {
        setColumnName((java.lang.String)value);
      }
      break;

    case ORIGIN_COLUMN_NAME:
      if (value == null) {
        unsetOriginColumnName();
      } else {
        setOriginColumnName((java.lang.String)value);
      }
      break;

    case MV_EXPR:
      if (value == null) {
        unsetMvExpr();
      } else {
        setMvExpr((org.apache.doris.thrift.TExpr)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case COLUMN_NAME:
      return getColumnName();

    case ORIGIN_COLUMN_NAME:
      return getOriginColumnName();

    case MV_EXPR:
      return getMvExpr();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case COLUMN_NAME:
      return isSetColumnName();
    case ORIGIN_COLUMN_NAME:
      return isSetOriginColumnName();
    case MV_EXPR:
      return isSetMvExpr();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TAlterMaterializedViewParam)
      return this.equals((TAlterMaterializedViewParam)that);
    return false;
  }

  public boolean equals(TAlterMaterializedViewParam that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_column_name = true && this.isSetColumnName();
    boolean that_present_column_name = true && that.isSetColumnName();
    if (this_present_column_name || that_present_column_name) {
      if (!(this_present_column_name && that_present_column_name))
        return false;
      if (!this.column_name.equals(that.column_name))
        return false;
    }

    boolean this_present_origin_column_name = true && this.isSetOriginColumnName();
    boolean that_present_origin_column_name = true && that.isSetOriginColumnName();
    if (this_present_origin_column_name || that_present_origin_column_name) {
      if (!(this_present_origin_column_name && that_present_origin_column_name))
        return false;
      if (!this.origin_column_name.equals(that.origin_column_name))
        return false;
    }

    boolean this_present_mv_expr = true && this.isSetMvExpr();
    boolean that_present_mv_expr = true && that.isSetMvExpr();
    if (this_present_mv_expr || that_present_mv_expr) {
      if (!(this_present_mv_expr && that_present_mv_expr))
        return false;
      if (!this.mv_expr.equals(that.mv_expr))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetColumnName()) ? 131071 : 524287);
    if (isSetColumnName())
      hashCode = hashCode * 8191 + column_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetOriginColumnName()) ? 131071 : 524287);
    if (isSetOriginColumnName())
      hashCode = hashCode * 8191 + origin_column_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetMvExpr()) ? 131071 : 524287);
    if (isSetMvExpr())
      hashCode = hashCode * 8191 + mv_expr.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TAlterMaterializedViewParam other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetColumnName(), other.isSetColumnName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColumnName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.column_name, other.column_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOriginColumnName(), other.isSetOriginColumnName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginColumnName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origin_column_name, other.origin_column_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMvExpr(), other.isSetMvExpr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMvExpr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mv_expr, other.mv_expr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TAlterMaterializedViewParam(");
    boolean first = true;

    sb.append("column_name:");
    if (this.column_name == null) {
      sb.append("null");
    } else {
      sb.append(this.column_name);
    }
    first = false;
    if (isSetOriginColumnName()) {
      if (!first) sb.append(", ");
      sb.append("origin_column_name:");
      if (this.origin_column_name == null) {
        sb.append("null");
      } else {
        sb.append(this.origin_column_name);
      }
      first = false;
    }
    if (isSetMvExpr()) {
      if (!first) sb.append(", ");
      sb.append("mv_expr:");
      if (this.mv_expr == null) {
        sb.append("null");
      } else {
        sb.append(this.mv_expr);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (column_name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'column_name' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (mv_expr != null) {
      mv_expr.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TAlterMaterializedViewParamStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TAlterMaterializedViewParamStandardScheme getScheme() {
      return new TAlterMaterializedViewParamStandardScheme();
    }
  }

  private static class TAlterMaterializedViewParamStandardScheme extends org.apache.thrift.scheme.StandardScheme<TAlterMaterializedViewParam> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TAlterMaterializedViewParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COLUMN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.column_name = iprot.readString();
              struct.setColumnNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORIGIN_COLUMN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.origin_column_name = iprot.readString();
              struct.setOriginColumnNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MV_EXPR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.mv_expr = new org.apache.doris.thrift.TExpr();
              struct.mv_expr.read(iprot);
              struct.setMvExprIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TAlterMaterializedViewParam struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.column_name != null) {
        oprot.writeFieldBegin(COLUMN_NAME_FIELD_DESC);
        oprot.writeString(struct.column_name);
        oprot.writeFieldEnd();
      }
      if (struct.origin_column_name != null) {
        if (struct.isSetOriginColumnName()) {
          oprot.writeFieldBegin(ORIGIN_COLUMN_NAME_FIELD_DESC);
          oprot.writeString(struct.origin_column_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.mv_expr != null) {
        if (struct.isSetMvExpr()) {
          oprot.writeFieldBegin(MV_EXPR_FIELD_DESC);
          struct.mv_expr.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TAlterMaterializedViewParamTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TAlterMaterializedViewParamTupleScheme getScheme() {
      return new TAlterMaterializedViewParamTupleScheme();
    }
  }

  private static class TAlterMaterializedViewParamTupleScheme extends org.apache.thrift.scheme.TupleScheme<TAlterMaterializedViewParam> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TAlterMaterializedViewParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.column_name);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetOriginColumnName()) {
        optionals.set(0);
      }
      if (struct.isSetMvExpr()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetOriginColumnName()) {
        oprot.writeString(struct.origin_column_name);
      }
      if (struct.isSetMvExpr()) {
        struct.mv_expr.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TAlterMaterializedViewParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.column_name = iprot.readString();
      struct.setColumnNameIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.origin_column_name = iprot.readString();
        struct.setOriginColumnNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.mv_expr = new org.apache.doris.thrift.TExpr();
        struct.mv_expr.read(iprot);
        struct.setMvExprIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

