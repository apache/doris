/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.18.1)", date = "2023-07-11")
public class TJavaUdfExecutorCtorParams implements org.apache.thrift.TBase<TJavaUdfExecutorCtorParams, TJavaUdfExecutorCtorParams._Fields>, java.io.Serializable, Cloneable, Comparable<TJavaUdfExecutorCtorParams> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TJavaUdfExecutorCtorParams");

  private static final org.apache.thrift.protocol.TField FN_FIELD_DESC = new org.apache.thrift.protocol.TField("fn", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField INPUT_OFFSETS_PTRS_FIELD_DESC = new org.apache.thrift.protocol.TField("input_offsets_ptrs", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField INPUT_NULLS_PTRS_FIELD_DESC = new org.apache.thrift.protocol.TField("input_nulls_ptrs", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField INPUT_BUFFER_PTRS_FIELD_DESC = new org.apache.thrift.protocol.TField("input_buffer_ptrs", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField OUTPUT_NULL_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("output_null_ptr", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField OUTPUT_BUFFER_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("output_buffer_ptr", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField OUTPUT_OFFSETS_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("output_offsets_ptr", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField OUTPUT_INTERMEDIATE_STATE_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("output_intermediate_state_ptr", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField BATCH_SIZE_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("batch_size_ptr", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField INPUT_PLACES_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("input_places_ptr", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField INPUT_ARRAY_NULLS_BUFFER_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("input_array_nulls_buffer_ptr", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField INPUT_ARRAY_STRING_OFFSETS_PTRS_FIELD_DESC = new org.apache.thrift.protocol.TField("input_array_string_offsets_ptrs", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField OUTPUT_ARRAY_NULL_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("output_array_null_ptr", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField OUTPUT_ARRAY_STRING_OFFSETS_PTR_FIELD_DESC = new org.apache.thrift.protocol.TField("output_array_string_offsets_ptr", org.apache.thrift.protocol.TType.I64, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TJavaUdfExecutorCtorParamsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TJavaUdfExecutorCtorParamsTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable TFunction fn; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String location; // optional
  public long input_offsets_ptrs; // optional
  public long input_nulls_ptrs; // optional
  public long input_buffer_ptrs; // optional
  public long output_null_ptr; // optional
  public long output_buffer_ptr; // optional
  public long output_offsets_ptr; // optional
  public long output_intermediate_state_ptr; // optional
  public long batch_size_ptr; // optional
  public long input_places_ptr; // optional
  public long input_array_nulls_buffer_ptr; // optional
  public long input_array_string_offsets_ptrs; // optional
  public long output_array_null_ptr; // optional
  public long output_array_string_offsets_ptr; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FN((short)1, "fn"),
    LOCATION((short)2, "location"),
    INPUT_OFFSETS_PTRS((short)3, "input_offsets_ptrs"),
    INPUT_NULLS_PTRS((short)4, "input_nulls_ptrs"),
    INPUT_BUFFER_PTRS((short)5, "input_buffer_ptrs"),
    OUTPUT_NULL_PTR((short)6, "output_null_ptr"),
    OUTPUT_BUFFER_PTR((short)7, "output_buffer_ptr"),
    OUTPUT_OFFSETS_PTR((short)8, "output_offsets_ptr"),
    OUTPUT_INTERMEDIATE_STATE_PTR((short)9, "output_intermediate_state_ptr"),
    BATCH_SIZE_PTR((short)10, "batch_size_ptr"),
    INPUT_PLACES_PTR((short)11, "input_places_ptr"),
    INPUT_ARRAY_NULLS_BUFFER_PTR((short)12, "input_array_nulls_buffer_ptr"),
    INPUT_ARRAY_STRING_OFFSETS_PTRS((short)13, "input_array_string_offsets_ptrs"),
    OUTPUT_ARRAY_NULL_PTR((short)14, "output_array_null_ptr"),
    OUTPUT_ARRAY_STRING_OFFSETS_PTR((short)15, "output_array_string_offsets_ptr");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FN
          return FN;
        case 2: // LOCATION
          return LOCATION;
        case 3: // INPUT_OFFSETS_PTRS
          return INPUT_OFFSETS_PTRS;
        case 4: // INPUT_NULLS_PTRS
          return INPUT_NULLS_PTRS;
        case 5: // INPUT_BUFFER_PTRS
          return INPUT_BUFFER_PTRS;
        case 6: // OUTPUT_NULL_PTR
          return OUTPUT_NULL_PTR;
        case 7: // OUTPUT_BUFFER_PTR
          return OUTPUT_BUFFER_PTR;
        case 8: // OUTPUT_OFFSETS_PTR
          return OUTPUT_OFFSETS_PTR;
        case 9: // OUTPUT_INTERMEDIATE_STATE_PTR
          return OUTPUT_INTERMEDIATE_STATE_PTR;
        case 10: // BATCH_SIZE_PTR
          return BATCH_SIZE_PTR;
        case 11: // INPUT_PLACES_PTR
          return INPUT_PLACES_PTR;
        case 12: // INPUT_ARRAY_NULLS_BUFFER_PTR
          return INPUT_ARRAY_NULLS_BUFFER_PTR;
        case 13: // INPUT_ARRAY_STRING_OFFSETS_PTRS
          return INPUT_ARRAY_STRING_OFFSETS_PTRS;
        case 14: // OUTPUT_ARRAY_NULL_PTR
          return OUTPUT_ARRAY_NULL_PTR;
        case 15: // OUTPUT_ARRAY_STRING_OFFSETS_PTR
          return OUTPUT_ARRAY_STRING_OFFSETS_PTR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INPUT_OFFSETS_PTRS_ISSET_ID = 0;
  private static final int __INPUT_NULLS_PTRS_ISSET_ID = 1;
  private static final int __INPUT_BUFFER_PTRS_ISSET_ID = 2;
  private static final int __OUTPUT_NULL_PTR_ISSET_ID = 3;
  private static final int __OUTPUT_BUFFER_PTR_ISSET_ID = 4;
  private static final int __OUTPUT_OFFSETS_PTR_ISSET_ID = 5;
  private static final int __OUTPUT_INTERMEDIATE_STATE_PTR_ISSET_ID = 6;
  private static final int __BATCH_SIZE_PTR_ISSET_ID = 7;
  private static final int __INPUT_PLACES_PTR_ISSET_ID = 8;
  private static final int __INPUT_ARRAY_NULLS_BUFFER_PTR_ISSET_ID = 9;
  private static final int __INPUT_ARRAY_STRING_OFFSETS_PTRS_ISSET_ID = 10;
  private static final int __OUTPUT_ARRAY_NULL_PTR_ISSET_ID = 11;
  private static final int __OUTPUT_ARRAY_STRING_OFFSETS_PTR_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.FN,_Fields.LOCATION,_Fields.INPUT_OFFSETS_PTRS,_Fields.INPUT_NULLS_PTRS,_Fields.INPUT_BUFFER_PTRS,_Fields.OUTPUT_NULL_PTR,_Fields.OUTPUT_BUFFER_PTR,_Fields.OUTPUT_OFFSETS_PTR,_Fields.OUTPUT_INTERMEDIATE_STATE_PTR,_Fields.BATCH_SIZE_PTR,_Fields.INPUT_PLACES_PTR,_Fields.INPUT_ARRAY_NULLS_BUFFER_PTR,_Fields.INPUT_ARRAY_STRING_OFFSETS_PTRS,_Fields.OUTPUT_ARRAY_NULL_PTR,_Fields.OUTPUT_ARRAY_STRING_OFFSETS_PTR};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FN, new org.apache.thrift.meta_data.FieldMetaData("fn", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TFunction.class)));
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INPUT_OFFSETS_PTRS, new org.apache.thrift.meta_data.FieldMetaData("input_offsets_ptrs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INPUT_NULLS_PTRS, new org.apache.thrift.meta_data.FieldMetaData("input_nulls_ptrs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INPUT_BUFFER_PTRS, new org.apache.thrift.meta_data.FieldMetaData("input_buffer_ptrs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTPUT_NULL_PTR, new org.apache.thrift.meta_data.FieldMetaData("output_null_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTPUT_BUFFER_PTR, new org.apache.thrift.meta_data.FieldMetaData("output_buffer_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTPUT_OFFSETS_PTR, new org.apache.thrift.meta_data.FieldMetaData("output_offsets_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTPUT_INTERMEDIATE_STATE_PTR, new org.apache.thrift.meta_data.FieldMetaData("output_intermediate_state_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BATCH_SIZE_PTR, new org.apache.thrift.meta_data.FieldMetaData("batch_size_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INPUT_PLACES_PTR, new org.apache.thrift.meta_data.FieldMetaData("input_places_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INPUT_ARRAY_NULLS_BUFFER_PTR, new org.apache.thrift.meta_data.FieldMetaData("input_array_nulls_buffer_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INPUT_ARRAY_STRING_OFFSETS_PTRS, new org.apache.thrift.meta_data.FieldMetaData("input_array_string_offsets_ptrs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTPUT_ARRAY_NULL_PTR, new org.apache.thrift.meta_data.FieldMetaData("output_array_null_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OUTPUT_ARRAY_STRING_OFFSETS_PTR, new org.apache.thrift.meta_data.FieldMetaData("output_array_string_offsets_ptr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TJavaUdfExecutorCtorParams.class, metaDataMap);
  }

  public TJavaUdfExecutorCtorParams() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TJavaUdfExecutorCtorParams(TJavaUdfExecutorCtorParams other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetFn()) {
      this.fn = new TFunction(other.fn);
    }
    if (other.isSetLocation()) {
      this.location = other.location;
    }
    this.input_offsets_ptrs = other.input_offsets_ptrs;
    this.input_nulls_ptrs = other.input_nulls_ptrs;
    this.input_buffer_ptrs = other.input_buffer_ptrs;
    this.output_null_ptr = other.output_null_ptr;
    this.output_buffer_ptr = other.output_buffer_ptr;
    this.output_offsets_ptr = other.output_offsets_ptr;
    this.output_intermediate_state_ptr = other.output_intermediate_state_ptr;
    this.batch_size_ptr = other.batch_size_ptr;
    this.input_places_ptr = other.input_places_ptr;
    this.input_array_nulls_buffer_ptr = other.input_array_nulls_buffer_ptr;
    this.input_array_string_offsets_ptrs = other.input_array_string_offsets_ptrs;
    this.output_array_null_ptr = other.output_array_null_ptr;
    this.output_array_string_offsets_ptr = other.output_array_string_offsets_ptr;
  }

  @Override
  public TJavaUdfExecutorCtorParams deepCopy() {
    return new TJavaUdfExecutorCtorParams(this);
  }

  @Override
  public void clear() {
    this.fn = null;
    this.location = null;
    setInputOffsetsPtrsIsSet(false);
    this.input_offsets_ptrs = 0;
    setInputNullsPtrsIsSet(false);
    this.input_nulls_ptrs = 0;
    setInputBufferPtrsIsSet(false);
    this.input_buffer_ptrs = 0;
    setOutputNullPtrIsSet(false);
    this.output_null_ptr = 0;
    setOutputBufferPtrIsSet(false);
    this.output_buffer_ptr = 0;
    setOutputOffsetsPtrIsSet(false);
    this.output_offsets_ptr = 0;
    setOutputIntermediateStatePtrIsSet(false);
    this.output_intermediate_state_ptr = 0;
    setBatchSizePtrIsSet(false);
    this.batch_size_ptr = 0;
    setInputPlacesPtrIsSet(false);
    this.input_places_ptr = 0;
    setInputArrayNullsBufferPtrIsSet(false);
    this.input_array_nulls_buffer_ptr = 0;
    setInputArrayStringOffsetsPtrsIsSet(false);
    this.input_array_string_offsets_ptrs = 0;
    setOutputArrayNullPtrIsSet(false);
    this.output_array_null_ptr = 0;
    setOutputArrayStringOffsetsPtrIsSet(false);
    this.output_array_string_offsets_ptr = 0;
  }

  @org.apache.thrift.annotation.Nullable
  public TFunction getFn() {
    return this.fn;
  }

  public TJavaUdfExecutorCtorParams setFn(@org.apache.thrift.annotation.Nullable TFunction fn) {
    this.fn = fn;
    return this;
  }

  public void unsetFn() {
    this.fn = null;
  }

  /** Returns true if field fn is set (has been assigned a value) and false otherwise */
  public boolean isSetFn() {
    return this.fn != null;
  }

  public void setFnIsSet(boolean value) {
    if (!value) {
      this.fn = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getLocation() {
    return this.location;
  }

  public TJavaUdfExecutorCtorParams setLocation(@org.apache.thrift.annotation.Nullable java.lang.String location) {
    this.location = location;
    return this;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  public long getInputOffsetsPtrs() {
    return this.input_offsets_ptrs;
  }

  public TJavaUdfExecutorCtorParams setInputOffsetsPtrs(long input_offsets_ptrs) {
    this.input_offsets_ptrs = input_offsets_ptrs;
    setInputOffsetsPtrsIsSet(true);
    return this;
  }

  public void unsetInputOffsetsPtrs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INPUT_OFFSETS_PTRS_ISSET_ID);
  }

  /** Returns true if field input_offsets_ptrs is set (has been assigned a value) and false otherwise */
  public boolean isSetInputOffsetsPtrs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INPUT_OFFSETS_PTRS_ISSET_ID);
  }

  public void setInputOffsetsPtrsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INPUT_OFFSETS_PTRS_ISSET_ID, value);
  }

  public long getInputNullsPtrs() {
    return this.input_nulls_ptrs;
  }

  public TJavaUdfExecutorCtorParams setInputNullsPtrs(long input_nulls_ptrs) {
    this.input_nulls_ptrs = input_nulls_ptrs;
    setInputNullsPtrsIsSet(true);
    return this;
  }

  public void unsetInputNullsPtrs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INPUT_NULLS_PTRS_ISSET_ID);
  }

  /** Returns true if field input_nulls_ptrs is set (has been assigned a value) and false otherwise */
  public boolean isSetInputNullsPtrs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INPUT_NULLS_PTRS_ISSET_ID);
  }

  public void setInputNullsPtrsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INPUT_NULLS_PTRS_ISSET_ID, value);
  }

  public long getInputBufferPtrs() {
    return this.input_buffer_ptrs;
  }

  public TJavaUdfExecutorCtorParams setInputBufferPtrs(long input_buffer_ptrs) {
    this.input_buffer_ptrs = input_buffer_ptrs;
    setInputBufferPtrsIsSet(true);
    return this;
  }

  public void unsetInputBufferPtrs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INPUT_BUFFER_PTRS_ISSET_ID);
  }

  /** Returns true if field input_buffer_ptrs is set (has been assigned a value) and false otherwise */
  public boolean isSetInputBufferPtrs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INPUT_BUFFER_PTRS_ISSET_ID);
  }

  public void setInputBufferPtrsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INPUT_BUFFER_PTRS_ISSET_ID, value);
  }

  public long getOutputNullPtr() {
    return this.output_null_ptr;
  }

  public TJavaUdfExecutorCtorParams setOutputNullPtr(long output_null_ptr) {
    this.output_null_ptr = output_null_ptr;
    setOutputNullPtrIsSet(true);
    return this;
  }

  public void unsetOutputNullPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_NULL_PTR_ISSET_ID);
  }

  /** Returns true if field output_null_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputNullPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_NULL_PTR_ISSET_ID);
  }

  public void setOutputNullPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_NULL_PTR_ISSET_ID, value);
  }

  public long getOutputBufferPtr() {
    return this.output_buffer_ptr;
  }

  public TJavaUdfExecutorCtorParams setOutputBufferPtr(long output_buffer_ptr) {
    this.output_buffer_ptr = output_buffer_ptr;
    setOutputBufferPtrIsSet(true);
    return this;
  }

  public void unsetOutputBufferPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_BUFFER_PTR_ISSET_ID);
  }

  /** Returns true if field output_buffer_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputBufferPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_BUFFER_PTR_ISSET_ID);
  }

  public void setOutputBufferPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_BUFFER_PTR_ISSET_ID, value);
  }

  public long getOutputOffsetsPtr() {
    return this.output_offsets_ptr;
  }

  public TJavaUdfExecutorCtorParams setOutputOffsetsPtr(long output_offsets_ptr) {
    this.output_offsets_ptr = output_offsets_ptr;
    setOutputOffsetsPtrIsSet(true);
    return this;
  }

  public void unsetOutputOffsetsPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_OFFSETS_PTR_ISSET_ID);
  }

  /** Returns true if field output_offsets_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputOffsetsPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_OFFSETS_PTR_ISSET_ID);
  }

  public void setOutputOffsetsPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_OFFSETS_PTR_ISSET_ID, value);
  }

  public long getOutputIntermediateStatePtr() {
    return this.output_intermediate_state_ptr;
  }

  public TJavaUdfExecutorCtorParams setOutputIntermediateStatePtr(long output_intermediate_state_ptr) {
    this.output_intermediate_state_ptr = output_intermediate_state_ptr;
    setOutputIntermediateStatePtrIsSet(true);
    return this;
  }

  public void unsetOutputIntermediateStatePtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_INTERMEDIATE_STATE_PTR_ISSET_ID);
  }

  /** Returns true if field output_intermediate_state_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputIntermediateStatePtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_INTERMEDIATE_STATE_PTR_ISSET_ID);
  }

  public void setOutputIntermediateStatePtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_INTERMEDIATE_STATE_PTR_ISSET_ID, value);
  }

  public long getBatchSizePtr() {
    return this.batch_size_ptr;
  }

  public TJavaUdfExecutorCtorParams setBatchSizePtr(long batch_size_ptr) {
    this.batch_size_ptr = batch_size_ptr;
    setBatchSizePtrIsSet(true);
    return this;
  }

  public void unsetBatchSizePtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BATCH_SIZE_PTR_ISSET_ID);
  }

  /** Returns true if field batch_size_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetBatchSizePtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BATCH_SIZE_PTR_ISSET_ID);
  }

  public void setBatchSizePtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BATCH_SIZE_PTR_ISSET_ID, value);
  }

  public long getInputPlacesPtr() {
    return this.input_places_ptr;
  }

  public TJavaUdfExecutorCtorParams setInputPlacesPtr(long input_places_ptr) {
    this.input_places_ptr = input_places_ptr;
    setInputPlacesPtrIsSet(true);
    return this;
  }

  public void unsetInputPlacesPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INPUT_PLACES_PTR_ISSET_ID);
  }

  /** Returns true if field input_places_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetInputPlacesPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INPUT_PLACES_PTR_ISSET_ID);
  }

  public void setInputPlacesPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INPUT_PLACES_PTR_ISSET_ID, value);
  }

  public long getInputArrayNullsBufferPtr() {
    return this.input_array_nulls_buffer_ptr;
  }

  public TJavaUdfExecutorCtorParams setInputArrayNullsBufferPtr(long input_array_nulls_buffer_ptr) {
    this.input_array_nulls_buffer_ptr = input_array_nulls_buffer_ptr;
    setInputArrayNullsBufferPtrIsSet(true);
    return this;
  }

  public void unsetInputArrayNullsBufferPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INPUT_ARRAY_NULLS_BUFFER_PTR_ISSET_ID);
  }

  /** Returns true if field input_array_nulls_buffer_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetInputArrayNullsBufferPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INPUT_ARRAY_NULLS_BUFFER_PTR_ISSET_ID);
  }

  public void setInputArrayNullsBufferPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INPUT_ARRAY_NULLS_BUFFER_PTR_ISSET_ID, value);
  }

  public long getInputArrayStringOffsetsPtrs() {
    return this.input_array_string_offsets_ptrs;
  }

  public TJavaUdfExecutorCtorParams setInputArrayStringOffsetsPtrs(long input_array_string_offsets_ptrs) {
    this.input_array_string_offsets_ptrs = input_array_string_offsets_ptrs;
    setInputArrayStringOffsetsPtrsIsSet(true);
    return this;
  }

  public void unsetInputArrayStringOffsetsPtrs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INPUT_ARRAY_STRING_OFFSETS_PTRS_ISSET_ID);
  }

  /** Returns true if field input_array_string_offsets_ptrs is set (has been assigned a value) and false otherwise */
  public boolean isSetInputArrayStringOffsetsPtrs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INPUT_ARRAY_STRING_OFFSETS_PTRS_ISSET_ID);
  }

  public void setInputArrayStringOffsetsPtrsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INPUT_ARRAY_STRING_OFFSETS_PTRS_ISSET_ID, value);
  }

  public long getOutputArrayNullPtr() {
    return this.output_array_null_ptr;
  }

  public TJavaUdfExecutorCtorParams setOutputArrayNullPtr(long output_array_null_ptr) {
    this.output_array_null_ptr = output_array_null_ptr;
    setOutputArrayNullPtrIsSet(true);
    return this;
  }

  public void unsetOutputArrayNullPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_ARRAY_NULL_PTR_ISSET_ID);
  }

  /** Returns true if field output_array_null_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputArrayNullPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_ARRAY_NULL_PTR_ISSET_ID);
  }

  public void setOutputArrayNullPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_ARRAY_NULL_PTR_ISSET_ID, value);
  }

  public long getOutputArrayStringOffsetsPtr() {
    return this.output_array_string_offsets_ptr;
  }

  public TJavaUdfExecutorCtorParams setOutputArrayStringOffsetsPtr(long output_array_string_offsets_ptr) {
    this.output_array_string_offsets_ptr = output_array_string_offsets_ptr;
    setOutputArrayStringOffsetsPtrIsSet(true);
    return this;
  }

  public void unsetOutputArrayStringOffsetsPtr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_ARRAY_STRING_OFFSETS_PTR_ISSET_ID);
  }

  /** Returns true if field output_array_string_offsets_ptr is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputArrayStringOffsetsPtr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_ARRAY_STRING_OFFSETS_PTR_ISSET_ID);
  }

  public void setOutputArrayStringOffsetsPtrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_ARRAY_STRING_OFFSETS_PTR_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case FN:
      if (value == null) {
        unsetFn();
      } else {
        setFn((TFunction)value);
      }
      break;

    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((java.lang.String)value);
      }
      break;

    case INPUT_OFFSETS_PTRS:
      if (value == null) {
        unsetInputOffsetsPtrs();
      } else {
        setInputOffsetsPtrs((java.lang.Long)value);
      }
      break;

    case INPUT_NULLS_PTRS:
      if (value == null) {
        unsetInputNullsPtrs();
      } else {
        setInputNullsPtrs((java.lang.Long)value);
      }
      break;

    case INPUT_BUFFER_PTRS:
      if (value == null) {
        unsetInputBufferPtrs();
      } else {
        setInputBufferPtrs((java.lang.Long)value);
      }
      break;

    case OUTPUT_NULL_PTR:
      if (value == null) {
        unsetOutputNullPtr();
      } else {
        setOutputNullPtr((java.lang.Long)value);
      }
      break;

    case OUTPUT_BUFFER_PTR:
      if (value == null) {
        unsetOutputBufferPtr();
      } else {
        setOutputBufferPtr((java.lang.Long)value);
      }
      break;

    case OUTPUT_OFFSETS_PTR:
      if (value == null) {
        unsetOutputOffsetsPtr();
      } else {
        setOutputOffsetsPtr((java.lang.Long)value);
      }
      break;

    case OUTPUT_INTERMEDIATE_STATE_PTR:
      if (value == null) {
        unsetOutputIntermediateStatePtr();
      } else {
        setOutputIntermediateStatePtr((java.lang.Long)value);
      }
      break;

    case BATCH_SIZE_PTR:
      if (value == null) {
        unsetBatchSizePtr();
      } else {
        setBatchSizePtr((java.lang.Long)value);
      }
      break;

    case INPUT_PLACES_PTR:
      if (value == null) {
        unsetInputPlacesPtr();
      } else {
        setInputPlacesPtr((java.lang.Long)value);
      }
      break;

    case INPUT_ARRAY_NULLS_BUFFER_PTR:
      if (value == null) {
        unsetInputArrayNullsBufferPtr();
      } else {
        setInputArrayNullsBufferPtr((java.lang.Long)value);
      }
      break;

    case INPUT_ARRAY_STRING_OFFSETS_PTRS:
      if (value == null) {
        unsetInputArrayStringOffsetsPtrs();
      } else {
        setInputArrayStringOffsetsPtrs((java.lang.Long)value);
      }
      break;

    case OUTPUT_ARRAY_NULL_PTR:
      if (value == null) {
        unsetOutputArrayNullPtr();
      } else {
        setOutputArrayNullPtr((java.lang.Long)value);
      }
      break;

    case OUTPUT_ARRAY_STRING_OFFSETS_PTR:
      if (value == null) {
        unsetOutputArrayStringOffsetsPtr();
      } else {
        setOutputArrayStringOffsetsPtr((java.lang.Long)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case FN:
      return getFn();

    case LOCATION:
      return getLocation();

    case INPUT_OFFSETS_PTRS:
      return getInputOffsetsPtrs();

    case INPUT_NULLS_PTRS:
      return getInputNullsPtrs();

    case INPUT_BUFFER_PTRS:
      return getInputBufferPtrs();

    case OUTPUT_NULL_PTR:
      return getOutputNullPtr();

    case OUTPUT_BUFFER_PTR:
      return getOutputBufferPtr();

    case OUTPUT_OFFSETS_PTR:
      return getOutputOffsetsPtr();

    case OUTPUT_INTERMEDIATE_STATE_PTR:
      return getOutputIntermediateStatePtr();

    case BATCH_SIZE_PTR:
      return getBatchSizePtr();

    case INPUT_PLACES_PTR:
      return getInputPlacesPtr();

    case INPUT_ARRAY_NULLS_BUFFER_PTR:
      return getInputArrayNullsBufferPtr();

    case INPUT_ARRAY_STRING_OFFSETS_PTRS:
      return getInputArrayStringOffsetsPtrs();

    case OUTPUT_ARRAY_NULL_PTR:
      return getOutputArrayNullPtr();

    case OUTPUT_ARRAY_STRING_OFFSETS_PTR:
      return getOutputArrayStringOffsetsPtr();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case FN:
      return isSetFn();
    case LOCATION:
      return isSetLocation();
    case INPUT_OFFSETS_PTRS:
      return isSetInputOffsetsPtrs();
    case INPUT_NULLS_PTRS:
      return isSetInputNullsPtrs();
    case INPUT_BUFFER_PTRS:
      return isSetInputBufferPtrs();
    case OUTPUT_NULL_PTR:
      return isSetOutputNullPtr();
    case OUTPUT_BUFFER_PTR:
      return isSetOutputBufferPtr();
    case OUTPUT_OFFSETS_PTR:
      return isSetOutputOffsetsPtr();
    case OUTPUT_INTERMEDIATE_STATE_PTR:
      return isSetOutputIntermediateStatePtr();
    case BATCH_SIZE_PTR:
      return isSetBatchSizePtr();
    case INPUT_PLACES_PTR:
      return isSetInputPlacesPtr();
    case INPUT_ARRAY_NULLS_BUFFER_PTR:
      return isSetInputArrayNullsBufferPtr();
    case INPUT_ARRAY_STRING_OFFSETS_PTRS:
      return isSetInputArrayStringOffsetsPtrs();
    case OUTPUT_ARRAY_NULL_PTR:
      return isSetOutputArrayNullPtr();
    case OUTPUT_ARRAY_STRING_OFFSETS_PTR:
      return isSetOutputArrayStringOffsetsPtr();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TJavaUdfExecutorCtorParams)
      return this.equals((TJavaUdfExecutorCtorParams)that);
    return false;
  }

  public boolean equals(TJavaUdfExecutorCtorParams that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_fn = true && this.isSetFn();
    boolean that_present_fn = true && that.isSetFn();
    if (this_present_fn || that_present_fn) {
      if (!(this_present_fn && that_present_fn))
        return false;
      if (!this.fn.equals(that.fn))
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_input_offsets_ptrs = true && this.isSetInputOffsetsPtrs();
    boolean that_present_input_offsets_ptrs = true && that.isSetInputOffsetsPtrs();
    if (this_present_input_offsets_ptrs || that_present_input_offsets_ptrs) {
      if (!(this_present_input_offsets_ptrs && that_present_input_offsets_ptrs))
        return false;
      if (this.input_offsets_ptrs != that.input_offsets_ptrs)
        return false;
    }

    boolean this_present_input_nulls_ptrs = true && this.isSetInputNullsPtrs();
    boolean that_present_input_nulls_ptrs = true && that.isSetInputNullsPtrs();
    if (this_present_input_nulls_ptrs || that_present_input_nulls_ptrs) {
      if (!(this_present_input_nulls_ptrs && that_present_input_nulls_ptrs))
        return false;
      if (this.input_nulls_ptrs != that.input_nulls_ptrs)
        return false;
    }

    boolean this_present_input_buffer_ptrs = true && this.isSetInputBufferPtrs();
    boolean that_present_input_buffer_ptrs = true && that.isSetInputBufferPtrs();
    if (this_present_input_buffer_ptrs || that_present_input_buffer_ptrs) {
      if (!(this_present_input_buffer_ptrs && that_present_input_buffer_ptrs))
        return false;
      if (this.input_buffer_ptrs != that.input_buffer_ptrs)
        return false;
    }

    boolean this_present_output_null_ptr = true && this.isSetOutputNullPtr();
    boolean that_present_output_null_ptr = true && that.isSetOutputNullPtr();
    if (this_present_output_null_ptr || that_present_output_null_ptr) {
      if (!(this_present_output_null_ptr && that_present_output_null_ptr))
        return false;
      if (this.output_null_ptr != that.output_null_ptr)
        return false;
    }

    boolean this_present_output_buffer_ptr = true && this.isSetOutputBufferPtr();
    boolean that_present_output_buffer_ptr = true && that.isSetOutputBufferPtr();
    if (this_present_output_buffer_ptr || that_present_output_buffer_ptr) {
      if (!(this_present_output_buffer_ptr && that_present_output_buffer_ptr))
        return false;
      if (this.output_buffer_ptr != that.output_buffer_ptr)
        return false;
    }

    boolean this_present_output_offsets_ptr = true && this.isSetOutputOffsetsPtr();
    boolean that_present_output_offsets_ptr = true && that.isSetOutputOffsetsPtr();
    if (this_present_output_offsets_ptr || that_present_output_offsets_ptr) {
      if (!(this_present_output_offsets_ptr && that_present_output_offsets_ptr))
        return false;
      if (this.output_offsets_ptr != that.output_offsets_ptr)
        return false;
    }

    boolean this_present_output_intermediate_state_ptr = true && this.isSetOutputIntermediateStatePtr();
    boolean that_present_output_intermediate_state_ptr = true && that.isSetOutputIntermediateStatePtr();
    if (this_present_output_intermediate_state_ptr || that_present_output_intermediate_state_ptr) {
      if (!(this_present_output_intermediate_state_ptr && that_present_output_intermediate_state_ptr))
        return false;
      if (this.output_intermediate_state_ptr != that.output_intermediate_state_ptr)
        return false;
    }

    boolean this_present_batch_size_ptr = true && this.isSetBatchSizePtr();
    boolean that_present_batch_size_ptr = true && that.isSetBatchSizePtr();
    if (this_present_batch_size_ptr || that_present_batch_size_ptr) {
      if (!(this_present_batch_size_ptr && that_present_batch_size_ptr))
        return false;
      if (this.batch_size_ptr != that.batch_size_ptr)
        return false;
    }

    boolean this_present_input_places_ptr = true && this.isSetInputPlacesPtr();
    boolean that_present_input_places_ptr = true && that.isSetInputPlacesPtr();
    if (this_present_input_places_ptr || that_present_input_places_ptr) {
      if (!(this_present_input_places_ptr && that_present_input_places_ptr))
        return false;
      if (this.input_places_ptr != that.input_places_ptr)
        return false;
    }

    boolean this_present_input_array_nulls_buffer_ptr = true && this.isSetInputArrayNullsBufferPtr();
    boolean that_present_input_array_nulls_buffer_ptr = true && that.isSetInputArrayNullsBufferPtr();
    if (this_present_input_array_nulls_buffer_ptr || that_present_input_array_nulls_buffer_ptr) {
      if (!(this_present_input_array_nulls_buffer_ptr && that_present_input_array_nulls_buffer_ptr))
        return false;
      if (this.input_array_nulls_buffer_ptr != that.input_array_nulls_buffer_ptr)
        return false;
    }

    boolean this_present_input_array_string_offsets_ptrs = true && this.isSetInputArrayStringOffsetsPtrs();
    boolean that_present_input_array_string_offsets_ptrs = true && that.isSetInputArrayStringOffsetsPtrs();
    if (this_present_input_array_string_offsets_ptrs || that_present_input_array_string_offsets_ptrs) {
      if (!(this_present_input_array_string_offsets_ptrs && that_present_input_array_string_offsets_ptrs))
        return false;
      if (this.input_array_string_offsets_ptrs != that.input_array_string_offsets_ptrs)
        return false;
    }

    boolean this_present_output_array_null_ptr = true && this.isSetOutputArrayNullPtr();
    boolean that_present_output_array_null_ptr = true && that.isSetOutputArrayNullPtr();
    if (this_present_output_array_null_ptr || that_present_output_array_null_ptr) {
      if (!(this_present_output_array_null_ptr && that_present_output_array_null_ptr))
        return false;
      if (this.output_array_null_ptr != that.output_array_null_ptr)
        return false;
    }

    boolean this_present_output_array_string_offsets_ptr = true && this.isSetOutputArrayStringOffsetsPtr();
    boolean that_present_output_array_string_offsets_ptr = true && that.isSetOutputArrayStringOffsetsPtr();
    if (this_present_output_array_string_offsets_ptr || that_present_output_array_string_offsets_ptr) {
      if (!(this_present_output_array_string_offsets_ptr && that_present_output_array_string_offsets_ptr))
        return false;
      if (this.output_array_string_offsets_ptr != that.output_array_string_offsets_ptr)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetFn()) ? 131071 : 524287);
    if (isSetFn())
      hashCode = hashCode * 8191 + fn.hashCode();

    hashCode = hashCode * 8191 + ((isSetLocation()) ? 131071 : 524287);
    if (isSetLocation())
      hashCode = hashCode * 8191 + location.hashCode();

    hashCode = hashCode * 8191 + ((isSetInputOffsetsPtrs()) ? 131071 : 524287);
    if (isSetInputOffsetsPtrs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(input_offsets_ptrs);

    hashCode = hashCode * 8191 + ((isSetInputNullsPtrs()) ? 131071 : 524287);
    if (isSetInputNullsPtrs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(input_nulls_ptrs);

    hashCode = hashCode * 8191 + ((isSetInputBufferPtrs()) ? 131071 : 524287);
    if (isSetInputBufferPtrs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(input_buffer_ptrs);

    hashCode = hashCode * 8191 + ((isSetOutputNullPtr()) ? 131071 : 524287);
    if (isSetOutputNullPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(output_null_ptr);

    hashCode = hashCode * 8191 + ((isSetOutputBufferPtr()) ? 131071 : 524287);
    if (isSetOutputBufferPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(output_buffer_ptr);

    hashCode = hashCode * 8191 + ((isSetOutputOffsetsPtr()) ? 131071 : 524287);
    if (isSetOutputOffsetsPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(output_offsets_ptr);

    hashCode = hashCode * 8191 + ((isSetOutputIntermediateStatePtr()) ? 131071 : 524287);
    if (isSetOutputIntermediateStatePtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(output_intermediate_state_ptr);

    hashCode = hashCode * 8191 + ((isSetBatchSizePtr()) ? 131071 : 524287);
    if (isSetBatchSizePtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(batch_size_ptr);

    hashCode = hashCode * 8191 + ((isSetInputPlacesPtr()) ? 131071 : 524287);
    if (isSetInputPlacesPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(input_places_ptr);

    hashCode = hashCode * 8191 + ((isSetInputArrayNullsBufferPtr()) ? 131071 : 524287);
    if (isSetInputArrayNullsBufferPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(input_array_nulls_buffer_ptr);

    hashCode = hashCode * 8191 + ((isSetInputArrayStringOffsetsPtrs()) ? 131071 : 524287);
    if (isSetInputArrayStringOffsetsPtrs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(input_array_string_offsets_ptrs);

    hashCode = hashCode * 8191 + ((isSetOutputArrayNullPtr()) ? 131071 : 524287);
    if (isSetOutputArrayNullPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(output_array_null_ptr);

    hashCode = hashCode * 8191 + ((isSetOutputArrayStringOffsetsPtr()) ? 131071 : 524287);
    if (isSetOutputArrayStringOffsetsPtr())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(output_array_string_offsets_ptr);

    return hashCode;
  }

  @Override
  public int compareTo(TJavaUdfExecutorCtorParams other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetFn(), other.isSetFn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fn, other.fn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLocation(), other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInputOffsetsPtrs(), other.isSetInputOffsetsPtrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputOffsetsPtrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_offsets_ptrs, other.input_offsets_ptrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInputNullsPtrs(), other.isSetInputNullsPtrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputNullsPtrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_nulls_ptrs, other.input_nulls_ptrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInputBufferPtrs(), other.isSetInputBufferPtrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputBufferPtrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_buffer_ptrs, other.input_buffer_ptrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputNullPtr(), other.isSetOutputNullPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputNullPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_null_ptr, other.output_null_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputBufferPtr(), other.isSetOutputBufferPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputBufferPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_buffer_ptr, other.output_buffer_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputOffsetsPtr(), other.isSetOutputOffsetsPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputOffsetsPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_offsets_ptr, other.output_offsets_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputIntermediateStatePtr(), other.isSetOutputIntermediateStatePtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputIntermediateStatePtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_intermediate_state_ptr, other.output_intermediate_state_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBatchSizePtr(), other.isSetBatchSizePtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBatchSizePtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.batch_size_ptr, other.batch_size_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInputPlacesPtr(), other.isSetInputPlacesPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputPlacesPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_places_ptr, other.input_places_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInputArrayNullsBufferPtr(), other.isSetInputArrayNullsBufferPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputArrayNullsBufferPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_array_nulls_buffer_ptr, other.input_array_nulls_buffer_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInputArrayStringOffsetsPtrs(), other.isSetInputArrayStringOffsetsPtrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInputArrayStringOffsetsPtrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_array_string_offsets_ptrs, other.input_array_string_offsets_ptrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputArrayNullPtr(), other.isSetOutputArrayNullPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputArrayNullPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_array_null_ptr, other.output_array_null_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputArrayStringOffsetsPtr(), other.isSetOutputArrayStringOffsetsPtr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputArrayStringOffsetsPtr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_array_string_offsets_ptr, other.output_array_string_offsets_ptr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TJavaUdfExecutorCtorParams(");
    boolean first = true;

    if (isSetFn()) {
      sb.append("fn:");
      if (this.fn == null) {
        sb.append("null");
      } else {
        sb.append(this.fn);
      }
      first = false;
    }
    if (isSetLocation()) {
      if (!first) sb.append(", ");
      sb.append("location:");
      if (this.location == null) {
        sb.append("null");
      } else {
        sb.append(this.location);
      }
      first = false;
    }
    if (isSetInputOffsetsPtrs()) {
      if (!first) sb.append(", ");
      sb.append("input_offsets_ptrs:");
      sb.append(this.input_offsets_ptrs);
      first = false;
    }
    if (isSetInputNullsPtrs()) {
      if (!first) sb.append(", ");
      sb.append("input_nulls_ptrs:");
      sb.append(this.input_nulls_ptrs);
      first = false;
    }
    if (isSetInputBufferPtrs()) {
      if (!first) sb.append(", ");
      sb.append("input_buffer_ptrs:");
      sb.append(this.input_buffer_ptrs);
      first = false;
    }
    if (isSetOutputNullPtr()) {
      if (!first) sb.append(", ");
      sb.append("output_null_ptr:");
      sb.append(this.output_null_ptr);
      first = false;
    }
    if (isSetOutputBufferPtr()) {
      if (!first) sb.append(", ");
      sb.append("output_buffer_ptr:");
      sb.append(this.output_buffer_ptr);
      first = false;
    }
    if (isSetOutputOffsetsPtr()) {
      if (!first) sb.append(", ");
      sb.append("output_offsets_ptr:");
      sb.append(this.output_offsets_ptr);
      first = false;
    }
    if (isSetOutputIntermediateStatePtr()) {
      if (!first) sb.append(", ");
      sb.append("output_intermediate_state_ptr:");
      sb.append(this.output_intermediate_state_ptr);
      first = false;
    }
    if (isSetBatchSizePtr()) {
      if (!first) sb.append(", ");
      sb.append("batch_size_ptr:");
      sb.append(this.batch_size_ptr);
      first = false;
    }
    if (isSetInputPlacesPtr()) {
      if (!first) sb.append(", ");
      sb.append("input_places_ptr:");
      sb.append(this.input_places_ptr);
      first = false;
    }
    if (isSetInputArrayNullsBufferPtr()) {
      if (!first) sb.append(", ");
      sb.append("input_array_nulls_buffer_ptr:");
      sb.append(this.input_array_nulls_buffer_ptr);
      first = false;
    }
    if (isSetInputArrayStringOffsetsPtrs()) {
      if (!first) sb.append(", ");
      sb.append("input_array_string_offsets_ptrs:");
      sb.append(this.input_array_string_offsets_ptrs);
      first = false;
    }
    if (isSetOutputArrayNullPtr()) {
      if (!first) sb.append(", ");
      sb.append("output_array_null_ptr:");
      sb.append(this.output_array_null_ptr);
      first = false;
    }
    if (isSetOutputArrayStringOffsetsPtr()) {
      if (!first) sb.append(", ");
      sb.append("output_array_string_offsets_ptr:");
      sb.append(this.output_array_string_offsets_ptr);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (fn != null) {
      fn.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TJavaUdfExecutorCtorParamsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TJavaUdfExecutorCtorParamsStandardScheme getScheme() {
      return new TJavaUdfExecutorCtorParamsStandardScheme();
    }
  }

  private static class TJavaUdfExecutorCtorParamsStandardScheme extends org.apache.thrift.scheme.StandardScheme<TJavaUdfExecutorCtorParams> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TJavaUdfExecutorCtorParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fn = new TFunction();
              struct.fn.read(iprot);
              struct.setFnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.location = iprot.readString();
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INPUT_OFFSETS_PTRS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.input_offsets_ptrs = iprot.readI64();
              struct.setInputOffsetsPtrsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // INPUT_NULLS_PTRS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.input_nulls_ptrs = iprot.readI64();
              struct.setInputNullsPtrsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INPUT_BUFFER_PTRS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.input_buffer_ptrs = iprot.readI64();
              struct.setInputBufferPtrsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OUTPUT_NULL_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.output_null_ptr = iprot.readI64();
              struct.setOutputNullPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OUTPUT_BUFFER_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.output_buffer_ptr = iprot.readI64();
              struct.setOutputBufferPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OUTPUT_OFFSETS_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.output_offsets_ptr = iprot.readI64();
              struct.setOutputOffsetsPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // OUTPUT_INTERMEDIATE_STATE_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.output_intermediate_state_ptr = iprot.readI64();
              struct.setOutputIntermediateStatePtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BATCH_SIZE_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.batch_size_ptr = iprot.readI64();
              struct.setBatchSizePtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // INPUT_PLACES_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.input_places_ptr = iprot.readI64();
              struct.setInputPlacesPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INPUT_ARRAY_NULLS_BUFFER_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.input_array_nulls_buffer_ptr = iprot.readI64();
              struct.setInputArrayNullsBufferPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // INPUT_ARRAY_STRING_OFFSETS_PTRS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.input_array_string_offsets_ptrs = iprot.readI64();
              struct.setInputArrayStringOffsetsPtrsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // OUTPUT_ARRAY_NULL_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.output_array_null_ptr = iprot.readI64();
              struct.setOutputArrayNullPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // OUTPUT_ARRAY_STRING_OFFSETS_PTR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.output_array_string_offsets_ptr = iprot.readI64();
              struct.setOutputArrayStringOffsetsPtrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TJavaUdfExecutorCtorParams struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.fn != null) {
        if (struct.isSetFn()) {
          oprot.writeFieldBegin(FN_FIELD_DESC);
          struct.fn.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.location != null) {
        if (struct.isSetLocation()) {
          oprot.writeFieldBegin(LOCATION_FIELD_DESC);
          oprot.writeString(struct.location);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetInputOffsetsPtrs()) {
        oprot.writeFieldBegin(INPUT_OFFSETS_PTRS_FIELD_DESC);
        oprot.writeI64(struct.input_offsets_ptrs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInputNullsPtrs()) {
        oprot.writeFieldBegin(INPUT_NULLS_PTRS_FIELD_DESC);
        oprot.writeI64(struct.input_nulls_ptrs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInputBufferPtrs()) {
        oprot.writeFieldBegin(INPUT_BUFFER_PTRS_FIELD_DESC);
        oprot.writeI64(struct.input_buffer_ptrs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOutputNullPtr()) {
        oprot.writeFieldBegin(OUTPUT_NULL_PTR_FIELD_DESC);
        oprot.writeI64(struct.output_null_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOutputBufferPtr()) {
        oprot.writeFieldBegin(OUTPUT_BUFFER_PTR_FIELD_DESC);
        oprot.writeI64(struct.output_buffer_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOutputOffsetsPtr()) {
        oprot.writeFieldBegin(OUTPUT_OFFSETS_PTR_FIELD_DESC);
        oprot.writeI64(struct.output_offsets_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOutputIntermediateStatePtr()) {
        oprot.writeFieldBegin(OUTPUT_INTERMEDIATE_STATE_PTR_FIELD_DESC);
        oprot.writeI64(struct.output_intermediate_state_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBatchSizePtr()) {
        oprot.writeFieldBegin(BATCH_SIZE_PTR_FIELD_DESC);
        oprot.writeI64(struct.batch_size_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInputPlacesPtr()) {
        oprot.writeFieldBegin(INPUT_PLACES_PTR_FIELD_DESC);
        oprot.writeI64(struct.input_places_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInputArrayNullsBufferPtr()) {
        oprot.writeFieldBegin(INPUT_ARRAY_NULLS_BUFFER_PTR_FIELD_DESC);
        oprot.writeI64(struct.input_array_nulls_buffer_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInputArrayStringOffsetsPtrs()) {
        oprot.writeFieldBegin(INPUT_ARRAY_STRING_OFFSETS_PTRS_FIELD_DESC);
        oprot.writeI64(struct.input_array_string_offsets_ptrs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOutputArrayNullPtr()) {
        oprot.writeFieldBegin(OUTPUT_ARRAY_NULL_PTR_FIELD_DESC);
        oprot.writeI64(struct.output_array_null_ptr);
        oprot.writeFieldEnd();
      }
      if (struct.isSetOutputArrayStringOffsetsPtr()) {
        oprot.writeFieldBegin(OUTPUT_ARRAY_STRING_OFFSETS_PTR_FIELD_DESC);
        oprot.writeI64(struct.output_array_string_offsets_ptr);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TJavaUdfExecutorCtorParamsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TJavaUdfExecutorCtorParamsTupleScheme getScheme() {
      return new TJavaUdfExecutorCtorParamsTupleScheme();
    }
  }

  private static class TJavaUdfExecutorCtorParamsTupleScheme extends org.apache.thrift.scheme.TupleScheme<TJavaUdfExecutorCtorParams> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TJavaUdfExecutorCtorParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetFn()) {
        optionals.set(0);
      }
      if (struct.isSetLocation()) {
        optionals.set(1);
      }
      if (struct.isSetInputOffsetsPtrs()) {
        optionals.set(2);
      }
      if (struct.isSetInputNullsPtrs()) {
        optionals.set(3);
      }
      if (struct.isSetInputBufferPtrs()) {
        optionals.set(4);
      }
      if (struct.isSetOutputNullPtr()) {
        optionals.set(5);
      }
      if (struct.isSetOutputBufferPtr()) {
        optionals.set(6);
      }
      if (struct.isSetOutputOffsetsPtr()) {
        optionals.set(7);
      }
      if (struct.isSetOutputIntermediateStatePtr()) {
        optionals.set(8);
      }
      if (struct.isSetBatchSizePtr()) {
        optionals.set(9);
      }
      if (struct.isSetInputPlacesPtr()) {
        optionals.set(10);
      }
      if (struct.isSetInputArrayNullsBufferPtr()) {
        optionals.set(11);
      }
      if (struct.isSetInputArrayStringOffsetsPtrs()) {
        optionals.set(12);
      }
      if (struct.isSetOutputArrayNullPtr()) {
        optionals.set(13);
      }
      if (struct.isSetOutputArrayStringOffsetsPtr()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetFn()) {
        struct.fn.write(oprot);
      }
      if (struct.isSetLocation()) {
        oprot.writeString(struct.location);
      }
      if (struct.isSetInputOffsetsPtrs()) {
        oprot.writeI64(struct.input_offsets_ptrs);
      }
      if (struct.isSetInputNullsPtrs()) {
        oprot.writeI64(struct.input_nulls_ptrs);
      }
      if (struct.isSetInputBufferPtrs()) {
        oprot.writeI64(struct.input_buffer_ptrs);
      }
      if (struct.isSetOutputNullPtr()) {
        oprot.writeI64(struct.output_null_ptr);
      }
      if (struct.isSetOutputBufferPtr()) {
        oprot.writeI64(struct.output_buffer_ptr);
      }
      if (struct.isSetOutputOffsetsPtr()) {
        oprot.writeI64(struct.output_offsets_ptr);
      }
      if (struct.isSetOutputIntermediateStatePtr()) {
        oprot.writeI64(struct.output_intermediate_state_ptr);
      }
      if (struct.isSetBatchSizePtr()) {
        oprot.writeI64(struct.batch_size_ptr);
      }
      if (struct.isSetInputPlacesPtr()) {
        oprot.writeI64(struct.input_places_ptr);
      }
      if (struct.isSetInputArrayNullsBufferPtr()) {
        oprot.writeI64(struct.input_array_nulls_buffer_ptr);
      }
      if (struct.isSetInputArrayStringOffsetsPtrs()) {
        oprot.writeI64(struct.input_array_string_offsets_ptrs);
      }
      if (struct.isSetOutputArrayNullPtr()) {
        oprot.writeI64(struct.output_array_null_ptr);
      }
      if (struct.isSetOutputArrayStringOffsetsPtr()) {
        oprot.writeI64(struct.output_array_string_offsets_ptr);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TJavaUdfExecutorCtorParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.fn = new TFunction();
        struct.fn.read(iprot);
        struct.setFnIsSet(true);
      }
      if (incoming.get(1)) {
        struct.location = iprot.readString();
        struct.setLocationIsSet(true);
      }
      if (incoming.get(2)) {
        struct.input_offsets_ptrs = iprot.readI64();
        struct.setInputOffsetsPtrsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.input_nulls_ptrs = iprot.readI64();
        struct.setInputNullsPtrsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.input_buffer_ptrs = iprot.readI64();
        struct.setInputBufferPtrsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.output_null_ptr = iprot.readI64();
        struct.setOutputNullPtrIsSet(true);
      }
      if (incoming.get(6)) {
        struct.output_buffer_ptr = iprot.readI64();
        struct.setOutputBufferPtrIsSet(true);
      }
      if (incoming.get(7)) {
        struct.output_offsets_ptr = iprot.readI64();
        struct.setOutputOffsetsPtrIsSet(true);
      }
      if (incoming.get(8)) {
        struct.output_intermediate_state_ptr = iprot.readI64();
        struct.setOutputIntermediateStatePtrIsSet(true);
      }
      if (incoming.get(9)) {
        struct.batch_size_ptr = iprot.readI64();
        struct.setBatchSizePtrIsSet(true);
      }
      if (incoming.get(10)) {
        struct.input_places_ptr = iprot.readI64();
        struct.setInputPlacesPtrIsSet(true);
      }
      if (incoming.get(11)) {
        struct.input_array_nulls_buffer_ptr = iprot.readI64();
        struct.setInputArrayNullsBufferPtrIsSet(true);
      }
      if (incoming.get(12)) {
        struct.input_array_string_offsets_ptrs = iprot.readI64();
        struct.setInputArrayStringOffsetsPtrsIsSet(true);
      }
      if (incoming.get(13)) {
        struct.output_array_null_ptr = iprot.readI64();
        struct.setOutputArrayNullPtrIsSet(true);
      }
      if (incoming.get(14)) {
        struct.output_array_string_offsets_ptr = iprot.readI64();
        struct.setOutputArrayStringOffsetsPtrIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

