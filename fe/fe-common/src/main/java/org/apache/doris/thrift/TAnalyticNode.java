/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.18.1)", date = "2023-06-29")
public class TAnalyticNode implements org.apache.thrift.TBase<TAnalyticNode, TAnalyticNode._Fields>, java.io.Serializable, Cloneable, Comparable<TAnalyticNode> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAnalyticNode");

  private static final org.apache.thrift.protocol.TField PARTITION_EXPRS_FIELD_DESC = new org.apache.thrift.protocol.TField("partition_exprs", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField ORDER_BY_EXPRS_FIELD_DESC = new org.apache.thrift.protocol.TField("order_by_exprs", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField ANALYTIC_FUNCTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("analytic_functions", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField WINDOW_FIELD_DESC = new org.apache.thrift.protocol.TField("window", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField INTERMEDIATE_TUPLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediate_tuple_id", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField OUTPUT_TUPLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("output_tuple_id", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BUFFERED_TUPLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("buffered_tuple_id", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PARTITION_BY_EQ_FIELD_DESC = new org.apache.thrift.protocol.TField("partition_by_eq", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField ORDER_BY_EQ_FIELD_DESC = new org.apache.thrift.protocol.TField("order_by_eq", org.apache.thrift.protocol.TType.STRUCT, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TAnalyticNodeStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TAnalyticNodeTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> partition_exprs; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> order_by_exprs; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> analytic_functions; // required
  public @org.apache.thrift.annotation.Nullable TAnalyticWindow window; // optional
  public int intermediate_tuple_id; // required
  public int output_tuple_id; // required
  public int buffered_tuple_id; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr partition_by_eq; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr order_by_eq; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PARTITION_EXPRS((short)1, "partition_exprs"),
    ORDER_BY_EXPRS((short)2, "order_by_exprs"),
    ANALYTIC_FUNCTIONS((short)3, "analytic_functions"),
    WINDOW((short)4, "window"),
    INTERMEDIATE_TUPLE_ID((short)5, "intermediate_tuple_id"),
    OUTPUT_TUPLE_ID((short)6, "output_tuple_id"),
    BUFFERED_TUPLE_ID((short)7, "buffered_tuple_id"),
    PARTITION_BY_EQ((short)8, "partition_by_eq"),
    ORDER_BY_EQ((short)9, "order_by_eq");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PARTITION_EXPRS
          return PARTITION_EXPRS;
        case 2: // ORDER_BY_EXPRS
          return ORDER_BY_EXPRS;
        case 3: // ANALYTIC_FUNCTIONS
          return ANALYTIC_FUNCTIONS;
        case 4: // WINDOW
          return WINDOW;
        case 5: // INTERMEDIATE_TUPLE_ID
          return INTERMEDIATE_TUPLE_ID;
        case 6: // OUTPUT_TUPLE_ID
          return OUTPUT_TUPLE_ID;
        case 7: // BUFFERED_TUPLE_ID
          return BUFFERED_TUPLE_ID;
        case 8: // PARTITION_BY_EQ
          return PARTITION_BY_EQ;
        case 9: // ORDER_BY_EQ
          return ORDER_BY_EQ;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INTERMEDIATE_TUPLE_ID_ISSET_ID = 0;
  private static final int __OUTPUT_TUPLE_ID_ISSET_ID = 1;
  private static final int __BUFFERED_TUPLE_ID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.WINDOW,_Fields.BUFFERED_TUPLE_ID,_Fields.PARTITION_BY_EQ,_Fields.ORDER_BY_EQ};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PARTITION_EXPRS, new org.apache.thrift.meta_data.FieldMetaData("partition_exprs", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class))));
    tmpMap.put(_Fields.ORDER_BY_EXPRS, new org.apache.thrift.meta_data.FieldMetaData("order_by_exprs", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class))));
    tmpMap.put(_Fields.ANALYTIC_FUNCTIONS, new org.apache.thrift.meta_data.FieldMetaData("analytic_functions", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class))));
    tmpMap.put(_Fields.WINDOW, new org.apache.thrift.meta_data.FieldMetaData("window", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TAnalyticWindow.class)));
    tmpMap.put(_Fields.INTERMEDIATE_TUPLE_ID, new org.apache.thrift.meta_data.FieldMetaData("intermediate_tuple_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TTupleId")));
    tmpMap.put(_Fields.OUTPUT_TUPLE_ID, new org.apache.thrift.meta_data.FieldMetaData("output_tuple_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TTupleId")));
    tmpMap.put(_Fields.BUFFERED_TUPLE_ID, new org.apache.thrift.meta_data.FieldMetaData("buffered_tuple_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TTupleId")));
    tmpMap.put(_Fields.PARTITION_BY_EQ, new org.apache.thrift.meta_data.FieldMetaData("partition_by_eq", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class)));
    tmpMap.put(_Fields.ORDER_BY_EQ, new org.apache.thrift.meta_data.FieldMetaData("order_by_eq", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TAnalyticNode.class, metaDataMap);
  }

  public TAnalyticNode() {
  }

  public TAnalyticNode(
    java.util.List<org.apache.doris.thrift.TExpr> partition_exprs,
    java.util.List<org.apache.doris.thrift.TExpr> order_by_exprs,
    java.util.List<org.apache.doris.thrift.TExpr> analytic_functions,
    int intermediate_tuple_id,
    int output_tuple_id)
  {
    this();
    this.partition_exprs = partition_exprs;
    this.order_by_exprs = order_by_exprs;
    this.analytic_functions = analytic_functions;
    this.intermediate_tuple_id = intermediate_tuple_id;
    setIntermediateTupleIdIsSet(true);
    this.output_tuple_id = output_tuple_id;
    setOutputTupleIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TAnalyticNode(TAnalyticNode other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetPartitionExprs()) {
      java.util.List<org.apache.doris.thrift.TExpr> __this__partition_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(other.partition_exprs.size());
      for (org.apache.doris.thrift.TExpr other_element : other.partition_exprs) {
        __this__partition_exprs.add(new org.apache.doris.thrift.TExpr(other_element));
      }
      this.partition_exprs = __this__partition_exprs;
    }
    if (other.isSetOrderByExprs()) {
      java.util.List<org.apache.doris.thrift.TExpr> __this__order_by_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(other.order_by_exprs.size());
      for (org.apache.doris.thrift.TExpr other_element : other.order_by_exprs) {
        __this__order_by_exprs.add(new org.apache.doris.thrift.TExpr(other_element));
      }
      this.order_by_exprs = __this__order_by_exprs;
    }
    if (other.isSetAnalyticFunctions()) {
      java.util.List<org.apache.doris.thrift.TExpr> __this__analytic_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(other.analytic_functions.size());
      for (org.apache.doris.thrift.TExpr other_element : other.analytic_functions) {
        __this__analytic_functions.add(new org.apache.doris.thrift.TExpr(other_element));
      }
      this.analytic_functions = __this__analytic_functions;
    }
    if (other.isSetWindow()) {
      this.window = new TAnalyticWindow(other.window);
    }
    this.intermediate_tuple_id = other.intermediate_tuple_id;
    this.output_tuple_id = other.output_tuple_id;
    this.buffered_tuple_id = other.buffered_tuple_id;
    if (other.isSetPartitionByEq()) {
      this.partition_by_eq = new org.apache.doris.thrift.TExpr(other.partition_by_eq);
    }
    if (other.isSetOrderByEq()) {
      this.order_by_eq = new org.apache.doris.thrift.TExpr(other.order_by_eq);
    }
  }

  @Override
  public TAnalyticNode deepCopy() {
    return new TAnalyticNode(this);
  }

  @Override
  public void clear() {
    this.partition_exprs = null;
    this.order_by_exprs = null;
    this.analytic_functions = null;
    this.window = null;
    setIntermediateTupleIdIsSet(false);
    this.intermediate_tuple_id = 0;
    setOutputTupleIdIsSet(false);
    this.output_tuple_id = 0;
    setBufferedTupleIdIsSet(false);
    this.buffered_tuple_id = 0;
    this.partition_by_eq = null;
    this.order_by_eq = null;
  }

  public int getPartitionExprsSize() {
    return (this.partition_exprs == null) ? 0 : this.partition_exprs.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<org.apache.doris.thrift.TExpr> getPartitionExprsIterator() {
    return (this.partition_exprs == null) ? null : this.partition_exprs.iterator();
  }

  public void addToPartitionExprs(org.apache.doris.thrift.TExpr elem) {
    if (this.partition_exprs == null) {
      this.partition_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>();
    }
    this.partition_exprs.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<org.apache.doris.thrift.TExpr> getPartitionExprs() {
    return this.partition_exprs;
  }

  public TAnalyticNode setPartitionExprs(@org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> partition_exprs) {
    this.partition_exprs = partition_exprs;
    return this;
  }

  public void unsetPartitionExprs() {
    this.partition_exprs = null;
  }

  /** Returns true if field partition_exprs is set (has been assigned a value) and false otherwise */
  public boolean isSetPartitionExprs() {
    return this.partition_exprs != null;
  }

  public void setPartitionExprsIsSet(boolean value) {
    if (!value) {
      this.partition_exprs = null;
    }
  }

  public int getOrderByExprsSize() {
    return (this.order_by_exprs == null) ? 0 : this.order_by_exprs.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<org.apache.doris.thrift.TExpr> getOrderByExprsIterator() {
    return (this.order_by_exprs == null) ? null : this.order_by_exprs.iterator();
  }

  public void addToOrderByExprs(org.apache.doris.thrift.TExpr elem) {
    if (this.order_by_exprs == null) {
      this.order_by_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>();
    }
    this.order_by_exprs.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<org.apache.doris.thrift.TExpr> getOrderByExprs() {
    return this.order_by_exprs;
  }

  public TAnalyticNode setOrderByExprs(@org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> order_by_exprs) {
    this.order_by_exprs = order_by_exprs;
    return this;
  }

  public void unsetOrderByExprs() {
    this.order_by_exprs = null;
  }

  /** Returns true if field order_by_exprs is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderByExprs() {
    return this.order_by_exprs != null;
  }

  public void setOrderByExprsIsSet(boolean value) {
    if (!value) {
      this.order_by_exprs = null;
    }
  }

  public int getAnalyticFunctionsSize() {
    return (this.analytic_functions == null) ? 0 : this.analytic_functions.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<org.apache.doris.thrift.TExpr> getAnalyticFunctionsIterator() {
    return (this.analytic_functions == null) ? null : this.analytic_functions.iterator();
  }

  public void addToAnalyticFunctions(org.apache.doris.thrift.TExpr elem) {
    if (this.analytic_functions == null) {
      this.analytic_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>();
    }
    this.analytic_functions.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<org.apache.doris.thrift.TExpr> getAnalyticFunctions() {
    return this.analytic_functions;
  }

  public TAnalyticNode setAnalyticFunctions(@org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> analytic_functions) {
    this.analytic_functions = analytic_functions;
    return this;
  }

  public void unsetAnalyticFunctions() {
    this.analytic_functions = null;
  }

  /** Returns true if field analytic_functions is set (has been assigned a value) and false otherwise */
  public boolean isSetAnalyticFunctions() {
    return this.analytic_functions != null;
  }

  public void setAnalyticFunctionsIsSet(boolean value) {
    if (!value) {
      this.analytic_functions = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TAnalyticWindow getWindow() {
    return this.window;
  }

  public TAnalyticNode setWindow(@org.apache.thrift.annotation.Nullable TAnalyticWindow window) {
    this.window = window;
    return this;
  }

  public void unsetWindow() {
    this.window = null;
  }

  /** Returns true if field window is set (has been assigned a value) and false otherwise */
  public boolean isSetWindow() {
    return this.window != null;
  }

  public void setWindowIsSet(boolean value) {
    if (!value) {
      this.window = null;
    }
  }

  public int getIntermediateTupleId() {
    return this.intermediate_tuple_id;
  }

  public TAnalyticNode setIntermediateTupleId(int intermediate_tuple_id) {
    this.intermediate_tuple_id = intermediate_tuple_id;
    setIntermediateTupleIdIsSet(true);
    return this;
  }

  public void unsetIntermediateTupleId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INTERMEDIATE_TUPLE_ID_ISSET_ID);
  }

  /** Returns true if field intermediate_tuple_id is set (has been assigned a value) and false otherwise */
  public boolean isSetIntermediateTupleId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INTERMEDIATE_TUPLE_ID_ISSET_ID);
  }

  public void setIntermediateTupleIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INTERMEDIATE_TUPLE_ID_ISSET_ID, value);
  }

  public int getOutputTupleId() {
    return this.output_tuple_id;
  }

  public TAnalyticNode setOutputTupleId(int output_tuple_id) {
    this.output_tuple_id = output_tuple_id;
    setOutputTupleIdIsSet(true);
    return this;
  }

  public void unsetOutputTupleId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_TUPLE_ID_ISSET_ID);
  }

  /** Returns true if field output_tuple_id is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputTupleId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_TUPLE_ID_ISSET_ID);
  }

  public void setOutputTupleIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_TUPLE_ID_ISSET_ID, value);
  }

  public int getBufferedTupleId() {
    return this.buffered_tuple_id;
  }

  public TAnalyticNode setBufferedTupleId(int buffered_tuple_id) {
    this.buffered_tuple_id = buffered_tuple_id;
    setBufferedTupleIdIsSet(true);
    return this;
  }

  public void unsetBufferedTupleId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BUFFERED_TUPLE_ID_ISSET_ID);
  }

  /** Returns true if field buffered_tuple_id is set (has been assigned a value) and false otherwise */
  public boolean isSetBufferedTupleId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BUFFERED_TUPLE_ID_ISSET_ID);
  }

  public void setBufferedTupleIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BUFFERED_TUPLE_ID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TExpr getPartitionByEq() {
    return this.partition_by_eq;
  }

  public TAnalyticNode setPartitionByEq(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr partition_by_eq) {
    this.partition_by_eq = partition_by_eq;
    return this;
  }

  public void unsetPartitionByEq() {
    this.partition_by_eq = null;
  }

  /** Returns true if field partition_by_eq is set (has been assigned a value) and false otherwise */
  public boolean isSetPartitionByEq() {
    return this.partition_by_eq != null;
  }

  public void setPartitionByEqIsSet(boolean value) {
    if (!value) {
      this.partition_by_eq = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TExpr getOrderByEq() {
    return this.order_by_eq;
  }

  public TAnalyticNode setOrderByEq(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr order_by_eq) {
    this.order_by_eq = order_by_eq;
    return this;
  }

  public void unsetOrderByEq() {
    this.order_by_eq = null;
  }

  /** Returns true if field order_by_eq is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderByEq() {
    return this.order_by_eq != null;
  }

  public void setOrderByEqIsSet(boolean value) {
    if (!value) {
      this.order_by_eq = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case PARTITION_EXPRS:
      if (value == null) {
        unsetPartitionExprs();
      } else {
        setPartitionExprs((java.util.List<org.apache.doris.thrift.TExpr>)value);
      }
      break;

    case ORDER_BY_EXPRS:
      if (value == null) {
        unsetOrderByExprs();
      } else {
        setOrderByExprs((java.util.List<org.apache.doris.thrift.TExpr>)value);
      }
      break;

    case ANALYTIC_FUNCTIONS:
      if (value == null) {
        unsetAnalyticFunctions();
      } else {
        setAnalyticFunctions((java.util.List<org.apache.doris.thrift.TExpr>)value);
      }
      break;

    case WINDOW:
      if (value == null) {
        unsetWindow();
      } else {
        setWindow((TAnalyticWindow)value);
      }
      break;

    case INTERMEDIATE_TUPLE_ID:
      if (value == null) {
        unsetIntermediateTupleId();
      } else {
        setIntermediateTupleId((java.lang.Integer)value);
      }
      break;

    case OUTPUT_TUPLE_ID:
      if (value == null) {
        unsetOutputTupleId();
      } else {
        setOutputTupleId((java.lang.Integer)value);
      }
      break;

    case BUFFERED_TUPLE_ID:
      if (value == null) {
        unsetBufferedTupleId();
      } else {
        setBufferedTupleId((java.lang.Integer)value);
      }
      break;

    case PARTITION_BY_EQ:
      if (value == null) {
        unsetPartitionByEq();
      } else {
        setPartitionByEq((org.apache.doris.thrift.TExpr)value);
      }
      break;

    case ORDER_BY_EQ:
      if (value == null) {
        unsetOrderByEq();
      } else {
        setOrderByEq((org.apache.doris.thrift.TExpr)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PARTITION_EXPRS:
      return getPartitionExprs();

    case ORDER_BY_EXPRS:
      return getOrderByExprs();

    case ANALYTIC_FUNCTIONS:
      return getAnalyticFunctions();

    case WINDOW:
      return getWindow();

    case INTERMEDIATE_TUPLE_ID:
      return getIntermediateTupleId();

    case OUTPUT_TUPLE_ID:
      return getOutputTupleId();

    case BUFFERED_TUPLE_ID:
      return getBufferedTupleId();

    case PARTITION_BY_EQ:
      return getPartitionByEq();

    case ORDER_BY_EQ:
      return getOrderByEq();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PARTITION_EXPRS:
      return isSetPartitionExprs();
    case ORDER_BY_EXPRS:
      return isSetOrderByExprs();
    case ANALYTIC_FUNCTIONS:
      return isSetAnalyticFunctions();
    case WINDOW:
      return isSetWindow();
    case INTERMEDIATE_TUPLE_ID:
      return isSetIntermediateTupleId();
    case OUTPUT_TUPLE_ID:
      return isSetOutputTupleId();
    case BUFFERED_TUPLE_ID:
      return isSetBufferedTupleId();
    case PARTITION_BY_EQ:
      return isSetPartitionByEq();
    case ORDER_BY_EQ:
      return isSetOrderByEq();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TAnalyticNode)
      return this.equals((TAnalyticNode)that);
    return false;
  }

  public boolean equals(TAnalyticNode that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_partition_exprs = true && this.isSetPartitionExprs();
    boolean that_present_partition_exprs = true && that.isSetPartitionExprs();
    if (this_present_partition_exprs || that_present_partition_exprs) {
      if (!(this_present_partition_exprs && that_present_partition_exprs))
        return false;
      if (!this.partition_exprs.equals(that.partition_exprs))
        return false;
    }

    boolean this_present_order_by_exprs = true && this.isSetOrderByExprs();
    boolean that_present_order_by_exprs = true && that.isSetOrderByExprs();
    if (this_present_order_by_exprs || that_present_order_by_exprs) {
      if (!(this_present_order_by_exprs && that_present_order_by_exprs))
        return false;
      if (!this.order_by_exprs.equals(that.order_by_exprs))
        return false;
    }

    boolean this_present_analytic_functions = true && this.isSetAnalyticFunctions();
    boolean that_present_analytic_functions = true && that.isSetAnalyticFunctions();
    if (this_present_analytic_functions || that_present_analytic_functions) {
      if (!(this_present_analytic_functions && that_present_analytic_functions))
        return false;
      if (!this.analytic_functions.equals(that.analytic_functions))
        return false;
    }

    boolean this_present_window = true && this.isSetWindow();
    boolean that_present_window = true && that.isSetWindow();
    if (this_present_window || that_present_window) {
      if (!(this_present_window && that_present_window))
        return false;
      if (!this.window.equals(that.window))
        return false;
    }

    boolean this_present_intermediate_tuple_id = true;
    boolean that_present_intermediate_tuple_id = true;
    if (this_present_intermediate_tuple_id || that_present_intermediate_tuple_id) {
      if (!(this_present_intermediate_tuple_id && that_present_intermediate_tuple_id))
        return false;
      if (this.intermediate_tuple_id != that.intermediate_tuple_id)
        return false;
    }

    boolean this_present_output_tuple_id = true;
    boolean that_present_output_tuple_id = true;
    if (this_present_output_tuple_id || that_present_output_tuple_id) {
      if (!(this_present_output_tuple_id && that_present_output_tuple_id))
        return false;
      if (this.output_tuple_id != that.output_tuple_id)
        return false;
    }

    boolean this_present_buffered_tuple_id = true && this.isSetBufferedTupleId();
    boolean that_present_buffered_tuple_id = true && that.isSetBufferedTupleId();
    if (this_present_buffered_tuple_id || that_present_buffered_tuple_id) {
      if (!(this_present_buffered_tuple_id && that_present_buffered_tuple_id))
        return false;
      if (this.buffered_tuple_id != that.buffered_tuple_id)
        return false;
    }

    boolean this_present_partition_by_eq = true && this.isSetPartitionByEq();
    boolean that_present_partition_by_eq = true && that.isSetPartitionByEq();
    if (this_present_partition_by_eq || that_present_partition_by_eq) {
      if (!(this_present_partition_by_eq && that_present_partition_by_eq))
        return false;
      if (!this.partition_by_eq.equals(that.partition_by_eq))
        return false;
    }

    boolean this_present_order_by_eq = true && this.isSetOrderByEq();
    boolean that_present_order_by_eq = true && that.isSetOrderByEq();
    if (this_present_order_by_eq || that_present_order_by_eq) {
      if (!(this_present_order_by_eq && that_present_order_by_eq))
        return false;
      if (!this.order_by_eq.equals(that.order_by_eq))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetPartitionExprs()) ? 131071 : 524287);
    if (isSetPartitionExprs())
      hashCode = hashCode * 8191 + partition_exprs.hashCode();

    hashCode = hashCode * 8191 + ((isSetOrderByExprs()) ? 131071 : 524287);
    if (isSetOrderByExprs())
      hashCode = hashCode * 8191 + order_by_exprs.hashCode();

    hashCode = hashCode * 8191 + ((isSetAnalyticFunctions()) ? 131071 : 524287);
    if (isSetAnalyticFunctions())
      hashCode = hashCode * 8191 + analytic_functions.hashCode();

    hashCode = hashCode * 8191 + ((isSetWindow()) ? 131071 : 524287);
    if (isSetWindow())
      hashCode = hashCode * 8191 + window.hashCode();

    hashCode = hashCode * 8191 + intermediate_tuple_id;

    hashCode = hashCode * 8191 + output_tuple_id;

    hashCode = hashCode * 8191 + ((isSetBufferedTupleId()) ? 131071 : 524287);
    if (isSetBufferedTupleId())
      hashCode = hashCode * 8191 + buffered_tuple_id;

    hashCode = hashCode * 8191 + ((isSetPartitionByEq()) ? 131071 : 524287);
    if (isSetPartitionByEq())
      hashCode = hashCode * 8191 + partition_by_eq.hashCode();

    hashCode = hashCode * 8191 + ((isSetOrderByEq()) ? 131071 : 524287);
    if (isSetOrderByEq())
      hashCode = hashCode * 8191 + order_by_eq.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TAnalyticNode other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetPartitionExprs(), other.isSetPartitionExprs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartitionExprs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partition_exprs, other.partition_exprs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOrderByExprs(), other.isSetOrderByExprs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderByExprs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order_by_exprs, other.order_by_exprs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAnalyticFunctions(), other.isSetAnalyticFunctions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnalyticFunctions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.analytic_functions, other.analytic_functions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetWindow(), other.isSetWindow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWindow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.window, other.window);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIntermediateTupleId(), other.isSetIntermediateTupleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntermediateTupleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediate_tuple_id, other.intermediate_tuple_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputTupleId(), other.isSetOutputTupleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputTupleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_tuple_id, other.output_tuple_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBufferedTupleId(), other.isSetBufferedTupleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBufferedTupleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buffered_tuple_id, other.buffered_tuple_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPartitionByEq(), other.isSetPartitionByEq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartitionByEq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partition_by_eq, other.partition_by_eq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOrderByEq(), other.isSetOrderByEq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderByEq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.order_by_eq, other.order_by_eq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TAnalyticNode(");
    boolean first = true;

    sb.append("partition_exprs:");
    if (this.partition_exprs == null) {
      sb.append("null");
    } else {
      sb.append(this.partition_exprs);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("order_by_exprs:");
    if (this.order_by_exprs == null) {
      sb.append("null");
    } else {
      sb.append(this.order_by_exprs);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("analytic_functions:");
    if (this.analytic_functions == null) {
      sb.append("null");
    } else {
      sb.append(this.analytic_functions);
    }
    first = false;
    if (isSetWindow()) {
      if (!first) sb.append(", ");
      sb.append("window:");
      if (this.window == null) {
        sb.append("null");
      } else {
        sb.append(this.window);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("intermediate_tuple_id:");
    sb.append(this.intermediate_tuple_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("output_tuple_id:");
    sb.append(this.output_tuple_id);
    first = false;
    if (isSetBufferedTupleId()) {
      if (!first) sb.append(", ");
      sb.append("buffered_tuple_id:");
      sb.append(this.buffered_tuple_id);
      first = false;
    }
    if (isSetPartitionByEq()) {
      if (!first) sb.append(", ");
      sb.append("partition_by_eq:");
      if (this.partition_by_eq == null) {
        sb.append("null");
      } else {
        sb.append(this.partition_by_eq);
      }
      first = false;
    }
    if (isSetOrderByEq()) {
      if (!first) sb.append(", ");
      sb.append("order_by_eq:");
      if (this.order_by_eq == null) {
        sb.append("null");
      } else {
        sb.append(this.order_by_eq);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (partition_exprs == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'partition_exprs' was not present! Struct: " + toString());
    }
    if (order_by_exprs == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'order_by_exprs' was not present! Struct: " + toString());
    }
    if (analytic_functions == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'analytic_functions' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'intermediate_tuple_id' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'output_tuple_id' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
    if (window != null) {
      window.validate();
    }
    if (partition_by_eq != null) {
      partition_by_eq.validate();
    }
    if (order_by_eq != null) {
      order_by_eq.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TAnalyticNodeStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TAnalyticNodeStandardScheme getScheme() {
      return new TAnalyticNodeStandardScheme();
    }
  }

  private static class TAnalyticNodeStandardScheme extends org.apache.thrift.scheme.StandardScheme<TAnalyticNode> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TAnalyticNode struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PARTITION_EXPRS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list682 = iprot.readListBegin();
                struct.partition_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list682.size);
                @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem683;
                for (int _i684 = 0; _i684 < _list682.size; ++_i684)
                {
                  _elem683 = new org.apache.doris.thrift.TExpr();
                  _elem683.read(iprot);
                  struct.partition_exprs.add(_elem683);
                }
                iprot.readListEnd();
              }
              struct.setPartitionExprsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORDER_BY_EXPRS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list685 = iprot.readListBegin();
                struct.order_by_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list685.size);
                @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem686;
                for (int _i687 = 0; _i687 < _list685.size; ++_i687)
                {
                  _elem686 = new org.apache.doris.thrift.TExpr();
                  _elem686.read(iprot);
                  struct.order_by_exprs.add(_elem686);
                }
                iprot.readListEnd();
              }
              struct.setOrderByExprsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ANALYTIC_FUNCTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list688 = iprot.readListBegin();
                struct.analytic_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list688.size);
                @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem689;
                for (int _i690 = 0; _i690 < _list688.size; ++_i690)
                {
                  _elem689 = new org.apache.doris.thrift.TExpr();
                  _elem689.read(iprot);
                  struct.analytic_functions.add(_elem689);
                }
                iprot.readListEnd();
              }
              struct.setAnalyticFunctionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // WINDOW
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.window = new TAnalyticWindow();
              struct.window.read(iprot);
              struct.setWindowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INTERMEDIATE_TUPLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.intermediate_tuple_id = iprot.readI32();
              struct.setIntermediateTupleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // OUTPUT_TUPLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.output_tuple_id = iprot.readI32();
              struct.setOutputTupleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BUFFERED_TUPLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.buffered_tuple_id = iprot.readI32();
              struct.setBufferedTupleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PARTITION_BY_EQ
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.partition_by_eq = new org.apache.doris.thrift.TExpr();
              struct.partition_by_eq.read(iprot);
              struct.setPartitionByEqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ORDER_BY_EQ
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.order_by_eq = new org.apache.doris.thrift.TExpr();
              struct.order_by_eq.read(iprot);
              struct.setOrderByEqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetIntermediateTupleId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'intermediate_tuple_id' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetOutputTupleId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'output_tuple_id' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TAnalyticNode struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.partition_exprs != null) {
        oprot.writeFieldBegin(PARTITION_EXPRS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.partition_exprs.size()));
          for (org.apache.doris.thrift.TExpr _iter691 : struct.partition_exprs)
          {
            _iter691.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.order_by_exprs != null) {
        oprot.writeFieldBegin(ORDER_BY_EXPRS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.order_by_exprs.size()));
          for (org.apache.doris.thrift.TExpr _iter692 : struct.order_by_exprs)
          {
            _iter692.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.analytic_functions != null) {
        oprot.writeFieldBegin(ANALYTIC_FUNCTIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.analytic_functions.size()));
          for (org.apache.doris.thrift.TExpr _iter693 : struct.analytic_functions)
          {
            _iter693.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.window != null) {
        if (struct.isSetWindow()) {
          oprot.writeFieldBegin(WINDOW_FIELD_DESC);
          struct.window.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(INTERMEDIATE_TUPLE_ID_FIELD_DESC);
      oprot.writeI32(struct.intermediate_tuple_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OUTPUT_TUPLE_ID_FIELD_DESC);
      oprot.writeI32(struct.output_tuple_id);
      oprot.writeFieldEnd();
      if (struct.isSetBufferedTupleId()) {
        oprot.writeFieldBegin(BUFFERED_TUPLE_ID_FIELD_DESC);
        oprot.writeI32(struct.buffered_tuple_id);
        oprot.writeFieldEnd();
      }
      if (struct.partition_by_eq != null) {
        if (struct.isSetPartitionByEq()) {
          oprot.writeFieldBegin(PARTITION_BY_EQ_FIELD_DESC);
          struct.partition_by_eq.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.order_by_eq != null) {
        if (struct.isSetOrderByEq()) {
          oprot.writeFieldBegin(ORDER_BY_EQ_FIELD_DESC);
          struct.order_by_eq.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TAnalyticNodeTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TAnalyticNodeTupleScheme getScheme() {
      return new TAnalyticNodeTupleScheme();
    }
  }

  private static class TAnalyticNodeTupleScheme extends org.apache.thrift.scheme.TupleScheme<TAnalyticNode> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TAnalyticNode struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.partition_exprs.size());
        for (org.apache.doris.thrift.TExpr _iter694 : struct.partition_exprs)
        {
          _iter694.write(oprot);
        }
      }
      {
        oprot.writeI32(struct.order_by_exprs.size());
        for (org.apache.doris.thrift.TExpr _iter695 : struct.order_by_exprs)
        {
          _iter695.write(oprot);
        }
      }
      {
        oprot.writeI32(struct.analytic_functions.size());
        for (org.apache.doris.thrift.TExpr _iter696 : struct.analytic_functions)
        {
          _iter696.write(oprot);
        }
      }
      oprot.writeI32(struct.intermediate_tuple_id);
      oprot.writeI32(struct.output_tuple_id);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetWindow()) {
        optionals.set(0);
      }
      if (struct.isSetBufferedTupleId()) {
        optionals.set(1);
      }
      if (struct.isSetPartitionByEq()) {
        optionals.set(2);
      }
      if (struct.isSetOrderByEq()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetWindow()) {
        struct.window.write(oprot);
      }
      if (struct.isSetBufferedTupleId()) {
        oprot.writeI32(struct.buffered_tuple_id);
      }
      if (struct.isSetPartitionByEq()) {
        struct.partition_by_eq.write(oprot);
      }
      if (struct.isSetOrderByEq()) {
        struct.order_by_eq.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TAnalyticNode struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list697 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct.partition_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list697.size);
        @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem698;
        for (int _i699 = 0; _i699 < _list697.size; ++_i699)
        {
          _elem698 = new org.apache.doris.thrift.TExpr();
          _elem698.read(iprot);
          struct.partition_exprs.add(_elem698);
        }
      }
      struct.setPartitionExprsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list700 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct.order_by_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list700.size);
        @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem701;
        for (int _i702 = 0; _i702 < _list700.size; ++_i702)
        {
          _elem701 = new org.apache.doris.thrift.TExpr();
          _elem701.read(iprot);
          struct.order_by_exprs.add(_elem701);
        }
      }
      struct.setOrderByExprsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list703 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct.analytic_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list703.size);
        @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem704;
        for (int _i705 = 0; _i705 < _list703.size; ++_i705)
        {
          _elem704 = new org.apache.doris.thrift.TExpr();
          _elem704.read(iprot);
          struct.analytic_functions.add(_elem704);
        }
      }
      struct.setAnalyticFunctionsIsSet(true);
      struct.intermediate_tuple_id = iprot.readI32();
      struct.setIntermediateTupleIdIsSet(true);
      struct.output_tuple_id = iprot.readI32();
      struct.setOutputTupleIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.window = new TAnalyticWindow();
        struct.window.read(iprot);
        struct.setWindowIsSet(true);
      }
      if (incoming.get(1)) {
        struct.buffered_tuple_id = iprot.readI32();
        struct.setBufferedTupleIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.partition_by_eq = new org.apache.doris.thrift.TExpr();
        struct.partition_by_eq.read(iprot);
        struct.setPartitionByEqIsSet(true);
      }
      if (incoming.get(3)) {
        struct.order_by_eq = new org.apache.doris.thrift.TExpr();
        struct.order_by_eq.read(iprot);
        struct.setOrderByEqIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

