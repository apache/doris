/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.18.1)", date = "2023-07-11")
public class TTransmitDataParams implements org.apache.thrift.TBase<TTransmitDataParams, TTransmitDataParams._Fields>, java.io.Serializable, Cloneable, Comparable<TTransmitDataParams> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TTransmitDataParams");

  private static final org.apache.thrift.protocol.TField PROTOCOL_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("protocol_version", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DEST_FRAGMENT_INSTANCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("dest_fragment_instance_id", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField DEST_NODE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("dest_node_id", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ROW_BATCH_FIELD_DESC = new org.apache.thrift.protocol.TField("row_batch", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField EOS_FIELD_DESC = new org.apache.thrift.protocol.TField("eos", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField BE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("be_number", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PACKET_SEQ_FIELD_DESC = new org.apache.thrift.protocol.TField("packet_seq", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField SENDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sender_id", org.apache.thrift.protocol.TType.I32, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TTransmitDataParamsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TTransmitDataParamsTupleSchemeFactory();

  /**
   * 
   * @see PaloInternalServiceVersion
   */
  public @org.apache.thrift.annotation.Nullable PaloInternalServiceVersion protocol_version; // required
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TUniqueId dest_fragment_instance_id; // optional
  public int dest_node_id; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TRowBatch row_batch; // optional
  public boolean eos; // optional
  public int be_number; // optional
  public long packet_seq; // optional
  public int sender_id; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see PaloInternalServiceVersion
     */
    PROTOCOL_VERSION((short)1, "protocol_version"),
    DEST_FRAGMENT_INSTANCE_ID((short)2, "dest_fragment_instance_id"),
    DEST_NODE_ID((short)4, "dest_node_id"),
    ROW_BATCH((short)5, "row_batch"),
    EOS((short)6, "eos"),
    BE_NUMBER((short)7, "be_number"),
    PACKET_SEQ((short)8, "packet_seq"),
    SENDER_ID((short)9, "sender_id");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROTOCOL_VERSION
          return PROTOCOL_VERSION;
        case 2: // DEST_FRAGMENT_INSTANCE_ID
          return DEST_FRAGMENT_INSTANCE_ID;
        case 4: // DEST_NODE_ID
          return DEST_NODE_ID;
        case 5: // ROW_BATCH
          return ROW_BATCH;
        case 6: // EOS
          return EOS;
        case 7: // BE_NUMBER
          return BE_NUMBER;
        case 8: // PACKET_SEQ
          return PACKET_SEQ;
        case 9: // SENDER_ID
          return SENDER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DEST_NODE_ID_ISSET_ID = 0;
  private static final int __EOS_ISSET_ID = 1;
  private static final int __BE_NUMBER_ISSET_ID = 2;
  private static final int __PACKET_SEQ_ISSET_ID = 3;
  private static final int __SENDER_ID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DEST_FRAGMENT_INSTANCE_ID,_Fields.DEST_NODE_ID,_Fields.ROW_BATCH,_Fields.EOS,_Fields.BE_NUMBER,_Fields.PACKET_SEQ,_Fields.SENDER_ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROTOCOL_VERSION, new org.apache.thrift.meta_data.FieldMetaData("protocol_version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PaloInternalServiceVersion.class)));
    tmpMap.put(_Fields.DEST_FRAGMENT_INSTANCE_ID, new org.apache.thrift.meta_data.FieldMetaData("dest_fragment_instance_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TUniqueId.class)));
    tmpMap.put(_Fields.DEST_NODE_ID, new org.apache.thrift.meta_data.FieldMetaData("dest_node_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TPlanNodeId")));
    tmpMap.put(_Fields.ROW_BATCH, new org.apache.thrift.meta_data.FieldMetaData("row_batch", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TRowBatch.class)));
    tmpMap.put(_Fields.EOS, new org.apache.thrift.meta_data.FieldMetaData("eos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.BE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("be_number", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PACKET_SEQ, new org.apache.thrift.meta_data.FieldMetaData("packet_seq", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SENDER_ID, new org.apache.thrift.meta_data.FieldMetaData("sender_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TTransmitDataParams.class, metaDataMap);
  }

  public TTransmitDataParams() {
  }

  public TTransmitDataParams(
    PaloInternalServiceVersion protocol_version)
  {
    this();
    this.protocol_version = protocol_version;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TTransmitDataParams(TTransmitDataParams other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProtocolVersion()) {
      this.protocol_version = other.protocol_version;
    }
    if (other.isSetDestFragmentInstanceId()) {
      this.dest_fragment_instance_id = new org.apache.doris.thrift.TUniqueId(other.dest_fragment_instance_id);
    }
    this.dest_node_id = other.dest_node_id;
    if (other.isSetRowBatch()) {
      this.row_batch = new org.apache.doris.thrift.TRowBatch(other.row_batch);
    }
    this.eos = other.eos;
    this.be_number = other.be_number;
    this.packet_seq = other.packet_seq;
    this.sender_id = other.sender_id;
  }

  @Override
  public TTransmitDataParams deepCopy() {
    return new TTransmitDataParams(this);
  }

  @Override
  public void clear() {
    this.protocol_version = null;
    this.dest_fragment_instance_id = null;
    setDestNodeIdIsSet(false);
    this.dest_node_id = 0;
    this.row_batch = null;
    setEosIsSet(false);
    this.eos = false;
    setBeNumberIsSet(false);
    this.be_number = 0;
    setPacketSeqIsSet(false);
    this.packet_seq = 0;
    setSenderIdIsSet(false);
    this.sender_id = 0;
  }

  /**
   * 
   * @see PaloInternalServiceVersion
   */
  @org.apache.thrift.annotation.Nullable
  public PaloInternalServiceVersion getProtocolVersion() {
    return this.protocol_version;
  }

  /**
   * 
   * @see PaloInternalServiceVersion
   */
  public TTransmitDataParams setProtocolVersion(@org.apache.thrift.annotation.Nullable PaloInternalServiceVersion protocol_version) {
    this.protocol_version = protocol_version;
    return this;
  }

  public void unsetProtocolVersion() {
    this.protocol_version = null;
  }

  /** Returns true if field protocol_version is set (has been assigned a value) and false otherwise */
  public boolean isSetProtocolVersion() {
    return this.protocol_version != null;
  }

  public void setProtocolVersionIsSet(boolean value) {
    if (!value) {
      this.protocol_version = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TUniqueId getDestFragmentInstanceId() {
    return this.dest_fragment_instance_id;
  }

  public TTransmitDataParams setDestFragmentInstanceId(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TUniqueId dest_fragment_instance_id) {
    this.dest_fragment_instance_id = dest_fragment_instance_id;
    return this;
  }

  public void unsetDestFragmentInstanceId() {
    this.dest_fragment_instance_id = null;
  }

  /** Returns true if field dest_fragment_instance_id is set (has been assigned a value) and false otherwise */
  public boolean isSetDestFragmentInstanceId() {
    return this.dest_fragment_instance_id != null;
  }

  public void setDestFragmentInstanceIdIsSet(boolean value) {
    if (!value) {
      this.dest_fragment_instance_id = null;
    }
  }

  public int getDestNodeId() {
    return this.dest_node_id;
  }

  public TTransmitDataParams setDestNodeId(int dest_node_id) {
    this.dest_node_id = dest_node_id;
    setDestNodeIdIsSet(true);
    return this;
  }

  public void unsetDestNodeId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DEST_NODE_ID_ISSET_ID);
  }

  /** Returns true if field dest_node_id is set (has been assigned a value) and false otherwise */
  public boolean isSetDestNodeId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DEST_NODE_ID_ISSET_ID);
  }

  public void setDestNodeIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DEST_NODE_ID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TRowBatch getRowBatch() {
    return this.row_batch;
  }

  public TTransmitDataParams setRowBatch(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TRowBatch row_batch) {
    this.row_batch = row_batch;
    return this;
  }

  public void unsetRowBatch() {
    this.row_batch = null;
  }

  /** Returns true if field row_batch is set (has been assigned a value) and false otherwise */
  public boolean isSetRowBatch() {
    return this.row_batch != null;
  }

  public void setRowBatchIsSet(boolean value) {
    if (!value) {
      this.row_batch = null;
    }
  }

  public boolean isEos() {
    return this.eos;
  }

  public TTransmitDataParams setEos(boolean eos) {
    this.eos = eos;
    setEosIsSet(true);
    return this;
  }

  public void unsetEos() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EOS_ISSET_ID);
  }

  /** Returns true if field eos is set (has been assigned a value) and false otherwise */
  public boolean isSetEos() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EOS_ISSET_ID);
  }

  public void setEosIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EOS_ISSET_ID, value);
  }

  public int getBeNumber() {
    return this.be_number;
  }

  public TTransmitDataParams setBeNumber(int be_number) {
    this.be_number = be_number;
    setBeNumberIsSet(true);
    return this;
  }

  public void unsetBeNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BE_NUMBER_ISSET_ID);
  }

  /** Returns true if field be_number is set (has been assigned a value) and false otherwise */
  public boolean isSetBeNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BE_NUMBER_ISSET_ID);
  }

  public void setBeNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BE_NUMBER_ISSET_ID, value);
  }

  public long getPacketSeq() {
    return this.packet_seq;
  }

  public TTransmitDataParams setPacketSeq(long packet_seq) {
    this.packet_seq = packet_seq;
    setPacketSeqIsSet(true);
    return this;
  }

  public void unsetPacketSeq() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PACKET_SEQ_ISSET_ID);
  }

  /** Returns true if field packet_seq is set (has been assigned a value) and false otherwise */
  public boolean isSetPacketSeq() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PACKET_SEQ_ISSET_ID);
  }

  public void setPacketSeqIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PACKET_SEQ_ISSET_ID, value);
  }

  public int getSenderId() {
    return this.sender_id;
  }

  public TTransmitDataParams setSenderId(int sender_id) {
    this.sender_id = sender_id;
    setSenderIdIsSet(true);
    return this;
  }

  public void unsetSenderId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SENDER_ID_ISSET_ID);
  }

  /** Returns true if field sender_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSenderId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SENDER_ID_ISSET_ID);
  }

  public void setSenderIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SENDER_ID_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case PROTOCOL_VERSION:
      if (value == null) {
        unsetProtocolVersion();
      } else {
        setProtocolVersion((PaloInternalServiceVersion)value);
      }
      break;

    case DEST_FRAGMENT_INSTANCE_ID:
      if (value == null) {
        unsetDestFragmentInstanceId();
      } else {
        setDestFragmentInstanceId((org.apache.doris.thrift.TUniqueId)value);
      }
      break;

    case DEST_NODE_ID:
      if (value == null) {
        unsetDestNodeId();
      } else {
        setDestNodeId((java.lang.Integer)value);
      }
      break;

    case ROW_BATCH:
      if (value == null) {
        unsetRowBatch();
      } else {
        setRowBatch((org.apache.doris.thrift.TRowBatch)value);
      }
      break;

    case EOS:
      if (value == null) {
        unsetEos();
      } else {
        setEos((java.lang.Boolean)value);
      }
      break;

    case BE_NUMBER:
      if (value == null) {
        unsetBeNumber();
      } else {
        setBeNumber((java.lang.Integer)value);
      }
      break;

    case PACKET_SEQ:
      if (value == null) {
        unsetPacketSeq();
      } else {
        setPacketSeq((java.lang.Long)value);
      }
      break;

    case SENDER_ID:
      if (value == null) {
        unsetSenderId();
      } else {
        setSenderId((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PROTOCOL_VERSION:
      return getProtocolVersion();

    case DEST_FRAGMENT_INSTANCE_ID:
      return getDestFragmentInstanceId();

    case DEST_NODE_ID:
      return getDestNodeId();

    case ROW_BATCH:
      return getRowBatch();

    case EOS:
      return isEos();

    case BE_NUMBER:
      return getBeNumber();

    case PACKET_SEQ:
      return getPacketSeq();

    case SENDER_ID:
      return getSenderId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PROTOCOL_VERSION:
      return isSetProtocolVersion();
    case DEST_FRAGMENT_INSTANCE_ID:
      return isSetDestFragmentInstanceId();
    case DEST_NODE_ID:
      return isSetDestNodeId();
    case ROW_BATCH:
      return isSetRowBatch();
    case EOS:
      return isSetEos();
    case BE_NUMBER:
      return isSetBeNumber();
    case PACKET_SEQ:
      return isSetPacketSeq();
    case SENDER_ID:
      return isSetSenderId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TTransmitDataParams)
      return this.equals((TTransmitDataParams)that);
    return false;
  }

  public boolean equals(TTransmitDataParams that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_protocol_version = true && this.isSetProtocolVersion();
    boolean that_present_protocol_version = true && that.isSetProtocolVersion();
    if (this_present_protocol_version || that_present_protocol_version) {
      if (!(this_present_protocol_version && that_present_protocol_version))
        return false;
      if (!this.protocol_version.equals(that.protocol_version))
        return false;
    }

    boolean this_present_dest_fragment_instance_id = true && this.isSetDestFragmentInstanceId();
    boolean that_present_dest_fragment_instance_id = true && that.isSetDestFragmentInstanceId();
    if (this_present_dest_fragment_instance_id || that_present_dest_fragment_instance_id) {
      if (!(this_present_dest_fragment_instance_id && that_present_dest_fragment_instance_id))
        return false;
      if (!this.dest_fragment_instance_id.equals(that.dest_fragment_instance_id))
        return false;
    }

    boolean this_present_dest_node_id = true && this.isSetDestNodeId();
    boolean that_present_dest_node_id = true && that.isSetDestNodeId();
    if (this_present_dest_node_id || that_present_dest_node_id) {
      if (!(this_present_dest_node_id && that_present_dest_node_id))
        return false;
      if (this.dest_node_id != that.dest_node_id)
        return false;
    }

    boolean this_present_row_batch = true && this.isSetRowBatch();
    boolean that_present_row_batch = true && that.isSetRowBatch();
    if (this_present_row_batch || that_present_row_batch) {
      if (!(this_present_row_batch && that_present_row_batch))
        return false;
      if (!this.row_batch.equals(that.row_batch))
        return false;
    }

    boolean this_present_eos = true && this.isSetEos();
    boolean that_present_eos = true && that.isSetEos();
    if (this_present_eos || that_present_eos) {
      if (!(this_present_eos && that_present_eos))
        return false;
      if (this.eos != that.eos)
        return false;
    }

    boolean this_present_be_number = true && this.isSetBeNumber();
    boolean that_present_be_number = true && that.isSetBeNumber();
    if (this_present_be_number || that_present_be_number) {
      if (!(this_present_be_number && that_present_be_number))
        return false;
      if (this.be_number != that.be_number)
        return false;
    }

    boolean this_present_packet_seq = true && this.isSetPacketSeq();
    boolean that_present_packet_seq = true && that.isSetPacketSeq();
    if (this_present_packet_seq || that_present_packet_seq) {
      if (!(this_present_packet_seq && that_present_packet_seq))
        return false;
      if (this.packet_seq != that.packet_seq)
        return false;
    }

    boolean this_present_sender_id = true && this.isSetSenderId();
    boolean that_present_sender_id = true && that.isSetSenderId();
    if (this_present_sender_id || that_present_sender_id) {
      if (!(this_present_sender_id && that_present_sender_id))
        return false;
      if (this.sender_id != that.sender_id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetProtocolVersion()) ? 131071 : 524287);
    if (isSetProtocolVersion())
      hashCode = hashCode * 8191 + protocol_version.getValue();

    hashCode = hashCode * 8191 + ((isSetDestFragmentInstanceId()) ? 131071 : 524287);
    if (isSetDestFragmentInstanceId())
      hashCode = hashCode * 8191 + dest_fragment_instance_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetDestNodeId()) ? 131071 : 524287);
    if (isSetDestNodeId())
      hashCode = hashCode * 8191 + dest_node_id;

    hashCode = hashCode * 8191 + ((isSetRowBatch()) ? 131071 : 524287);
    if (isSetRowBatch())
      hashCode = hashCode * 8191 + row_batch.hashCode();

    hashCode = hashCode * 8191 + ((isSetEos()) ? 131071 : 524287);
    if (isSetEos())
      hashCode = hashCode * 8191 + ((eos) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetBeNumber()) ? 131071 : 524287);
    if (isSetBeNumber())
      hashCode = hashCode * 8191 + be_number;

    hashCode = hashCode * 8191 + ((isSetPacketSeq()) ? 131071 : 524287);
    if (isSetPacketSeq())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(packet_seq);

    hashCode = hashCode * 8191 + ((isSetSenderId()) ? 131071 : 524287);
    if (isSetSenderId())
      hashCode = hashCode * 8191 + sender_id;

    return hashCode;
  }

  @Override
  public int compareTo(TTransmitDataParams other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetProtocolVersion(), other.isSetProtocolVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProtocolVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.protocol_version, other.protocol_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDestFragmentInstanceId(), other.isSetDestFragmentInstanceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDestFragmentInstanceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dest_fragment_instance_id, other.dest_fragment_instance_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDestNodeId(), other.isSetDestNodeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDestNodeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dest_node_id, other.dest_node_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRowBatch(), other.isSetRowBatch());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRowBatch()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.row_batch, other.row_batch);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEos(), other.isSetEos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.eos, other.eos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBeNumber(), other.isSetBeNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.be_number, other.be_number);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPacketSeq(), other.isSetPacketSeq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPacketSeq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packet_seq, other.packet_seq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSenderId(), other.isSetSenderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSenderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sender_id, other.sender_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TTransmitDataParams(");
    boolean first = true;

    sb.append("protocol_version:");
    if (this.protocol_version == null) {
      sb.append("null");
    } else {
      sb.append(this.protocol_version);
    }
    first = false;
    if (isSetDestFragmentInstanceId()) {
      if (!first) sb.append(", ");
      sb.append("dest_fragment_instance_id:");
      if (this.dest_fragment_instance_id == null) {
        sb.append("null");
      } else {
        sb.append(this.dest_fragment_instance_id);
      }
      first = false;
    }
    if (isSetDestNodeId()) {
      if (!first) sb.append(", ");
      sb.append("dest_node_id:");
      sb.append(this.dest_node_id);
      first = false;
    }
    if (isSetRowBatch()) {
      if (!first) sb.append(", ");
      sb.append("row_batch:");
      if (this.row_batch == null) {
        sb.append("null");
      } else {
        sb.append(this.row_batch);
      }
      first = false;
    }
    if (isSetEos()) {
      if (!first) sb.append(", ");
      sb.append("eos:");
      sb.append(this.eos);
      first = false;
    }
    if (isSetBeNumber()) {
      if (!first) sb.append(", ");
      sb.append("be_number:");
      sb.append(this.be_number);
      first = false;
    }
    if (isSetPacketSeq()) {
      if (!first) sb.append(", ");
      sb.append("packet_seq:");
      sb.append(this.packet_seq);
      first = false;
    }
    if (isSetSenderId()) {
      if (!first) sb.append(", ");
      sb.append("sender_id:");
      sb.append(this.sender_id);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (protocol_version == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'protocol_version' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (dest_fragment_instance_id != null) {
      dest_fragment_instance_id.validate();
    }
    if (row_batch != null) {
      row_batch.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TTransmitDataParamsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TTransmitDataParamsStandardScheme getScheme() {
      return new TTransmitDataParamsStandardScheme();
    }
  }

  private static class TTransmitDataParamsStandardScheme extends org.apache.thrift.scheme.StandardScheme<TTransmitDataParams> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TTransmitDataParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROTOCOL_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.protocol_version = org.apache.doris.thrift.PaloInternalServiceVersion.findByValue(iprot.readI32());
              struct.setProtocolVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DEST_FRAGMENT_INSTANCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.dest_fragment_instance_id = new org.apache.doris.thrift.TUniqueId();
              struct.dest_fragment_instance_id.read(iprot);
              struct.setDestFragmentInstanceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DEST_NODE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dest_node_id = iprot.readI32();
              struct.setDestNodeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ROW_BATCH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.row_batch = new org.apache.doris.thrift.TRowBatch();
              struct.row_batch.read(iprot);
              struct.setRowBatchIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EOS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.eos = iprot.readBool();
              struct.setEosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BE_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.be_number = iprot.readI32();
              struct.setBeNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PACKET_SEQ
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.packet_seq = iprot.readI64();
              struct.setPacketSeqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SENDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sender_id = iprot.readI32();
              struct.setSenderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TTransmitDataParams struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.protocol_version != null) {
        oprot.writeFieldBegin(PROTOCOL_VERSION_FIELD_DESC);
        oprot.writeI32(struct.protocol_version.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.dest_fragment_instance_id != null) {
        if (struct.isSetDestFragmentInstanceId()) {
          oprot.writeFieldBegin(DEST_FRAGMENT_INSTANCE_ID_FIELD_DESC);
          struct.dest_fragment_instance_id.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDestNodeId()) {
        oprot.writeFieldBegin(DEST_NODE_ID_FIELD_DESC);
        oprot.writeI32(struct.dest_node_id);
        oprot.writeFieldEnd();
      }
      if (struct.row_batch != null) {
        if (struct.isSetRowBatch()) {
          oprot.writeFieldBegin(ROW_BATCH_FIELD_DESC);
          struct.row_batch.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetEos()) {
        oprot.writeFieldBegin(EOS_FIELD_DESC);
        oprot.writeBool(struct.eos);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBeNumber()) {
        oprot.writeFieldBegin(BE_NUMBER_FIELD_DESC);
        oprot.writeI32(struct.be_number);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPacketSeq()) {
        oprot.writeFieldBegin(PACKET_SEQ_FIELD_DESC);
        oprot.writeI64(struct.packet_seq);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSenderId()) {
        oprot.writeFieldBegin(SENDER_ID_FIELD_DESC);
        oprot.writeI32(struct.sender_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TTransmitDataParamsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TTransmitDataParamsTupleScheme getScheme() {
      return new TTransmitDataParamsTupleScheme();
    }
  }

  private static class TTransmitDataParamsTupleScheme extends org.apache.thrift.scheme.TupleScheme<TTransmitDataParams> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TTransmitDataParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.protocol_version.getValue());
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDestFragmentInstanceId()) {
        optionals.set(0);
      }
      if (struct.isSetDestNodeId()) {
        optionals.set(1);
      }
      if (struct.isSetRowBatch()) {
        optionals.set(2);
      }
      if (struct.isSetEos()) {
        optionals.set(3);
      }
      if (struct.isSetBeNumber()) {
        optionals.set(4);
      }
      if (struct.isSetPacketSeq()) {
        optionals.set(5);
      }
      if (struct.isSetSenderId()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetDestFragmentInstanceId()) {
        struct.dest_fragment_instance_id.write(oprot);
      }
      if (struct.isSetDestNodeId()) {
        oprot.writeI32(struct.dest_node_id);
      }
      if (struct.isSetRowBatch()) {
        struct.row_batch.write(oprot);
      }
      if (struct.isSetEos()) {
        oprot.writeBool(struct.eos);
      }
      if (struct.isSetBeNumber()) {
        oprot.writeI32(struct.be_number);
      }
      if (struct.isSetPacketSeq()) {
        oprot.writeI64(struct.packet_seq);
      }
      if (struct.isSetSenderId()) {
        oprot.writeI32(struct.sender_id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TTransmitDataParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.protocol_version = org.apache.doris.thrift.PaloInternalServiceVersion.findByValue(iprot.readI32());
      struct.setProtocolVersionIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.dest_fragment_instance_id = new org.apache.doris.thrift.TUniqueId();
        struct.dest_fragment_instance_id.read(iprot);
        struct.setDestFragmentInstanceIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.dest_node_id = iprot.readI32();
        struct.setDestNodeIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.row_batch = new org.apache.doris.thrift.TRowBatch();
        struct.row_batch.read(iprot);
        struct.setRowBatchIsSet(true);
      }
      if (incoming.get(3)) {
        struct.eos = iprot.readBool();
        struct.setEosIsSet(true);
      }
      if (incoming.get(4)) {
        struct.be_number = iprot.readI32();
        struct.setBeNumberIsSet(true);
      }
      if (incoming.get(5)) {
        struct.packet_seq = iprot.readI64();
        struct.setPacketSeqIsSet(true);
      }
      if (incoming.get(6)) {
        struct.sender_id = iprot.readI32();
        struct.setSenderIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

