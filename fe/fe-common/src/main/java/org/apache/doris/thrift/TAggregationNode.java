/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.18.1)", date = "2023-07-11")
public class TAggregationNode implements org.apache.thrift.TBase<TAggregationNode, TAggregationNode._Fields>, java.io.Serializable, Cloneable, Comparable<TAggregationNode> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAggregationNode");

  private static final org.apache.thrift.protocol.TField GROUPING_EXPRS_FIELD_DESC = new org.apache.thrift.protocol.TField("grouping_exprs", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField AGGREGATE_FUNCTIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("aggregate_functions", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField INTERMEDIATE_TUPLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediate_tuple_id", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField OUTPUT_TUPLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("output_tuple_id", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField NEED_FINALIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("need_finalize", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField USE_STREAMING_PREAGGREGATION_FIELD_DESC = new org.apache.thrift.protocol.TField("use_streaming_preaggregation", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField AGG_SORT_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("agg_sort_infos", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField IS_FIRST_PHASE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_first_phase", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField USE_FIXED_LENGTH_SERIALIZATION_OPT_FIELD_DESC = new org.apache.thrift.protocol.TField("use_fixed_length_serialization_opt", org.apache.thrift.protocol.TType.BOOL, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TAggregationNodeStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TAggregationNodeTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> grouping_exprs; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> aggregate_functions; // required
  public int intermediate_tuple_id; // required
  public int output_tuple_id; // required
  public boolean need_finalize; // required
  public boolean use_streaming_preaggregation; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<TSortInfo> agg_sort_infos; // optional
  public boolean is_first_phase; // optional
  public boolean use_fixed_length_serialization_opt; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GROUPING_EXPRS((short)1, "grouping_exprs"),
    AGGREGATE_FUNCTIONS((short)2, "aggregate_functions"),
    INTERMEDIATE_TUPLE_ID((short)3, "intermediate_tuple_id"),
    OUTPUT_TUPLE_ID((short)4, "output_tuple_id"),
    NEED_FINALIZE((short)5, "need_finalize"),
    USE_STREAMING_PREAGGREGATION((short)6, "use_streaming_preaggregation"),
    AGG_SORT_INFOS((short)7, "agg_sort_infos"),
    IS_FIRST_PHASE((short)8, "is_first_phase"),
    USE_FIXED_LENGTH_SERIALIZATION_OPT((short)9, "use_fixed_length_serialization_opt");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GROUPING_EXPRS
          return GROUPING_EXPRS;
        case 2: // AGGREGATE_FUNCTIONS
          return AGGREGATE_FUNCTIONS;
        case 3: // INTERMEDIATE_TUPLE_ID
          return INTERMEDIATE_TUPLE_ID;
        case 4: // OUTPUT_TUPLE_ID
          return OUTPUT_TUPLE_ID;
        case 5: // NEED_FINALIZE
          return NEED_FINALIZE;
        case 6: // USE_STREAMING_PREAGGREGATION
          return USE_STREAMING_PREAGGREGATION;
        case 7: // AGG_SORT_INFOS
          return AGG_SORT_INFOS;
        case 8: // IS_FIRST_PHASE
          return IS_FIRST_PHASE;
        case 9: // USE_FIXED_LENGTH_SERIALIZATION_OPT
          return USE_FIXED_LENGTH_SERIALIZATION_OPT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INTERMEDIATE_TUPLE_ID_ISSET_ID = 0;
  private static final int __OUTPUT_TUPLE_ID_ISSET_ID = 1;
  private static final int __NEED_FINALIZE_ISSET_ID = 2;
  private static final int __USE_STREAMING_PREAGGREGATION_ISSET_ID = 3;
  private static final int __IS_FIRST_PHASE_ISSET_ID = 4;
  private static final int __USE_FIXED_LENGTH_SERIALIZATION_OPT_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.GROUPING_EXPRS,_Fields.USE_STREAMING_PREAGGREGATION,_Fields.AGG_SORT_INFOS,_Fields.IS_FIRST_PHASE,_Fields.USE_FIXED_LENGTH_SERIALIZATION_OPT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GROUPING_EXPRS, new org.apache.thrift.meta_data.FieldMetaData("grouping_exprs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class))));
    tmpMap.put(_Fields.AGGREGATE_FUNCTIONS, new org.apache.thrift.meta_data.FieldMetaData("aggregate_functions", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TExpr.class))));
    tmpMap.put(_Fields.INTERMEDIATE_TUPLE_ID, new org.apache.thrift.meta_data.FieldMetaData("intermediate_tuple_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TTupleId")));
    tmpMap.put(_Fields.OUTPUT_TUPLE_ID, new org.apache.thrift.meta_data.FieldMetaData("output_tuple_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "TTupleId")));
    tmpMap.put(_Fields.NEED_FINALIZE, new org.apache.thrift.meta_data.FieldMetaData("need_finalize", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.USE_STREAMING_PREAGGREGATION, new org.apache.thrift.meta_data.FieldMetaData("use_streaming_preaggregation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.AGG_SORT_INFOS, new org.apache.thrift.meta_data.FieldMetaData("agg_sort_infos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TSortInfo.class))));
    tmpMap.put(_Fields.IS_FIRST_PHASE, new org.apache.thrift.meta_data.FieldMetaData("is_first_phase", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.USE_FIXED_LENGTH_SERIALIZATION_OPT, new org.apache.thrift.meta_data.FieldMetaData("use_fixed_length_serialization_opt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TAggregationNode.class, metaDataMap);
  }

  public TAggregationNode() {
  }

  public TAggregationNode(
    java.util.List<org.apache.doris.thrift.TExpr> aggregate_functions,
    int intermediate_tuple_id,
    int output_tuple_id,
    boolean need_finalize)
  {
    this();
    this.aggregate_functions = aggregate_functions;
    this.intermediate_tuple_id = intermediate_tuple_id;
    setIntermediateTupleIdIsSet(true);
    this.output_tuple_id = output_tuple_id;
    setOutputTupleIdIsSet(true);
    this.need_finalize = need_finalize;
    setNeedFinalizeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TAggregationNode(TAggregationNode other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetGroupingExprs()) {
      java.util.List<org.apache.doris.thrift.TExpr> __this__grouping_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(other.grouping_exprs.size());
      for (org.apache.doris.thrift.TExpr other_element : other.grouping_exprs) {
        __this__grouping_exprs.add(new org.apache.doris.thrift.TExpr(other_element));
      }
      this.grouping_exprs = __this__grouping_exprs;
    }
    if (other.isSetAggregateFunctions()) {
      java.util.List<org.apache.doris.thrift.TExpr> __this__aggregate_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(other.aggregate_functions.size());
      for (org.apache.doris.thrift.TExpr other_element : other.aggregate_functions) {
        __this__aggregate_functions.add(new org.apache.doris.thrift.TExpr(other_element));
      }
      this.aggregate_functions = __this__aggregate_functions;
    }
    this.intermediate_tuple_id = other.intermediate_tuple_id;
    this.output_tuple_id = other.output_tuple_id;
    this.need_finalize = other.need_finalize;
    this.use_streaming_preaggregation = other.use_streaming_preaggregation;
    if (other.isSetAggSortInfos()) {
      java.util.List<TSortInfo> __this__agg_sort_infos = new java.util.ArrayList<TSortInfo>(other.agg_sort_infos.size());
      for (TSortInfo other_element : other.agg_sort_infos) {
        __this__agg_sort_infos.add(new TSortInfo(other_element));
      }
      this.agg_sort_infos = __this__agg_sort_infos;
    }
    this.is_first_phase = other.is_first_phase;
    this.use_fixed_length_serialization_opt = other.use_fixed_length_serialization_opt;
  }

  @Override
  public TAggregationNode deepCopy() {
    return new TAggregationNode(this);
  }

  @Override
  public void clear() {
    this.grouping_exprs = null;
    this.aggregate_functions = null;
    setIntermediateTupleIdIsSet(false);
    this.intermediate_tuple_id = 0;
    setOutputTupleIdIsSet(false);
    this.output_tuple_id = 0;
    setNeedFinalizeIsSet(false);
    this.need_finalize = false;
    setUseStreamingPreaggregationIsSet(false);
    this.use_streaming_preaggregation = false;
    this.agg_sort_infos = null;
    setIsFirstPhaseIsSet(false);
    this.is_first_phase = false;
    setUseFixedLengthSerializationOptIsSet(false);
    this.use_fixed_length_serialization_opt = false;
  }

  public int getGroupingExprsSize() {
    return (this.grouping_exprs == null) ? 0 : this.grouping_exprs.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<org.apache.doris.thrift.TExpr> getGroupingExprsIterator() {
    return (this.grouping_exprs == null) ? null : this.grouping_exprs.iterator();
  }

  public void addToGroupingExprs(org.apache.doris.thrift.TExpr elem) {
    if (this.grouping_exprs == null) {
      this.grouping_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>();
    }
    this.grouping_exprs.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<org.apache.doris.thrift.TExpr> getGroupingExprs() {
    return this.grouping_exprs;
  }

  public TAggregationNode setGroupingExprs(@org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> grouping_exprs) {
    this.grouping_exprs = grouping_exprs;
    return this;
  }

  public void unsetGroupingExprs() {
    this.grouping_exprs = null;
  }

  /** Returns true if field grouping_exprs is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupingExprs() {
    return this.grouping_exprs != null;
  }

  public void setGroupingExprsIsSet(boolean value) {
    if (!value) {
      this.grouping_exprs = null;
    }
  }

  public int getAggregateFunctionsSize() {
    return (this.aggregate_functions == null) ? 0 : this.aggregate_functions.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<org.apache.doris.thrift.TExpr> getAggregateFunctionsIterator() {
    return (this.aggregate_functions == null) ? null : this.aggregate_functions.iterator();
  }

  public void addToAggregateFunctions(org.apache.doris.thrift.TExpr elem) {
    if (this.aggregate_functions == null) {
      this.aggregate_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>();
    }
    this.aggregate_functions.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<org.apache.doris.thrift.TExpr> getAggregateFunctions() {
    return this.aggregate_functions;
  }

  public TAggregationNode setAggregateFunctions(@org.apache.thrift.annotation.Nullable java.util.List<org.apache.doris.thrift.TExpr> aggregate_functions) {
    this.aggregate_functions = aggregate_functions;
    return this;
  }

  public void unsetAggregateFunctions() {
    this.aggregate_functions = null;
  }

  /** Returns true if field aggregate_functions is set (has been assigned a value) and false otherwise */
  public boolean isSetAggregateFunctions() {
    return this.aggregate_functions != null;
  }

  public void setAggregateFunctionsIsSet(boolean value) {
    if (!value) {
      this.aggregate_functions = null;
    }
  }

  public int getIntermediateTupleId() {
    return this.intermediate_tuple_id;
  }

  public TAggregationNode setIntermediateTupleId(int intermediate_tuple_id) {
    this.intermediate_tuple_id = intermediate_tuple_id;
    setIntermediateTupleIdIsSet(true);
    return this;
  }

  public void unsetIntermediateTupleId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INTERMEDIATE_TUPLE_ID_ISSET_ID);
  }

  /** Returns true if field intermediate_tuple_id is set (has been assigned a value) and false otherwise */
  public boolean isSetIntermediateTupleId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INTERMEDIATE_TUPLE_ID_ISSET_ID);
  }

  public void setIntermediateTupleIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INTERMEDIATE_TUPLE_ID_ISSET_ID, value);
  }

  public int getOutputTupleId() {
    return this.output_tuple_id;
  }

  public TAggregationNode setOutputTupleId(int output_tuple_id) {
    this.output_tuple_id = output_tuple_id;
    setOutputTupleIdIsSet(true);
    return this;
  }

  public void unsetOutputTupleId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OUTPUT_TUPLE_ID_ISSET_ID);
  }

  /** Returns true if field output_tuple_id is set (has been assigned a value) and false otherwise */
  public boolean isSetOutputTupleId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OUTPUT_TUPLE_ID_ISSET_ID);
  }

  public void setOutputTupleIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OUTPUT_TUPLE_ID_ISSET_ID, value);
  }

  public boolean isNeedFinalize() {
    return this.need_finalize;
  }

  public TAggregationNode setNeedFinalize(boolean need_finalize) {
    this.need_finalize = need_finalize;
    setNeedFinalizeIsSet(true);
    return this;
  }

  public void unsetNeedFinalize() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEED_FINALIZE_ISSET_ID);
  }

  /** Returns true if field need_finalize is set (has been assigned a value) and false otherwise */
  public boolean isSetNeedFinalize() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEED_FINALIZE_ISSET_ID);
  }

  public void setNeedFinalizeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEED_FINALIZE_ISSET_ID, value);
  }

  public boolean isUseStreamingPreaggregation() {
    return this.use_streaming_preaggregation;
  }

  public TAggregationNode setUseStreamingPreaggregation(boolean use_streaming_preaggregation) {
    this.use_streaming_preaggregation = use_streaming_preaggregation;
    setUseStreamingPreaggregationIsSet(true);
    return this;
  }

  public void unsetUseStreamingPreaggregation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USE_STREAMING_PREAGGREGATION_ISSET_ID);
  }

  /** Returns true if field use_streaming_preaggregation is set (has been assigned a value) and false otherwise */
  public boolean isSetUseStreamingPreaggregation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USE_STREAMING_PREAGGREGATION_ISSET_ID);
  }

  public void setUseStreamingPreaggregationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USE_STREAMING_PREAGGREGATION_ISSET_ID, value);
  }

  public int getAggSortInfosSize() {
    return (this.agg_sort_infos == null) ? 0 : this.agg_sort_infos.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TSortInfo> getAggSortInfosIterator() {
    return (this.agg_sort_infos == null) ? null : this.agg_sort_infos.iterator();
  }

  public void addToAggSortInfos(TSortInfo elem) {
    if (this.agg_sort_infos == null) {
      this.agg_sort_infos = new java.util.ArrayList<TSortInfo>();
    }
    this.agg_sort_infos.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<TSortInfo> getAggSortInfos() {
    return this.agg_sort_infos;
  }

  public TAggregationNode setAggSortInfos(@org.apache.thrift.annotation.Nullable java.util.List<TSortInfo> agg_sort_infos) {
    this.agg_sort_infos = agg_sort_infos;
    return this;
  }

  public void unsetAggSortInfos() {
    this.agg_sort_infos = null;
  }

  /** Returns true if field agg_sort_infos is set (has been assigned a value) and false otherwise */
  public boolean isSetAggSortInfos() {
    return this.agg_sort_infos != null;
  }

  public void setAggSortInfosIsSet(boolean value) {
    if (!value) {
      this.agg_sort_infos = null;
    }
  }

  public boolean isIsFirstPhase() {
    return this.is_first_phase;
  }

  public TAggregationNode setIsFirstPhase(boolean is_first_phase) {
    this.is_first_phase = is_first_phase;
    setIsFirstPhaseIsSet(true);
    return this;
  }

  public void unsetIsFirstPhase() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_FIRST_PHASE_ISSET_ID);
  }

  /** Returns true if field is_first_phase is set (has been assigned a value) and false otherwise */
  public boolean isSetIsFirstPhase() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_FIRST_PHASE_ISSET_ID);
  }

  public void setIsFirstPhaseIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_FIRST_PHASE_ISSET_ID, value);
  }

  public boolean isUseFixedLengthSerializationOpt() {
    return this.use_fixed_length_serialization_opt;
  }

  public TAggregationNode setUseFixedLengthSerializationOpt(boolean use_fixed_length_serialization_opt) {
    this.use_fixed_length_serialization_opt = use_fixed_length_serialization_opt;
    setUseFixedLengthSerializationOptIsSet(true);
    return this;
  }

  public void unsetUseFixedLengthSerializationOpt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USE_FIXED_LENGTH_SERIALIZATION_OPT_ISSET_ID);
  }

  /** Returns true if field use_fixed_length_serialization_opt is set (has been assigned a value) and false otherwise */
  public boolean isSetUseFixedLengthSerializationOpt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USE_FIXED_LENGTH_SERIALIZATION_OPT_ISSET_ID);
  }

  public void setUseFixedLengthSerializationOptIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USE_FIXED_LENGTH_SERIALIZATION_OPT_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case GROUPING_EXPRS:
      if (value == null) {
        unsetGroupingExprs();
      } else {
        setGroupingExprs((java.util.List<org.apache.doris.thrift.TExpr>)value);
      }
      break;

    case AGGREGATE_FUNCTIONS:
      if (value == null) {
        unsetAggregateFunctions();
      } else {
        setAggregateFunctions((java.util.List<org.apache.doris.thrift.TExpr>)value);
      }
      break;

    case INTERMEDIATE_TUPLE_ID:
      if (value == null) {
        unsetIntermediateTupleId();
      } else {
        setIntermediateTupleId((java.lang.Integer)value);
      }
      break;

    case OUTPUT_TUPLE_ID:
      if (value == null) {
        unsetOutputTupleId();
      } else {
        setOutputTupleId((java.lang.Integer)value);
      }
      break;

    case NEED_FINALIZE:
      if (value == null) {
        unsetNeedFinalize();
      } else {
        setNeedFinalize((java.lang.Boolean)value);
      }
      break;

    case USE_STREAMING_PREAGGREGATION:
      if (value == null) {
        unsetUseStreamingPreaggregation();
      } else {
        setUseStreamingPreaggregation((java.lang.Boolean)value);
      }
      break;

    case AGG_SORT_INFOS:
      if (value == null) {
        unsetAggSortInfos();
      } else {
        setAggSortInfos((java.util.List<TSortInfo>)value);
      }
      break;

    case IS_FIRST_PHASE:
      if (value == null) {
        unsetIsFirstPhase();
      } else {
        setIsFirstPhase((java.lang.Boolean)value);
      }
      break;

    case USE_FIXED_LENGTH_SERIALIZATION_OPT:
      if (value == null) {
        unsetUseFixedLengthSerializationOpt();
      } else {
        setUseFixedLengthSerializationOpt((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case GROUPING_EXPRS:
      return getGroupingExprs();

    case AGGREGATE_FUNCTIONS:
      return getAggregateFunctions();

    case INTERMEDIATE_TUPLE_ID:
      return getIntermediateTupleId();

    case OUTPUT_TUPLE_ID:
      return getOutputTupleId();

    case NEED_FINALIZE:
      return isNeedFinalize();

    case USE_STREAMING_PREAGGREGATION:
      return isUseStreamingPreaggregation();

    case AGG_SORT_INFOS:
      return getAggSortInfos();

    case IS_FIRST_PHASE:
      return isIsFirstPhase();

    case USE_FIXED_LENGTH_SERIALIZATION_OPT:
      return isUseFixedLengthSerializationOpt();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case GROUPING_EXPRS:
      return isSetGroupingExprs();
    case AGGREGATE_FUNCTIONS:
      return isSetAggregateFunctions();
    case INTERMEDIATE_TUPLE_ID:
      return isSetIntermediateTupleId();
    case OUTPUT_TUPLE_ID:
      return isSetOutputTupleId();
    case NEED_FINALIZE:
      return isSetNeedFinalize();
    case USE_STREAMING_PREAGGREGATION:
      return isSetUseStreamingPreaggregation();
    case AGG_SORT_INFOS:
      return isSetAggSortInfos();
    case IS_FIRST_PHASE:
      return isSetIsFirstPhase();
    case USE_FIXED_LENGTH_SERIALIZATION_OPT:
      return isSetUseFixedLengthSerializationOpt();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TAggregationNode)
      return this.equals((TAggregationNode)that);
    return false;
  }

  public boolean equals(TAggregationNode that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_grouping_exprs = true && this.isSetGroupingExprs();
    boolean that_present_grouping_exprs = true && that.isSetGroupingExprs();
    if (this_present_grouping_exprs || that_present_grouping_exprs) {
      if (!(this_present_grouping_exprs && that_present_grouping_exprs))
        return false;
      if (!this.grouping_exprs.equals(that.grouping_exprs))
        return false;
    }

    boolean this_present_aggregate_functions = true && this.isSetAggregateFunctions();
    boolean that_present_aggregate_functions = true && that.isSetAggregateFunctions();
    if (this_present_aggregate_functions || that_present_aggregate_functions) {
      if (!(this_present_aggregate_functions && that_present_aggregate_functions))
        return false;
      if (!this.aggregate_functions.equals(that.aggregate_functions))
        return false;
    }

    boolean this_present_intermediate_tuple_id = true;
    boolean that_present_intermediate_tuple_id = true;
    if (this_present_intermediate_tuple_id || that_present_intermediate_tuple_id) {
      if (!(this_present_intermediate_tuple_id && that_present_intermediate_tuple_id))
        return false;
      if (this.intermediate_tuple_id != that.intermediate_tuple_id)
        return false;
    }

    boolean this_present_output_tuple_id = true;
    boolean that_present_output_tuple_id = true;
    if (this_present_output_tuple_id || that_present_output_tuple_id) {
      if (!(this_present_output_tuple_id && that_present_output_tuple_id))
        return false;
      if (this.output_tuple_id != that.output_tuple_id)
        return false;
    }

    boolean this_present_need_finalize = true;
    boolean that_present_need_finalize = true;
    if (this_present_need_finalize || that_present_need_finalize) {
      if (!(this_present_need_finalize && that_present_need_finalize))
        return false;
      if (this.need_finalize != that.need_finalize)
        return false;
    }

    boolean this_present_use_streaming_preaggregation = true && this.isSetUseStreamingPreaggregation();
    boolean that_present_use_streaming_preaggregation = true && that.isSetUseStreamingPreaggregation();
    if (this_present_use_streaming_preaggregation || that_present_use_streaming_preaggregation) {
      if (!(this_present_use_streaming_preaggregation && that_present_use_streaming_preaggregation))
        return false;
      if (this.use_streaming_preaggregation != that.use_streaming_preaggregation)
        return false;
    }

    boolean this_present_agg_sort_infos = true && this.isSetAggSortInfos();
    boolean that_present_agg_sort_infos = true && that.isSetAggSortInfos();
    if (this_present_agg_sort_infos || that_present_agg_sort_infos) {
      if (!(this_present_agg_sort_infos && that_present_agg_sort_infos))
        return false;
      if (!this.agg_sort_infos.equals(that.agg_sort_infos))
        return false;
    }

    boolean this_present_is_first_phase = true && this.isSetIsFirstPhase();
    boolean that_present_is_first_phase = true && that.isSetIsFirstPhase();
    if (this_present_is_first_phase || that_present_is_first_phase) {
      if (!(this_present_is_first_phase && that_present_is_first_phase))
        return false;
      if (this.is_first_phase != that.is_first_phase)
        return false;
    }

    boolean this_present_use_fixed_length_serialization_opt = true && this.isSetUseFixedLengthSerializationOpt();
    boolean that_present_use_fixed_length_serialization_opt = true && that.isSetUseFixedLengthSerializationOpt();
    if (this_present_use_fixed_length_serialization_opt || that_present_use_fixed_length_serialization_opt) {
      if (!(this_present_use_fixed_length_serialization_opt && that_present_use_fixed_length_serialization_opt))
        return false;
      if (this.use_fixed_length_serialization_opt != that.use_fixed_length_serialization_opt)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetGroupingExprs()) ? 131071 : 524287);
    if (isSetGroupingExprs())
      hashCode = hashCode * 8191 + grouping_exprs.hashCode();

    hashCode = hashCode * 8191 + ((isSetAggregateFunctions()) ? 131071 : 524287);
    if (isSetAggregateFunctions())
      hashCode = hashCode * 8191 + aggregate_functions.hashCode();

    hashCode = hashCode * 8191 + intermediate_tuple_id;

    hashCode = hashCode * 8191 + output_tuple_id;

    hashCode = hashCode * 8191 + ((need_finalize) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetUseStreamingPreaggregation()) ? 131071 : 524287);
    if (isSetUseStreamingPreaggregation())
      hashCode = hashCode * 8191 + ((use_streaming_preaggregation) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetAggSortInfos()) ? 131071 : 524287);
    if (isSetAggSortInfos())
      hashCode = hashCode * 8191 + agg_sort_infos.hashCode();

    hashCode = hashCode * 8191 + ((isSetIsFirstPhase()) ? 131071 : 524287);
    if (isSetIsFirstPhase())
      hashCode = hashCode * 8191 + ((is_first_phase) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetUseFixedLengthSerializationOpt()) ? 131071 : 524287);
    if (isSetUseFixedLengthSerializationOpt())
      hashCode = hashCode * 8191 + ((use_fixed_length_serialization_opt) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(TAggregationNode other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetGroupingExprs(), other.isSetGroupingExprs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupingExprs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grouping_exprs, other.grouping_exprs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAggregateFunctions(), other.isSetAggregateFunctions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAggregateFunctions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregate_functions, other.aggregate_functions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIntermediateTupleId(), other.isSetIntermediateTupleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntermediateTupleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediate_tuple_id, other.intermediate_tuple_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOutputTupleId(), other.isSetOutputTupleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutputTupleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.output_tuple_id, other.output_tuple_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNeedFinalize(), other.isSetNeedFinalize());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNeedFinalize()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.need_finalize, other.need_finalize);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUseStreamingPreaggregation(), other.isSetUseStreamingPreaggregation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUseStreamingPreaggregation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.use_streaming_preaggregation, other.use_streaming_preaggregation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAggSortInfos(), other.isSetAggSortInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAggSortInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agg_sort_infos, other.agg_sort_infos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIsFirstPhase(), other.isSetIsFirstPhase());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsFirstPhase()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_first_phase, other.is_first_phase);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUseFixedLengthSerializationOpt(), other.isSetUseFixedLengthSerializationOpt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUseFixedLengthSerializationOpt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.use_fixed_length_serialization_opt, other.use_fixed_length_serialization_opt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TAggregationNode(");
    boolean first = true;

    if (isSetGroupingExprs()) {
      sb.append("grouping_exprs:");
      if (this.grouping_exprs == null) {
        sb.append("null");
      } else {
        sb.append(this.grouping_exprs);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("aggregate_functions:");
    if (this.aggregate_functions == null) {
      sb.append("null");
    } else {
      sb.append(this.aggregate_functions);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("intermediate_tuple_id:");
    sb.append(this.intermediate_tuple_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("output_tuple_id:");
    sb.append(this.output_tuple_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("need_finalize:");
    sb.append(this.need_finalize);
    first = false;
    if (isSetUseStreamingPreaggregation()) {
      if (!first) sb.append(", ");
      sb.append("use_streaming_preaggregation:");
      sb.append(this.use_streaming_preaggregation);
      first = false;
    }
    if (isSetAggSortInfos()) {
      if (!first) sb.append(", ");
      sb.append("agg_sort_infos:");
      if (this.agg_sort_infos == null) {
        sb.append("null");
      } else {
        sb.append(this.agg_sort_infos);
      }
      first = false;
    }
    if (isSetIsFirstPhase()) {
      if (!first) sb.append(", ");
      sb.append("is_first_phase:");
      sb.append(this.is_first_phase);
      first = false;
    }
    if (isSetUseFixedLengthSerializationOpt()) {
      if (!first) sb.append(", ");
      sb.append("use_fixed_length_serialization_opt:");
      sb.append(this.use_fixed_length_serialization_opt);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (aggregate_functions == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'aggregate_functions' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'intermediate_tuple_id' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'output_tuple_id' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'need_finalize' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TAggregationNodeStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TAggregationNodeStandardScheme getScheme() {
      return new TAggregationNodeStandardScheme();
    }
  }

  private static class TAggregationNodeStandardScheme extends org.apache.thrift.scheme.StandardScheme<TAggregationNode> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TAggregationNode struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GROUPING_EXPRS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list578 = iprot.readListBegin();
                struct.grouping_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list578.size);
                @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem579;
                for (int _i580 = 0; _i580 < _list578.size; ++_i580)
                {
                  _elem579 = new org.apache.doris.thrift.TExpr();
                  _elem579.read(iprot);
                  struct.grouping_exprs.add(_elem579);
                }
                iprot.readListEnd();
              }
              struct.setGroupingExprsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AGGREGATE_FUNCTIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list581 = iprot.readListBegin();
                struct.aggregate_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list581.size);
                @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem582;
                for (int _i583 = 0; _i583 < _list581.size; ++_i583)
                {
                  _elem582 = new org.apache.doris.thrift.TExpr();
                  _elem582.read(iprot);
                  struct.aggregate_functions.add(_elem582);
                }
                iprot.readListEnd();
              }
              struct.setAggregateFunctionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INTERMEDIATE_TUPLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.intermediate_tuple_id = iprot.readI32();
              struct.setIntermediateTupleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OUTPUT_TUPLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.output_tuple_id = iprot.readI32();
              struct.setOutputTupleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NEED_FINALIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.need_finalize = iprot.readBool();
              struct.setNeedFinalizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USE_STREAMING_PREAGGREGATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.use_streaming_preaggregation = iprot.readBool();
              struct.setUseStreamingPreaggregationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AGG_SORT_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list584 = iprot.readListBegin();
                struct.agg_sort_infos = new java.util.ArrayList<TSortInfo>(_list584.size);
                @org.apache.thrift.annotation.Nullable TSortInfo _elem585;
                for (int _i586 = 0; _i586 < _list584.size; ++_i586)
                {
                  _elem585 = new TSortInfo();
                  _elem585.read(iprot);
                  struct.agg_sort_infos.add(_elem585);
                }
                iprot.readListEnd();
              }
              struct.setAggSortInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // IS_FIRST_PHASE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.is_first_phase = iprot.readBool();
              struct.setIsFirstPhaseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // USE_FIXED_LENGTH_SERIALIZATION_OPT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.use_fixed_length_serialization_opt = iprot.readBool();
              struct.setUseFixedLengthSerializationOptIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetIntermediateTupleId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'intermediate_tuple_id' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetOutputTupleId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'output_tuple_id' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetNeedFinalize()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'need_finalize' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TAggregationNode struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.grouping_exprs != null) {
        if (struct.isSetGroupingExprs()) {
          oprot.writeFieldBegin(GROUPING_EXPRS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.grouping_exprs.size()));
            for (org.apache.doris.thrift.TExpr _iter587 : struct.grouping_exprs)
            {
              _iter587.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.aggregate_functions != null) {
        oprot.writeFieldBegin(AGGREGATE_FUNCTIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.aggregate_functions.size()));
          for (org.apache.doris.thrift.TExpr _iter588 : struct.aggregate_functions)
          {
            _iter588.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INTERMEDIATE_TUPLE_ID_FIELD_DESC);
      oprot.writeI32(struct.intermediate_tuple_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OUTPUT_TUPLE_ID_FIELD_DESC);
      oprot.writeI32(struct.output_tuple_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEED_FINALIZE_FIELD_DESC);
      oprot.writeBool(struct.need_finalize);
      oprot.writeFieldEnd();
      if (struct.isSetUseStreamingPreaggregation()) {
        oprot.writeFieldBegin(USE_STREAMING_PREAGGREGATION_FIELD_DESC);
        oprot.writeBool(struct.use_streaming_preaggregation);
        oprot.writeFieldEnd();
      }
      if (struct.agg_sort_infos != null) {
        if (struct.isSetAggSortInfos()) {
          oprot.writeFieldBegin(AGG_SORT_INFOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.agg_sort_infos.size()));
            for (TSortInfo _iter589 : struct.agg_sort_infos)
            {
              _iter589.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsFirstPhase()) {
        oprot.writeFieldBegin(IS_FIRST_PHASE_FIELD_DESC);
        oprot.writeBool(struct.is_first_phase);
        oprot.writeFieldEnd();
      }
      if (struct.isSetUseFixedLengthSerializationOpt()) {
        oprot.writeFieldBegin(USE_FIXED_LENGTH_SERIALIZATION_OPT_FIELD_DESC);
        oprot.writeBool(struct.use_fixed_length_serialization_opt);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TAggregationNodeTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TAggregationNodeTupleScheme getScheme() {
      return new TAggregationNodeTupleScheme();
    }
  }

  private static class TAggregationNodeTupleScheme extends org.apache.thrift.scheme.TupleScheme<TAggregationNode> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TAggregationNode struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.aggregate_functions.size());
        for (org.apache.doris.thrift.TExpr _iter590 : struct.aggregate_functions)
        {
          _iter590.write(oprot);
        }
      }
      oprot.writeI32(struct.intermediate_tuple_id);
      oprot.writeI32(struct.output_tuple_id);
      oprot.writeBool(struct.need_finalize);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetGroupingExprs()) {
        optionals.set(0);
      }
      if (struct.isSetUseStreamingPreaggregation()) {
        optionals.set(1);
      }
      if (struct.isSetAggSortInfos()) {
        optionals.set(2);
      }
      if (struct.isSetIsFirstPhase()) {
        optionals.set(3);
      }
      if (struct.isSetUseFixedLengthSerializationOpt()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetGroupingExprs()) {
        {
          oprot.writeI32(struct.grouping_exprs.size());
          for (org.apache.doris.thrift.TExpr _iter591 : struct.grouping_exprs)
          {
            _iter591.write(oprot);
          }
        }
      }
      if (struct.isSetUseStreamingPreaggregation()) {
        oprot.writeBool(struct.use_streaming_preaggregation);
      }
      if (struct.isSetAggSortInfos()) {
        {
          oprot.writeI32(struct.agg_sort_infos.size());
          for (TSortInfo _iter592 : struct.agg_sort_infos)
          {
            _iter592.write(oprot);
          }
        }
      }
      if (struct.isSetIsFirstPhase()) {
        oprot.writeBool(struct.is_first_phase);
      }
      if (struct.isSetUseFixedLengthSerializationOpt()) {
        oprot.writeBool(struct.use_fixed_length_serialization_opt);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TAggregationNode struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list593 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct.aggregate_functions = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list593.size);
        @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem594;
        for (int _i595 = 0; _i595 < _list593.size; ++_i595)
        {
          _elem594 = new org.apache.doris.thrift.TExpr();
          _elem594.read(iprot);
          struct.aggregate_functions.add(_elem594);
        }
      }
      struct.setAggregateFunctionsIsSet(true);
      struct.intermediate_tuple_id = iprot.readI32();
      struct.setIntermediateTupleIdIsSet(true);
      struct.output_tuple_id = iprot.readI32();
      struct.setOutputTupleIdIsSet(true);
      struct.need_finalize = iprot.readBool();
      struct.setNeedFinalizeIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list596 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.grouping_exprs = new java.util.ArrayList<org.apache.doris.thrift.TExpr>(_list596.size);
          @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TExpr _elem597;
          for (int _i598 = 0; _i598 < _list596.size; ++_i598)
          {
            _elem597 = new org.apache.doris.thrift.TExpr();
            _elem597.read(iprot);
            struct.grouping_exprs.add(_elem597);
          }
        }
        struct.setGroupingExprsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.use_streaming_preaggregation = iprot.readBool();
        struct.setUseStreamingPreaggregationIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list599 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.agg_sort_infos = new java.util.ArrayList<TSortInfo>(_list599.size);
          @org.apache.thrift.annotation.Nullable TSortInfo _elem600;
          for (int _i601 = 0; _i601 < _list599.size; ++_i601)
          {
            _elem600 = new TSortInfo();
            _elem600.read(iprot);
            struct.agg_sort_infos.add(_elem600);
          }
        }
        struct.setAggSortInfosIsSet(true);
      }
      if (incoming.get(3)) {
        struct.is_first_phase = iprot.readBool();
        struct.setIsFirstPhaseIsSet(true);
      }
      if (incoming.get(4)) {
        struct.use_fixed_length_serialization_opt = iprot.readBool();
        struct.setUseFixedLengthSerializationOptIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

