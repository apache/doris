/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.18.1)", date = "2023-06-20")
public class TMasterDdlRequest implements org.apache.thrift.TBase<TMasterDdlRequest, TMasterDdlRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TMasterDdlRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TMasterDdlRequest");

  private static final org.apache.thrift.protocol.TField PROTOCOL_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("protocol_version", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DDL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("ddl_type", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CREATE_DB_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_db_params", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField DROP_DB_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_db_params", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField DROP_TABLE_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_table_params", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField LOAD_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("load_params", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField CANCEL_LOAD_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("cancel_load_params", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_USER_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_user_params", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField DROP_USER_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_user_params", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_ROLLUP_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_rollup_params", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField DROP_ROLLUP_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_rollup_params", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_FUNCTION_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_function_params", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField DROP_FUNCTION_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_function_params", org.apache.thrift.protocol.TType.STRUCT, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TMasterDdlRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TMasterDdlRequestTupleSchemeFactory();

  /**
   * 
   * @see TPaloInternalServiceVersion
   */
  public @org.apache.thrift.annotation.Nullable TPaloInternalServiceVersion protocol_version; // required
  /**
   * 
   * @see TCommonDdlType
   */
  public @org.apache.thrift.annotation.Nullable TCommonDdlType ddl_type; // required
  public @org.apache.thrift.annotation.Nullable TCreateDbParams create_db_params; // optional
  public @org.apache.thrift.annotation.Nullable TDropDbParams drop_db_params; // optional
  public @org.apache.thrift.annotation.Nullable TDropTableParams drop_table_params; // optional
  public @org.apache.thrift.annotation.Nullable TLoadParams load_params; // optional
  public @org.apache.thrift.annotation.Nullable TCancelLoadParams cancel_load_params; // optional
  public @org.apache.thrift.annotation.Nullable TCreateUserParams create_user_params; // optional
  public @org.apache.thrift.annotation.Nullable TDropUserParams drop_user_params; // optional
  public @org.apache.thrift.annotation.Nullable TCreateRollupParams create_rollup_params; // optional
  public @org.apache.thrift.annotation.Nullable TDropRollupParams drop_rollup_params; // optional
  public @org.apache.thrift.annotation.Nullable TCreateFunctionParams create_function_params; // optional
  public @org.apache.thrift.annotation.Nullable TDropFunctionParams drop_function_params; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see TPaloInternalServiceVersion
     */
    PROTOCOL_VERSION((short)1, "protocol_version"),
    /**
     * 
     * @see TCommonDdlType
     */
    DDL_TYPE((short)2, "ddl_type"),
    CREATE_DB_PARAMS((short)3, "create_db_params"),
    DROP_DB_PARAMS((short)4, "drop_db_params"),
    DROP_TABLE_PARAMS((short)6, "drop_table_params"),
    LOAD_PARAMS((short)7, "load_params"),
    CANCEL_LOAD_PARAMS((short)8, "cancel_load_params"),
    CREATE_USER_PARAMS((short)9, "create_user_params"),
    DROP_USER_PARAMS((short)10, "drop_user_params"),
    CREATE_ROLLUP_PARAMS((short)11, "create_rollup_params"),
    DROP_ROLLUP_PARAMS((short)12, "drop_rollup_params"),
    CREATE_FUNCTION_PARAMS((short)13, "create_function_params"),
    DROP_FUNCTION_PARAMS((short)14, "drop_function_params");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROTOCOL_VERSION
          return PROTOCOL_VERSION;
        case 2: // DDL_TYPE
          return DDL_TYPE;
        case 3: // CREATE_DB_PARAMS
          return CREATE_DB_PARAMS;
        case 4: // DROP_DB_PARAMS
          return DROP_DB_PARAMS;
        case 6: // DROP_TABLE_PARAMS
          return DROP_TABLE_PARAMS;
        case 7: // LOAD_PARAMS
          return LOAD_PARAMS;
        case 8: // CANCEL_LOAD_PARAMS
          return CANCEL_LOAD_PARAMS;
        case 9: // CREATE_USER_PARAMS
          return CREATE_USER_PARAMS;
        case 10: // DROP_USER_PARAMS
          return DROP_USER_PARAMS;
        case 11: // CREATE_ROLLUP_PARAMS
          return CREATE_ROLLUP_PARAMS;
        case 12: // DROP_ROLLUP_PARAMS
          return DROP_ROLLUP_PARAMS;
        case 13: // CREATE_FUNCTION_PARAMS
          return CREATE_FUNCTION_PARAMS;
        case 14: // DROP_FUNCTION_PARAMS
          return DROP_FUNCTION_PARAMS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.CREATE_DB_PARAMS,_Fields.DROP_DB_PARAMS,_Fields.DROP_TABLE_PARAMS,_Fields.LOAD_PARAMS,_Fields.CANCEL_LOAD_PARAMS,_Fields.CREATE_USER_PARAMS,_Fields.DROP_USER_PARAMS,_Fields.CREATE_ROLLUP_PARAMS,_Fields.DROP_ROLLUP_PARAMS,_Fields.CREATE_FUNCTION_PARAMS,_Fields.DROP_FUNCTION_PARAMS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROTOCOL_VERSION, new org.apache.thrift.meta_data.FieldMetaData("protocol_version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TPaloInternalServiceVersion.class)));
    tmpMap.put(_Fields.DDL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("ddl_type", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TCommonDdlType.class)));
    tmpMap.put(_Fields.CREATE_DB_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_db_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateDbParams.class)));
    tmpMap.put(_Fields.DROP_DB_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_db_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropDbParams.class)));
    tmpMap.put(_Fields.DROP_TABLE_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_table_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropTableParams.class)));
    tmpMap.put(_Fields.LOAD_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("load_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TLoadParams.class)));
    tmpMap.put(_Fields.CANCEL_LOAD_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("cancel_load_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCancelLoadParams.class)));
    tmpMap.put(_Fields.CREATE_USER_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_user_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateUserParams.class)));
    tmpMap.put(_Fields.DROP_USER_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_user_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropUserParams.class)));
    tmpMap.put(_Fields.CREATE_ROLLUP_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_rollup_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateRollupParams.class)));
    tmpMap.put(_Fields.DROP_ROLLUP_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_rollup_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropRollupParams.class)));
    tmpMap.put(_Fields.CREATE_FUNCTION_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_function_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateFunctionParams.class)));
    tmpMap.put(_Fields.DROP_FUNCTION_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_function_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropFunctionParams.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TMasterDdlRequest.class, metaDataMap);
  }

  public TMasterDdlRequest() {
  }

  public TMasterDdlRequest(
    TPaloInternalServiceVersion protocol_version,
    TCommonDdlType ddl_type)
  {
    this();
    this.protocol_version = protocol_version;
    this.ddl_type = ddl_type;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TMasterDdlRequest(TMasterDdlRequest other) {
    if (other.isSetProtocolVersion()) {
      this.protocol_version = other.protocol_version;
    }
    if (other.isSetDdlType()) {
      this.ddl_type = other.ddl_type;
    }
    if (other.isSetCreateDbParams()) {
      this.create_db_params = new TCreateDbParams(other.create_db_params);
    }
    if (other.isSetDropDbParams()) {
      this.drop_db_params = new TDropDbParams(other.drop_db_params);
    }
    if (other.isSetDropTableParams()) {
      this.drop_table_params = new TDropTableParams(other.drop_table_params);
    }
    if (other.isSetLoadParams()) {
      this.load_params = new TLoadParams(other.load_params);
    }
    if (other.isSetCancelLoadParams()) {
      this.cancel_load_params = new TCancelLoadParams(other.cancel_load_params);
    }
    if (other.isSetCreateUserParams()) {
      this.create_user_params = new TCreateUserParams(other.create_user_params);
    }
    if (other.isSetDropUserParams()) {
      this.drop_user_params = new TDropUserParams(other.drop_user_params);
    }
    if (other.isSetCreateRollupParams()) {
      this.create_rollup_params = new TCreateRollupParams(other.create_rollup_params);
    }
    if (other.isSetDropRollupParams()) {
      this.drop_rollup_params = new TDropRollupParams(other.drop_rollup_params);
    }
    if (other.isSetCreateFunctionParams()) {
      this.create_function_params = new TCreateFunctionParams(other.create_function_params);
    }
    if (other.isSetDropFunctionParams()) {
      this.drop_function_params = new TDropFunctionParams(other.drop_function_params);
    }
  }

  @Override
  public TMasterDdlRequest deepCopy() {
    return new TMasterDdlRequest(this);
  }

  @Override
  public void clear() {
    this.protocol_version = null;
    this.ddl_type = null;
    this.create_db_params = null;
    this.drop_db_params = null;
    this.drop_table_params = null;
    this.load_params = null;
    this.cancel_load_params = null;
    this.create_user_params = null;
    this.drop_user_params = null;
    this.create_rollup_params = null;
    this.drop_rollup_params = null;
    this.create_function_params = null;
    this.drop_function_params = null;
  }

  /**
   * 
   * @see TPaloInternalServiceVersion
   */
  @org.apache.thrift.annotation.Nullable
  public TPaloInternalServiceVersion getProtocolVersion() {
    return this.protocol_version;
  }

  /**
   * 
   * @see TPaloInternalServiceVersion
   */
  public TMasterDdlRequest setProtocolVersion(@org.apache.thrift.annotation.Nullable TPaloInternalServiceVersion protocol_version) {
    this.protocol_version = protocol_version;
    return this;
  }

  public void unsetProtocolVersion() {
    this.protocol_version = null;
  }

  /** Returns true if field protocol_version is set (has been assigned a value) and false otherwise */
  public boolean isSetProtocolVersion() {
    return this.protocol_version != null;
  }

  public void setProtocolVersionIsSet(boolean value) {
    if (!value) {
      this.protocol_version = null;
    }
  }

  /**
   * 
   * @see TCommonDdlType
   */
  @org.apache.thrift.annotation.Nullable
  public TCommonDdlType getDdlType() {
    return this.ddl_type;
  }

  /**
   * 
   * @see TCommonDdlType
   */
  public TMasterDdlRequest setDdlType(@org.apache.thrift.annotation.Nullable TCommonDdlType ddl_type) {
    this.ddl_type = ddl_type;
    return this;
  }

  public void unsetDdlType() {
    this.ddl_type = null;
  }

  /** Returns true if field ddl_type is set (has been assigned a value) and false otherwise */
  public boolean isSetDdlType() {
    return this.ddl_type != null;
  }

  public void setDdlTypeIsSet(boolean value) {
    if (!value) {
      this.ddl_type = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TCreateDbParams getCreateDbParams() {
    return this.create_db_params;
  }

  public TMasterDdlRequest setCreateDbParams(@org.apache.thrift.annotation.Nullable TCreateDbParams create_db_params) {
    this.create_db_params = create_db_params;
    return this;
  }

  public void unsetCreateDbParams() {
    this.create_db_params = null;
  }

  /** Returns true if field create_db_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDbParams() {
    return this.create_db_params != null;
  }

  public void setCreateDbParamsIsSet(boolean value) {
    if (!value) {
      this.create_db_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TDropDbParams getDropDbParams() {
    return this.drop_db_params;
  }

  public TMasterDdlRequest setDropDbParams(@org.apache.thrift.annotation.Nullable TDropDbParams drop_db_params) {
    this.drop_db_params = drop_db_params;
    return this;
  }

  public void unsetDropDbParams() {
    this.drop_db_params = null;
  }

  /** Returns true if field drop_db_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDropDbParams() {
    return this.drop_db_params != null;
  }

  public void setDropDbParamsIsSet(boolean value) {
    if (!value) {
      this.drop_db_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TDropTableParams getDropTableParams() {
    return this.drop_table_params;
  }

  public TMasterDdlRequest setDropTableParams(@org.apache.thrift.annotation.Nullable TDropTableParams drop_table_params) {
    this.drop_table_params = drop_table_params;
    return this;
  }

  public void unsetDropTableParams() {
    this.drop_table_params = null;
  }

  /** Returns true if field drop_table_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDropTableParams() {
    return this.drop_table_params != null;
  }

  public void setDropTableParamsIsSet(boolean value) {
    if (!value) {
      this.drop_table_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TLoadParams getLoadParams() {
    return this.load_params;
  }

  public TMasterDdlRequest setLoadParams(@org.apache.thrift.annotation.Nullable TLoadParams load_params) {
    this.load_params = load_params;
    return this;
  }

  public void unsetLoadParams() {
    this.load_params = null;
  }

  /** Returns true if field load_params is set (has been assigned a value) and false otherwise */
  public boolean isSetLoadParams() {
    return this.load_params != null;
  }

  public void setLoadParamsIsSet(boolean value) {
    if (!value) {
      this.load_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TCancelLoadParams getCancelLoadParams() {
    return this.cancel_load_params;
  }

  public TMasterDdlRequest setCancelLoadParams(@org.apache.thrift.annotation.Nullable TCancelLoadParams cancel_load_params) {
    this.cancel_load_params = cancel_load_params;
    return this;
  }

  public void unsetCancelLoadParams() {
    this.cancel_load_params = null;
  }

  /** Returns true if field cancel_load_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCancelLoadParams() {
    return this.cancel_load_params != null;
  }

  public void setCancelLoadParamsIsSet(boolean value) {
    if (!value) {
      this.cancel_load_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TCreateUserParams getCreateUserParams() {
    return this.create_user_params;
  }

  public TMasterDdlRequest setCreateUserParams(@org.apache.thrift.annotation.Nullable TCreateUserParams create_user_params) {
    this.create_user_params = create_user_params;
    return this;
  }

  public void unsetCreateUserParams() {
    this.create_user_params = null;
  }

  /** Returns true if field create_user_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateUserParams() {
    return this.create_user_params != null;
  }

  public void setCreateUserParamsIsSet(boolean value) {
    if (!value) {
      this.create_user_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TDropUserParams getDropUserParams() {
    return this.drop_user_params;
  }

  public TMasterDdlRequest setDropUserParams(@org.apache.thrift.annotation.Nullable TDropUserParams drop_user_params) {
    this.drop_user_params = drop_user_params;
    return this;
  }

  public void unsetDropUserParams() {
    this.drop_user_params = null;
  }

  /** Returns true if field drop_user_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDropUserParams() {
    return this.drop_user_params != null;
  }

  public void setDropUserParamsIsSet(boolean value) {
    if (!value) {
      this.drop_user_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TCreateRollupParams getCreateRollupParams() {
    return this.create_rollup_params;
  }

  public TMasterDdlRequest setCreateRollupParams(@org.apache.thrift.annotation.Nullable TCreateRollupParams create_rollup_params) {
    this.create_rollup_params = create_rollup_params;
    return this;
  }

  public void unsetCreateRollupParams() {
    this.create_rollup_params = null;
  }

  /** Returns true if field create_rollup_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateRollupParams() {
    return this.create_rollup_params != null;
  }

  public void setCreateRollupParamsIsSet(boolean value) {
    if (!value) {
      this.create_rollup_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TDropRollupParams getDropRollupParams() {
    return this.drop_rollup_params;
  }

  public TMasterDdlRequest setDropRollupParams(@org.apache.thrift.annotation.Nullable TDropRollupParams drop_rollup_params) {
    this.drop_rollup_params = drop_rollup_params;
    return this;
  }

  public void unsetDropRollupParams() {
    this.drop_rollup_params = null;
  }

  /** Returns true if field drop_rollup_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDropRollupParams() {
    return this.drop_rollup_params != null;
  }

  public void setDropRollupParamsIsSet(boolean value) {
    if (!value) {
      this.drop_rollup_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TCreateFunctionParams getCreateFunctionParams() {
    return this.create_function_params;
  }

  public TMasterDdlRequest setCreateFunctionParams(@org.apache.thrift.annotation.Nullable TCreateFunctionParams create_function_params) {
    this.create_function_params = create_function_params;
    return this;
  }

  public void unsetCreateFunctionParams() {
    this.create_function_params = null;
  }

  /** Returns true if field create_function_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateFunctionParams() {
    return this.create_function_params != null;
  }

  public void setCreateFunctionParamsIsSet(boolean value) {
    if (!value) {
      this.create_function_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TDropFunctionParams getDropFunctionParams() {
    return this.drop_function_params;
  }

  public TMasterDdlRequest setDropFunctionParams(@org.apache.thrift.annotation.Nullable TDropFunctionParams drop_function_params) {
    this.drop_function_params = drop_function_params;
    return this;
  }

  public void unsetDropFunctionParams() {
    this.drop_function_params = null;
  }

  /** Returns true if field drop_function_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDropFunctionParams() {
    return this.drop_function_params != null;
  }

  public void setDropFunctionParamsIsSet(boolean value) {
    if (!value) {
      this.drop_function_params = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case PROTOCOL_VERSION:
      if (value == null) {
        unsetProtocolVersion();
      } else {
        setProtocolVersion((TPaloInternalServiceVersion)value);
      }
      break;

    case DDL_TYPE:
      if (value == null) {
        unsetDdlType();
      } else {
        setDdlType((TCommonDdlType)value);
      }
      break;

    case CREATE_DB_PARAMS:
      if (value == null) {
        unsetCreateDbParams();
      } else {
        setCreateDbParams((TCreateDbParams)value);
      }
      break;

    case DROP_DB_PARAMS:
      if (value == null) {
        unsetDropDbParams();
      } else {
        setDropDbParams((TDropDbParams)value);
      }
      break;

    case DROP_TABLE_PARAMS:
      if (value == null) {
        unsetDropTableParams();
      } else {
        setDropTableParams((TDropTableParams)value);
      }
      break;

    case LOAD_PARAMS:
      if (value == null) {
        unsetLoadParams();
      } else {
        setLoadParams((TLoadParams)value);
      }
      break;

    case CANCEL_LOAD_PARAMS:
      if (value == null) {
        unsetCancelLoadParams();
      } else {
        setCancelLoadParams((TCancelLoadParams)value);
      }
      break;

    case CREATE_USER_PARAMS:
      if (value == null) {
        unsetCreateUserParams();
      } else {
        setCreateUserParams((TCreateUserParams)value);
      }
      break;

    case DROP_USER_PARAMS:
      if (value == null) {
        unsetDropUserParams();
      } else {
        setDropUserParams((TDropUserParams)value);
      }
      break;

    case CREATE_ROLLUP_PARAMS:
      if (value == null) {
        unsetCreateRollupParams();
      } else {
        setCreateRollupParams((TCreateRollupParams)value);
      }
      break;

    case DROP_ROLLUP_PARAMS:
      if (value == null) {
        unsetDropRollupParams();
      } else {
        setDropRollupParams((TDropRollupParams)value);
      }
      break;

    case CREATE_FUNCTION_PARAMS:
      if (value == null) {
        unsetCreateFunctionParams();
      } else {
        setCreateFunctionParams((TCreateFunctionParams)value);
      }
      break;

    case DROP_FUNCTION_PARAMS:
      if (value == null) {
        unsetDropFunctionParams();
      } else {
        setDropFunctionParams((TDropFunctionParams)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PROTOCOL_VERSION:
      return getProtocolVersion();

    case DDL_TYPE:
      return getDdlType();

    case CREATE_DB_PARAMS:
      return getCreateDbParams();

    case DROP_DB_PARAMS:
      return getDropDbParams();

    case DROP_TABLE_PARAMS:
      return getDropTableParams();

    case LOAD_PARAMS:
      return getLoadParams();

    case CANCEL_LOAD_PARAMS:
      return getCancelLoadParams();

    case CREATE_USER_PARAMS:
      return getCreateUserParams();

    case DROP_USER_PARAMS:
      return getDropUserParams();

    case CREATE_ROLLUP_PARAMS:
      return getCreateRollupParams();

    case DROP_ROLLUP_PARAMS:
      return getDropRollupParams();

    case CREATE_FUNCTION_PARAMS:
      return getCreateFunctionParams();

    case DROP_FUNCTION_PARAMS:
      return getDropFunctionParams();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PROTOCOL_VERSION:
      return isSetProtocolVersion();
    case DDL_TYPE:
      return isSetDdlType();
    case CREATE_DB_PARAMS:
      return isSetCreateDbParams();
    case DROP_DB_PARAMS:
      return isSetDropDbParams();
    case DROP_TABLE_PARAMS:
      return isSetDropTableParams();
    case LOAD_PARAMS:
      return isSetLoadParams();
    case CANCEL_LOAD_PARAMS:
      return isSetCancelLoadParams();
    case CREATE_USER_PARAMS:
      return isSetCreateUserParams();
    case DROP_USER_PARAMS:
      return isSetDropUserParams();
    case CREATE_ROLLUP_PARAMS:
      return isSetCreateRollupParams();
    case DROP_ROLLUP_PARAMS:
      return isSetDropRollupParams();
    case CREATE_FUNCTION_PARAMS:
      return isSetCreateFunctionParams();
    case DROP_FUNCTION_PARAMS:
      return isSetDropFunctionParams();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TMasterDdlRequest)
      return this.equals((TMasterDdlRequest)that);
    return false;
  }

  public boolean equals(TMasterDdlRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_protocol_version = true && this.isSetProtocolVersion();
    boolean that_present_protocol_version = true && that.isSetProtocolVersion();
    if (this_present_protocol_version || that_present_protocol_version) {
      if (!(this_present_protocol_version && that_present_protocol_version))
        return false;
      if (!this.protocol_version.equals(that.protocol_version))
        return false;
    }

    boolean this_present_ddl_type = true && this.isSetDdlType();
    boolean that_present_ddl_type = true && that.isSetDdlType();
    if (this_present_ddl_type || that_present_ddl_type) {
      if (!(this_present_ddl_type && that_present_ddl_type))
        return false;
      if (!this.ddl_type.equals(that.ddl_type))
        return false;
    }

    boolean this_present_create_db_params = true && this.isSetCreateDbParams();
    boolean that_present_create_db_params = true && that.isSetCreateDbParams();
    if (this_present_create_db_params || that_present_create_db_params) {
      if (!(this_present_create_db_params && that_present_create_db_params))
        return false;
      if (!this.create_db_params.equals(that.create_db_params))
        return false;
    }

    boolean this_present_drop_db_params = true && this.isSetDropDbParams();
    boolean that_present_drop_db_params = true && that.isSetDropDbParams();
    if (this_present_drop_db_params || that_present_drop_db_params) {
      if (!(this_present_drop_db_params && that_present_drop_db_params))
        return false;
      if (!this.drop_db_params.equals(that.drop_db_params))
        return false;
    }

    boolean this_present_drop_table_params = true && this.isSetDropTableParams();
    boolean that_present_drop_table_params = true && that.isSetDropTableParams();
    if (this_present_drop_table_params || that_present_drop_table_params) {
      if (!(this_present_drop_table_params && that_present_drop_table_params))
        return false;
      if (!this.drop_table_params.equals(that.drop_table_params))
        return false;
    }

    boolean this_present_load_params = true && this.isSetLoadParams();
    boolean that_present_load_params = true && that.isSetLoadParams();
    if (this_present_load_params || that_present_load_params) {
      if (!(this_present_load_params && that_present_load_params))
        return false;
      if (!this.load_params.equals(that.load_params))
        return false;
    }

    boolean this_present_cancel_load_params = true && this.isSetCancelLoadParams();
    boolean that_present_cancel_load_params = true && that.isSetCancelLoadParams();
    if (this_present_cancel_load_params || that_present_cancel_load_params) {
      if (!(this_present_cancel_load_params && that_present_cancel_load_params))
        return false;
      if (!this.cancel_load_params.equals(that.cancel_load_params))
        return false;
    }

    boolean this_present_create_user_params = true && this.isSetCreateUserParams();
    boolean that_present_create_user_params = true && that.isSetCreateUserParams();
    if (this_present_create_user_params || that_present_create_user_params) {
      if (!(this_present_create_user_params && that_present_create_user_params))
        return false;
      if (!this.create_user_params.equals(that.create_user_params))
        return false;
    }

    boolean this_present_drop_user_params = true && this.isSetDropUserParams();
    boolean that_present_drop_user_params = true && that.isSetDropUserParams();
    if (this_present_drop_user_params || that_present_drop_user_params) {
      if (!(this_present_drop_user_params && that_present_drop_user_params))
        return false;
      if (!this.drop_user_params.equals(that.drop_user_params))
        return false;
    }

    boolean this_present_create_rollup_params = true && this.isSetCreateRollupParams();
    boolean that_present_create_rollup_params = true && that.isSetCreateRollupParams();
    if (this_present_create_rollup_params || that_present_create_rollup_params) {
      if (!(this_present_create_rollup_params && that_present_create_rollup_params))
        return false;
      if (!this.create_rollup_params.equals(that.create_rollup_params))
        return false;
    }

    boolean this_present_drop_rollup_params = true && this.isSetDropRollupParams();
    boolean that_present_drop_rollup_params = true && that.isSetDropRollupParams();
    if (this_present_drop_rollup_params || that_present_drop_rollup_params) {
      if (!(this_present_drop_rollup_params && that_present_drop_rollup_params))
        return false;
      if (!this.drop_rollup_params.equals(that.drop_rollup_params))
        return false;
    }

    boolean this_present_create_function_params = true && this.isSetCreateFunctionParams();
    boolean that_present_create_function_params = true && that.isSetCreateFunctionParams();
    if (this_present_create_function_params || that_present_create_function_params) {
      if (!(this_present_create_function_params && that_present_create_function_params))
        return false;
      if (!this.create_function_params.equals(that.create_function_params))
        return false;
    }

    boolean this_present_drop_function_params = true && this.isSetDropFunctionParams();
    boolean that_present_drop_function_params = true && that.isSetDropFunctionParams();
    if (this_present_drop_function_params || that_present_drop_function_params) {
      if (!(this_present_drop_function_params && that_present_drop_function_params))
        return false;
      if (!this.drop_function_params.equals(that.drop_function_params))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetProtocolVersion()) ? 131071 : 524287);
    if (isSetProtocolVersion())
      hashCode = hashCode * 8191 + protocol_version.getValue();

    hashCode = hashCode * 8191 + ((isSetDdlType()) ? 131071 : 524287);
    if (isSetDdlType())
      hashCode = hashCode * 8191 + ddl_type.getValue();

    hashCode = hashCode * 8191 + ((isSetCreateDbParams()) ? 131071 : 524287);
    if (isSetCreateDbParams())
      hashCode = hashCode * 8191 + create_db_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetDropDbParams()) ? 131071 : 524287);
    if (isSetDropDbParams())
      hashCode = hashCode * 8191 + drop_db_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetDropTableParams()) ? 131071 : 524287);
    if (isSetDropTableParams())
      hashCode = hashCode * 8191 + drop_table_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetLoadParams()) ? 131071 : 524287);
    if (isSetLoadParams())
      hashCode = hashCode * 8191 + load_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetCancelLoadParams()) ? 131071 : 524287);
    if (isSetCancelLoadParams())
      hashCode = hashCode * 8191 + cancel_load_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateUserParams()) ? 131071 : 524287);
    if (isSetCreateUserParams())
      hashCode = hashCode * 8191 + create_user_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetDropUserParams()) ? 131071 : 524287);
    if (isSetDropUserParams())
      hashCode = hashCode * 8191 + drop_user_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateRollupParams()) ? 131071 : 524287);
    if (isSetCreateRollupParams())
      hashCode = hashCode * 8191 + create_rollup_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetDropRollupParams()) ? 131071 : 524287);
    if (isSetDropRollupParams())
      hashCode = hashCode * 8191 + drop_rollup_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateFunctionParams()) ? 131071 : 524287);
    if (isSetCreateFunctionParams())
      hashCode = hashCode * 8191 + create_function_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetDropFunctionParams()) ? 131071 : 524287);
    if (isSetDropFunctionParams())
      hashCode = hashCode * 8191 + drop_function_params.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TMasterDdlRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetProtocolVersion(), other.isSetProtocolVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProtocolVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.protocol_version, other.protocol_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDdlType(), other.isSetDdlType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDdlType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ddl_type, other.ddl_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateDbParams(), other.isSetCreateDbParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDbParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_db_params, other.create_db_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDropDbParams(), other.isSetDropDbParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDropDbParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_db_params, other.drop_db_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDropTableParams(), other.isSetDropTableParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDropTableParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_table_params, other.drop_table_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLoadParams(), other.isSetLoadParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoadParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.load_params, other.load_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCancelLoadParams(), other.isSetCancelLoadParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCancelLoadParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cancel_load_params, other.cancel_load_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateUserParams(), other.isSetCreateUserParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUserParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_user_params, other.create_user_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDropUserParams(), other.isSetDropUserParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDropUserParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_user_params, other.drop_user_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateRollupParams(), other.isSetCreateRollupParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateRollupParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_rollup_params, other.create_rollup_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDropRollupParams(), other.isSetDropRollupParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDropRollupParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_rollup_params, other.drop_rollup_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateFunctionParams(), other.isSetCreateFunctionParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateFunctionParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_function_params, other.create_function_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDropFunctionParams(), other.isSetDropFunctionParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDropFunctionParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_function_params, other.drop_function_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TMasterDdlRequest(");
    boolean first = true;

    sb.append("protocol_version:");
    if (this.protocol_version == null) {
      sb.append("null");
    } else {
      sb.append(this.protocol_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ddl_type:");
    if (this.ddl_type == null) {
      sb.append("null");
    } else {
      sb.append(this.ddl_type);
    }
    first = false;
    if (isSetCreateDbParams()) {
      if (!first) sb.append(", ");
      sb.append("create_db_params:");
      if (this.create_db_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_db_params);
      }
      first = false;
    }
    if (isSetDropDbParams()) {
      if (!first) sb.append(", ");
      sb.append("drop_db_params:");
      if (this.drop_db_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_db_params);
      }
      first = false;
    }
    if (isSetDropTableParams()) {
      if (!first) sb.append(", ");
      sb.append("drop_table_params:");
      if (this.drop_table_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_table_params);
      }
      first = false;
    }
    if (isSetLoadParams()) {
      if (!first) sb.append(", ");
      sb.append("load_params:");
      if (this.load_params == null) {
        sb.append("null");
      } else {
        sb.append(this.load_params);
      }
      first = false;
    }
    if (isSetCancelLoadParams()) {
      if (!first) sb.append(", ");
      sb.append("cancel_load_params:");
      if (this.cancel_load_params == null) {
        sb.append("null");
      } else {
        sb.append(this.cancel_load_params);
      }
      first = false;
    }
    if (isSetCreateUserParams()) {
      if (!first) sb.append(", ");
      sb.append("create_user_params:");
      if (this.create_user_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_user_params);
      }
      first = false;
    }
    if (isSetDropUserParams()) {
      if (!first) sb.append(", ");
      sb.append("drop_user_params:");
      if (this.drop_user_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_user_params);
      }
      first = false;
    }
    if (isSetCreateRollupParams()) {
      if (!first) sb.append(", ");
      sb.append("create_rollup_params:");
      if (this.create_rollup_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_rollup_params);
      }
      first = false;
    }
    if (isSetDropRollupParams()) {
      if (!first) sb.append(", ");
      sb.append("drop_rollup_params:");
      if (this.drop_rollup_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_rollup_params);
      }
      first = false;
    }
    if (isSetCreateFunctionParams()) {
      if (!first) sb.append(", ");
      sb.append("create_function_params:");
      if (this.create_function_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_function_params);
      }
      first = false;
    }
    if (isSetDropFunctionParams()) {
      if (!first) sb.append(", ");
      sb.append("drop_function_params:");
      if (this.drop_function_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_function_params);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (protocol_version == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'protocol_version' was not present! Struct: " + toString());
    }
    if (ddl_type == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ddl_type' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (create_db_params != null) {
      create_db_params.validate();
    }
    if (drop_db_params != null) {
      drop_db_params.validate();
    }
    if (drop_table_params != null) {
      drop_table_params.validate();
    }
    if (load_params != null) {
      load_params.validate();
    }
    if (cancel_load_params != null) {
      cancel_load_params.validate();
    }
    if (create_user_params != null) {
      create_user_params.validate();
    }
    if (drop_user_params != null) {
      drop_user_params.validate();
    }
    if (create_rollup_params != null) {
      create_rollup_params.validate();
    }
    if (drop_rollup_params != null) {
      drop_rollup_params.validate();
    }
    if (create_function_params != null) {
      create_function_params.validate();
    }
    if (drop_function_params != null) {
      drop_function_params.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TMasterDdlRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TMasterDdlRequestStandardScheme getScheme() {
      return new TMasterDdlRequestStandardScheme();
    }
  }

  private static class TMasterDdlRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<TMasterDdlRequest> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROTOCOL_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.protocol_version = org.apache.doris.thrift.TPaloInternalServiceVersion.findByValue(iprot.readI32());
              struct.setProtocolVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DDL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ddl_type = org.apache.doris.thrift.TCommonDdlType.findByValue(iprot.readI32());
              struct.setDdlTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATE_DB_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_db_params = new TCreateDbParams();
              struct.create_db_params.read(iprot);
              struct.setCreateDbParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DROP_DB_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_db_params = new TDropDbParams();
              struct.drop_db_params.read(iprot);
              struct.setDropDbParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DROP_TABLE_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_table_params = new TDropTableParams();
              struct.drop_table_params.read(iprot);
              struct.setDropTableParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LOAD_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.load_params = new TLoadParams();
              struct.load_params.read(iprot);
              struct.setLoadParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CANCEL_LOAD_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.cancel_load_params = new TCancelLoadParams();
              struct.cancel_load_params.read(iprot);
              struct.setCancelLoadParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_USER_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_user_params = new TCreateUserParams();
              struct.create_user_params.read(iprot);
              struct.setCreateUserParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DROP_USER_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_user_params = new TDropUserParams();
              struct.drop_user_params.read(iprot);
              struct.setDropUserParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_ROLLUP_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_rollup_params = new TCreateRollupParams();
              struct.create_rollup_params.read(iprot);
              struct.setCreateRollupParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DROP_ROLLUP_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_rollup_params = new TDropRollupParams();
              struct.drop_rollup_params.read(iprot);
              struct.setDropRollupParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_FUNCTION_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_function_params = new TCreateFunctionParams();
              struct.create_function_params.read(iprot);
              struct.setCreateFunctionParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DROP_FUNCTION_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_function_params = new TDropFunctionParams();
              struct.drop_function_params.read(iprot);
              struct.setDropFunctionParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.protocol_version != null) {
        oprot.writeFieldBegin(PROTOCOL_VERSION_FIELD_DESC);
        oprot.writeI32(struct.protocol_version.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.ddl_type != null) {
        oprot.writeFieldBegin(DDL_TYPE_FIELD_DESC);
        oprot.writeI32(struct.ddl_type.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.create_db_params != null) {
        if (struct.isSetCreateDbParams()) {
          oprot.writeFieldBegin(CREATE_DB_PARAMS_FIELD_DESC);
          struct.create_db_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_db_params != null) {
        if (struct.isSetDropDbParams()) {
          oprot.writeFieldBegin(DROP_DB_PARAMS_FIELD_DESC);
          struct.drop_db_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_table_params != null) {
        if (struct.isSetDropTableParams()) {
          oprot.writeFieldBegin(DROP_TABLE_PARAMS_FIELD_DESC);
          struct.drop_table_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.load_params != null) {
        if (struct.isSetLoadParams()) {
          oprot.writeFieldBegin(LOAD_PARAMS_FIELD_DESC);
          struct.load_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cancel_load_params != null) {
        if (struct.isSetCancelLoadParams()) {
          oprot.writeFieldBegin(CANCEL_LOAD_PARAMS_FIELD_DESC);
          struct.cancel_load_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_user_params != null) {
        if (struct.isSetCreateUserParams()) {
          oprot.writeFieldBegin(CREATE_USER_PARAMS_FIELD_DESC);
          struct.create_user_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_user_params != null) {
        if (struct.isSetDropUserParams()) {
          oprot.writeFieldBegin(DROP_USER_PARAMS_FIELD_DESC);
          struct.drop_user_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_rollup_params != null) {
        if (struct.isSetCreateRollupParams()) {
          oprot.writeFieldBegin(CREATE_ROLLUP_PARAMS_FIELD_DESC);
          struct.create_rollup_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_rollup_params != null) {
        if (struct.isSetDropRollupParams()) {
          oprot.writeFieldBegin(DROP_ROLLUP_PARAMS_FIELD_DESC);
          struct.drop_rollup_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_function_params != null) {
        if (struct.isSetCreateFunctionParams()) {
          oprot.writeFieldBegin(CREATE_FUNCTION_PARAMS_FIELD_DESC);
          struct.create_function_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_function_params != null) {
        if (struct.isSetDropFunctionParams()) {
          oprot.writeFieldBegin(DROP_FUNCTION_PARAMS_FIELD_DESC);
          struct.drop_function_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TMasterDdlRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TMasterDdlRequestTupleScheme getScheme() {
      return new TMasterDdlRequestTupleScheme();
    }
  }

  private static class TMasterDdlRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<TMasterDdlRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.protocol_version.getValue());
      oprot.writeI32(struct.ddl_type.getValue());
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCreateDbParams()) {
        optionals.set(0);
      }
      if (struct.isSetDropDbParams()) {
        optionals.set(1);
      }
      if (struct.isSetDropTableParams()) {
        optionals.set(2);
      }
      if (struct.isSetLoadParams()) {
        optionals.set(3);
      }
      if (struct.isSetCancelLoadParams()) {
        optionals.set(4);
      }
      if (struct.isSetCreateUserParams()) {
        optionals.set(5);
      }
      if (struct.isSetDropUserParams()) {
        optionals.set(6);
      }
      if (struct.isSetCreateRollupParams()) {
        optionals.set(7);
      }
      if (struct.isSetDropRollupParams()) {
        optionals.set(8);
      }
      if (struct.isSetCreateFunctionParams()) {
        optionals.set(9);
      }
      if (struct.isSetDropFunctionParams()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetCreateDbParams()) {
        struct.create_db_params.write(oprot);
      }
      if (struct.isSetDropDbParams()) {
        struct.drop_db_params.write(oprot);
      }
      if (struct.isSetDropTableParams()) {
        struct.drop_table_params.write(oprot);
      }
      if (struct.isSetLoadParams()) {
        struct.load_params.write(oprot);
      }
      if (struct.isSetCancelLoadParams()) {
        struct.cancel_load_params.write(oprot);
      }
      if (struct.isSetCreateUserParams()) {
        struct.create_user_params.write(oprot);
      }
      if (struct.isSetDropUserParams()) {
        struct.drop_user_params.write(oprot);
      }
      if (struct.isSetCreateRollupParams()) {
        struct.create_rollup_params.write(oprot);
      }
      if (struct.isSetDropRollupParams()) {
        struct.drop_rollup_params.write(oprot);
      }
      if (struct.isSetCreateFunctionParams()) {
        struct.create_function_params.write(oprot);
      }
      if (struct.isSetDropFunctionParams()) {
        struct.drop_function_params.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.protocol_version = org.apache.doris.thrift.TPaloInternalServiceVersion.findByValue(iprot.readI32());
      struct.setProtocolVersionIsSet(true);
      struct.ddl_type = org.apache.doris.thrift.TCommonDdlType.findByValue(iprot.readI32());
      struct.setDdlTypeIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.create_db_params = new TCreateDbParams();
        struct.create_db_params.read(iprot);
        struct.setCreateDbParamsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.drop_db_params = new TDropDbParams();
        struct.drop_db_params.read(iprot);
        struct.setDropDbParamsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.drop_table_params = new TDropTableParams();
        struct.drop_table_params.read(iprot);
        struct.setDropTableParamsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.load_params = new TLoadParams();
        struct.load_params.read(iprot);
        struct.setLoadParamsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.cancel_load_params = new TCancelLoadParams();
        struct.cancel_load_params.read(iprot);
        struct.setCancelLoadParamsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.create_user_params = new TCreateUserParams();
        struct.create_user_params.read(iprot);
        struct.setCreateUserParamsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.drop_user_params = new TDropUserParams();
        struct.drop_user_params.read(iprot);
        struct.setDropUserParamsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.create_rollup_params = new TCreateRollupParams();
        struct.create_rollup_params.read(iprot);
        struct.setCreateRollupParamsIsSet(true);
      }
      if (incoming.get(8)) {
        struct.drop_rollup_params = new TDropRollupParams();
        struct.drop_rollup_params.read(iprot);
        struct.setDropRollupParamsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.create_function_params = new TCreateFunctionParams();
        struct.create_function_params.read(iprot);
        struct.setCreateFunctionParamsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.drop_function_params = new TDropFunctionParams();
        struct.drop_function_params.read(iprot);
        struct.setDropFunctionParamsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

