// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

package org.apache.doris.catalog;

import org.apache.doris.nereids.trees.expressions.Like;
import org.apache.doris.nereids.trees.expressions.Regexp;
import org.apache.doris.nereids.trees.expressions.functions.scalar.*;

import com.google.common.collect.ImmutableList;
import org.apache.doris.nereids.trees.expressions.functions.scalar.Database;

import java.util.List;

/**
 * Builtin scalar functions.
 * <p>
 * Note: Please ensure that this class only has some lists and no procedural code.
 * It helps to be clear and concise.
 */
public class BuiltinScalarFunctions implements FunctionHelper {
    public final List<ScalarFunc> scalarFunctions = ImmutableList.of(
            scalar(Abs.class, "abs"),
            scalar(Acos.class, "acos"),
            scalar(AesDecrypt.class, "aes_decrypt"),
            scalar(AesDecryptV2.class, "aes_decrypt_v2"),
            scalar(AesEncrypt.class, "aes_encrypt"),
            scalar(AesEncryptV2.class, "aes_encrypt_v2"),
            scalar(AppendTrailingCharIfAbsent.class, "append_trailing_char_if_absent"),
            scalar(Array.class, "array"),
            scalar(ArrayApply.class, "array_apply"),
            scalar(ArrayAvg.class, "array_avg"),
            scalar(ArrayCompact.class, "array_compact"),
            scalar(ArrayConcat.class, "array_concat"),
            scalar(ArrayContains.class, "array_contains"),
            scalar(ArrayCount.class, "array_count"),
            scalar(ArrayCumSum.class, "array_cum_sum"),
            scalar(ArrayDifference.class, "array_difference"),
            scalar(ArrayDistinct.class, "array_distinct"),
            scalar(ArrayEnumerate.class, "array_enumerate"),
            scalar(ArrayEnumerateUniq.class, "array_enumerate_uniq"),
            scalar(ArrayExcept.class, "array_except"),
            scalar(ArrayExists.class, "array_exists"),
            scalar(ArrayFilter.class, "array_filter"),
            scalar(ArrayFirst.class, "array_first"),
            scalar(ArrayFirstIndex.class, "array_first_index"),
            scalar(ArrayIntersect.class, "array_intersect"),
            scalar(ArrayJoin.class, "array_join"),
            scalar(ArrayLast.class, "array_last"),
            scalar(ArrayLastIndex.class, "array_last_index"),
            scalar(ArrayMap.class, "array_map"),
            scalar(ArrayMax.class, "array_max"),
            scalar(ArrayMin.class, "array_min"),
            scalar(ArrayPopBack.class, "array_popback"),
            scalar(ArrayPopFront.class, "array_popfront"),
            scalar(ArrayPosition.class, "array_position"),
            scalar(ArrayProduct.class, "array_product"),
            scalar(ArrayPushBack.class, "Array_pushback"),
            scalar(ArrayPushFront.class, "Array_pushfront"),
            scalar(ArrayRange.class, "array_range"),
            scalar(ArrayRemove.class, "array_remove"),
            scalar(ArrayRepeat.class, "array_repeat"),
            scalar(ArrayReverseSort.class, "array_reverse_sort"),
            scalar(ArraySlice.class, "array_slice"),
            scalar(ArraySort.class, "array_sort"),
            scalar(ArraySortBy.class, "array_sortby"),
            scalar(ArrayShuffle.class, "array_shuffle", "shuffle"),
            scalar(ArraySum.class, "array_sum"),
            scalar(ArrayUnion.class, "array_union"),
            scalar(ArrayWithConstant.class, "array_with_constant"),
            scalar(ArrayZip.class, "array_zip"),
            scalar(ArraysOverlap.class, "arrays_overlap"),
            scalar(Ascii.class, "ascii"),
            scalar(Asin.class, "asin"),
            scalar(Atan.class, "atan"),
            scalar(Bin.class, "bin"),
            scalar(BitCount.class, "bit_count"),
            scalar(BitLength.class, "bit_length"),
            scalar(BitmapAnd.class, "bitmap_and"),
            scalar(BitmapAndCount.class, "bitmap_and_count"),
            scalar(BitmapAndNot.class, "bitmap_and_not"),
            scalar(BitmapAndNotAlias.class, "bitmap_andnot"),
            scalar(BitmapAndNotCount.class, "bitmap_and_not_count"),
            scalar(BitmapAndNotCountAlias.class, "bitmap_andnot_count"),
            scalar(BitmapContains.class, "bitmap_contains"),
            scalar(BitmapCount.class, "bitmap_count"),
            scalar(BitmapEmpty.class, "bitmap_empty"),
            scalar(BitmapFromArray.class, "bitmap_from_array"),
            scalar(BitmapFromBase64.class, "bitmap_from_base64"),
            scalar(BitmapFromString.class, "bitmap_from_string"),
            scalar(BitmapHasAll.class, "bitmap_has_all"),
            scalar(BitmapHasAny.class, "bitmap_has_any"),
            scalar(BitmapHash.class, "bitmap_hash"),
            scalar(BitmapHash64.class, "bitmap_hash64"),
            scalar(BitmapMax.class, "bitmap_max"),
            scalar(BitmapMin.class, "bitmap_min"),
            scalar(BitmapNot.class, "bitmap_not"),
            scalar(BitmapOr.class, "bitmap_or"),
            scalar(BitmapOrCount.class, "bitmap_or_count"),
            scalar(BitmapRemove.class, "bitmap_remove"),
            scalar(BitmapSubsetInRange.class, "bitmap_subset_in_range"),
            scalar(BitmapSubsetLimit.class, "bitmap_subset_limit"),
            scalar(BitmapToArray.class, "bitmap_to_array"),
            scalar(BitmapToBase64.class, "bitmap_to_base64"),
            scalar(BitmapToString.class, "bitmap_to_string"),
            scalar(BitmapXor.class, "bitmap_xor"),
            scalar(BitmapXorCount.class, "bitmap_xor_count"),
            scalar(BitShiftLeft.class, "bit_shift_left"),
            scalar(BitShiftRight.class, "bit_shift_right"),
            scalar(Cardinality.class, "array_size", "cardinality", "size"),
            scalar(Cbrt.class, "cbrt"),
            scalar(Ceil.class, "ceil", "ceiling"),
            scalar(Char.class, "char"),
            scalar(CharacterLength.class, "char_length", "character_length"),
            scalar(Coalesce.class, "coalesce"),
            scalar(Concat.class, "concat"),
            scalar(ConcatWs.class, "concat_ws"),
            scalar(ConnectionId.class, "connection_id"),
            scalar(Conv.class, "conv"),
            scalar(ConvertTo.class, "convert_to"),
            scalar(ConvertTz.class, "convert_tz"),
            scalar(Cos.class, "cos"),
            scalar(CosineDistance.class, "cosine_distance"),
            scalar(CountEqual.class, "countequal"),
            scalar(CreateMap.class, "map"),
            scalar(CreateStruct.class, "struct"),
            scalar(CreateNamedStruct.class, "named_struct"),
            scalar(CurrentCatalog.class, "current_catalog"),
            scalar(CurrentDate.class, "curdate", "current_date"),
            scalar(CurrentTime.class, "curtime", "current_time"),
            scalar(CurrentUser.class, "current_user"),
            scalar(Database.class, "database", "schema"),
            scalar(Date.class, "date"),
            scalar(DateDiff.class, "datediff"),
            scalar(DateFormat.class, "date_format"),
            scalar(DateTrunc.class, "date_trunc"),
            scalar(DateV2.class, "datev2"),
            scalar(DayCeil.class, "day_ceil"),
            scalar(DayFloor.class, "day_floor"),
            scalar(DayName.class, "dayname"),
            scalar(DayOfMonth.class, "day", "dayofmonth"),
            scalar(DayOfWeek.class, "dayofweek"),
            scalar(DayOfYear.class, "dayofyear"),
            scalar(DaysAdd.class, "days_add", "date_add", "adddate"),
            scalar(DaysDiff.class, "days_diff"),
            scalar(DaysSub.class, "days_sub", "date_sub", "subdate"),
            scalar(Dceil.class, "dceil"),
            scalar(Degrees.class, "degrees"),
            scalar(Dexp.class, "dexp"),
            scalar(Dfloor.class, "dfloor"),
            scalar(DigitalMasking.class, "digital_masking"),
            scalar(Dlog1.class, "dlog1"),
            scalar(Dlog10.class, "dlog10"),
            scalar(Domain.class, "domain"),
            scalar(DomainWithoutWww.class, "domain_without_www"),
            scalar(Dpow.class, "dpow"),
            scalar(Dround.class, "dround"),
            scalar(Dsqrt.class, "dsqrt"),
            scalar(E.class, "e"),
            scalar(ElementAt.class, "element_at"),
            scalar(Elt.class, "elt"),
            scalar(EndsWith.class, "ends_with"),
            scalar(EsQuery.class, "esquery"),
            scalar(Exp.class, "exp"),
            scalar(ExtractUrlParameter.class, "extract_url_parameter"),
            scalar(Field.class, "field"),
            scalar(FindInSet.class, "find_in_set"),
            scalar(Floor.class, "floor"),
            scalar(Fmod.class, "fmod"),
            scalar(Fpow.class, "fpow"),
            scalar(FromBase64.class, "from_base64"),
            scalar(FromDays.class, "from_days"),
            scalar(FromUnixtime.class, "from_unixtime"),
            scalar(G.class, "g"),
            scalar(GetJsonBigInt.class, "get_json_bigint"),
            scalar(GetJsonDouble.class, "get_json_double"),
            scalar(GetJsonInt.class, "get_json_int"),
            scalar(GetJsonString.class, "get_json_string"),
            scalar(Greatest.class, "greatest"),
            scalar(Grouping.class, "grouping"),
            scalar(GroupingId.class, "grouping_id"),
            scalar(Hex.class, "hex"),
            scalar(HllCardinality.class, "hll_cardinality"),
            scalar(HllEmpty.class, "hll_empty"),
            scalar(HllHash.class, "hll_hash"),
            scalar(Hour.class, "hour"),
            scalar(HourCeil.class, "hour_ceil"),
            scalar(HourFloor.class, "hour_floor"),
            scalar(HoursAdd.class, "hours_add"),
            scalar(HoursDiff.class, "hours_diff"),
            scalar(HoursSub.class, "hours_sub"),
            scalar(If.class, "if"),
            scalar(Ignore.class, "ignore"),
            scalar(Initcap.class, "initcap"),
            scalar(InnerProduct.class, "inner_product"),
            scalar(Instr.class, "instr"),
            scalar(Ipv4NumToString.class, "ipv4_num_to_string", "inet_ntoa"),
            scalar(Ipv4StringToNum.class, "ipv4_string_to_num"),
            scalar(Ipv4StringToNumOrDefault.class, "ipv4_string_to_num_or_default"),
            scalar(Ipv4StringToNumOrNull.class, "ipv4_string_to_num_or_null", "inet_aton"),
            scalar(Ipv6NumToString.class, "ipv6_num_to_string", "inet6_ntoa"),
            scalar(Ipv6StringToNum.class, "ipv6_string_to_num"),
            scalar(Ipv6StringToNumOrDefault.class, "ipv6_string_to_num_or_default"),
            scalar(Ipv6StringToNumOrNull.class, "ipv6_string_to_num_or_null", "inet6_aton"),
            scalar(IsIpv4Compat.class, "is_ipv4_compat"),
            scalar(IsIpv4Mapped.class, "is_ipv4_mapped"),
            scalar(IsIpv4String.class, "is_ipv4_string"),
            scalar(IsIpv6String.class, "is_ipv6_string"),
            scalar(IsIpAddressInRange.class, "is_ip_address_in_range"),
            scalar(Ipv4CIDRToRange.class, "ipv4_cidr_to_range"),
            scalar(Ipv6CIDRToRange.class, "ipv6_cidr_to_range"),
            scalar(ToIpv4.class, "to_ipv4"),
            scalar(ToIpv4OrDefault.class, "to_ipv4_or_default"),
            scalar(ToIpv4OrNull.class, "to_ipv4_or_null"),
            scalar(ToIpv6.class, "to_ipv6"),
            scalar(ToIpv6OrDefault.class, "to_ipv6_or_default"),
            scalar(ToIpv6OrNull.class, "to_ipv6_or_null"),
            scalar(JsonArray.class, "json_array"),
            scalar(JsonObject.class, "json_object"),
            scalar(JsonQuote.class, "json_quote"),
            scalar(JsonUnQuote.class, "json_unquote"),
            scalar(JsonExtract.class, "json_extract"),
            scalar(JsonInsert.class, "json_insert"),
            scalar(JsonReplace.class, "json_replace"),
            scalar(JsonSet.class, "json_set"),
            scalar(JsonbExistsPath.class, "json_exists_path"),
            scalar(JsonbExistsPath.class, "jsonb_exists_path"),
            scalar(JsonbExtract.class, "jsonb_extract"),
            scalar(JsonbExtractBigint.class, "json_extract_bigint"),
            scalar(JsonbExtractBigint.class, "jsonb_extract_bigint"),
            scalar(JsonbExtractLargeint.class, "json_extract_largeint"),
            scalar(JsonbExtractLargeint.class, "jsonb_extract_largeint"),
            scalar(JsonbExtractBool.class, "json_extract_bool"),
            scalar(JsonbExtractBool.class, "jsonb_extract_bool"),
            scalar(JsonbExtractDouble.class, "json_extract_double"),
            scalar(JsonbExtractDouble.class, "jsonb_extract_double"),
            scalar(JsonbExtractInt.class, "json_extract_int"),
            scalar(JsonbExtractInt.class, "jsonb_extract_int"),
            scalar(JsonbExtractIsnull.class, "json_extract_isnull"),
            scalar(JsonbExtractIsnull.class, "jsonb_extract_isnull"),
            scalar(JsonbExtractString.class, "json_extract_string"),
            scalar(JsonbExtractString.class, "jsonb_extract_string"),
            scalar(JsonbParse.class, "json_parse"),
            scalar(JsonbParse.class, "jsonb_parse"),
            scalar(JsonbParseErrorToInvalid.class, "json_parse_error_to_invalid"),
            scalar(JsonbParseErrorToInvalid.class, "jsonb_parse_error_to_invalid"),
            scalar(JsonbParseErrorToNull.class, "json_parse_error_to_null"),
            scalar(JsonbParseErrorToNull.class, "jsonb_parse_error_to_null"),
            scalar(JsonbParseErrorToValue.class, "json_parse_error_to_value"),
            scalar(JsonbParseErrorToValue.class, "jsonb_parse_error_to_value"),
            scalar(JsonbParseNotnull.class, "json_parse_notnull"),
            scalar(JsonbParseNotnull.class, "jsonb_parse_notnull"),
            scalar(JsonbParseNotnullErrorToInvalid.class, "json_parse_notnull_error_to_invalid"),
            scalar(JsonbParseNotnullErrorToInvalid.class, "jsonb_parse_notnull_error_to_invalid"),
            scalar(JsonbParseNotnullErrorToValue.class, "json_parse_notnull_error_to_value"),
            scalar(JsonbParseNotnullErrorToValue.class, "jsonb_parse_notnull_error_to_value"),
            scalar(JsonbParseNullable.class, "json_parse_nullable"),
            scalar(JsonbParseNullable.class, "jsonb_parse_nullable"),
            scalar(JsonbParseNullableErrorToInvalid.class, "json_parse_nullable_error_to_invalid"),
            scalar(JsonbParseNullableErrorToInvalid.class, "jsonb_parse_nullable_error_to_invalid"),
            scalar(JsonbParseNullableErrorToNull.class, "json_parse_nullable_error_to_null"),
            scalar(JsonbParseNullableErrorToNull.class, "jsonb_parse_nullable_error_to_null"),
            scalar(JsonbParseNullableErrorToValue.class, "json_parse_nullable_error_to_value"),
            scalar(JsonbParseNullableErrorToValue.class, "jsonb_parse_nullable_error_to_value"),
            scalar(JsonbValid.class, "json_valid"),
            scalar(JsonbValid.class, "jsonb_valid"),
            scalar(JsonbType.class, "json_type"),
            scalar(JsonbType.class, "jsonb_type"),
            scalar(JsonLength.class, "json_length"),
            scalar(JsonContains.class, "json_contains"),
            scalar(L1Distance.class, "l1_distance"),
            scalar(L2Distance.class, "l2_distance"),
            scalar(LastDay.class, "last_day"),
            scalar(Least.class, "least"),
            scalar(Left.class, "left"),
            scalar(Length.class, "length"),
            scalar(Like.class, "like"),
            scalar(Ln.class, "ln"),
            scalar(Locate.class, "locate"),
            scalar(Log.class, "log"),
            scalar(Log10.class, "log10"),
            scalar(Log2.class, "log2"),
            scalar(Lower.class, "lcase", "lower"),
            scalar(Lpad.class, "lpad"),
            scalar(Ltrim.class, "ltrim"),
            scalar(MakeDate.class, "makedate"),
            scalar(MapContainsKey.class, "map_contains_key"),
            scalar(MapContainsValue.class, "map_contains_value"),
            scalar(MapKeys.class, "map_keys"),
            scalar(MapSize.class, "map_size"),
            scalar(MapValues.class, "map_values"),
            scalar(Mask.class, "mask"),
            scalar(MaskFirstN.class, "mask_first_n"),
            scalar(MaskLastN.class, "mask_last_n"),
            scalar(Md5.class, "md5"),
            scalar(Md5Sum.class, "md5sum"),
            scalar(Microsecond.class, "microsecond"),
            scalar(MicroSecondsAdd.class, "microseconds_add"),
            scalar(MicroSecondsDiff.class, "microseconds_diff"),
            scalar(MicroSecondsSub.class, "microseconds_sub"),
            scalar(MilliSecondsAdd.class, "milliseconds_add"),
            scalar(MilliSecondsDiff.class, "milliseconds_diff"),
            scalar(MilliSecondsSub.class, "milliseconds_sub"),
            scalar(Minute.class, "minute"),
            scalar(MinuteCeil.class, "minute_ceil"),
            scalar(MinuteFloor.class, "minute_floor"),
            scalar(MinutesAdd.class, "minutes_add"),
            scalar(MinutesDiff.class, "minutes_diff"),
            scalar(MinutesSub.class, "minutes_sub"),
            scalar(MoneyFormat.class, "money_format"),
            scalar(Month.class, "month"),
            scalar(MonthCeil.class, "month_ceil"),
            scalar(MonthFloor.class, "month_floor"),
            scalar(MonthName.class, "monthname"),
            scalar(MonthsAdd.class, "months_add", "add_months"),
            scalar(MonthsDiff.class, "months_diff"),
            scalar(MonthsSub.class, "months_sub"),
            scalar(MultiMatchAny.class, "multi_match_any"),
            scalar(MultiSearchAllPositions.class, "multi_search_all_positions"),
            scalar(MurmurHash332.class, "murmur_hash3_32"),
            scalar(MurmurHash364.class, "murmur_hash3_64"),
            scalar(Negative.class, "negative"),
            scalar(NonNullable.class, "non_nullable"),
            scalar(NotNullOrEmpty.class, "not_null_or_empty"),
            scalar(Now.class, "now", "current_timestamp", "localtime", "localtimestamp"),
            scalar(Nullable.class, "nullable"),
            scalar(NullIf.class, "nullif"),
            scalar(NullOrEmpty.class, "null_or_empty"),
            scalar(Nvl.class, "ifnull", "nvl"),
            scalar(ParseUrl.class, "parse_url"),
            scalar(Password.class, "password"),
            scalar(Pi.class, "pi"),
            scalar(Pmod.class, "pmod"),
            scalar(Positive.class, "positive"),
            scalar(Pow.class, "pow"),
            scalar(Power.class, "power"),
            scalar(Protocol.class, "protocol"),
            scalar(QuantilePercent.class, "quantile_percent"),
            scalar(QuantileStateEmpty.class, "quantile_state_empty"),
            scalar(Quarter.class, "quarter"),
            scalar(Radians.class, "radians"),
            scalar(Random.class, "rand", "random"),
            scalar(Regexp.class, "regexp"),
            scalar(RegexpExtract.class, "regexp_extract"),
            scalar(RegexpExtractAll.class, "regexp_extract_all"),
            scalar(RegexpReplace.class, "regexp_replace"),
            scalar(RegexpReplaceOne.class, "regexp_replace_one"),
            scalar(Repeat.class, "repeat"),
            scalar(Replace.class, "replace"),
            scalar(Reverse.class, "reverse"),
            scalar(Right.class, "right"),
            scalar(Round.class, "round"),
            scalar(RoundBankers.class, "round_bankers"),
            scalar(Rpad.class, "rpad"),
            scalar(Rtrim.class, "rtrim"),
            scalar(Second.class, "second"),
            scalar(SecondCeil.class, "second_ceil"),
            scalar(SecondFloor.class, "second_floor"),
            scalar(SecondsAdd.class, "seconds_add"),
            scalar(SecondsDiff.class, "seconds_diff"),
            scalar(SecondsSub.class, "seconds_sub"),
            scalar(SecToTime.class, "sec_to_time"),
            scalar(FromMicrosecond.class, "from_microsecond"),
            scalar(FromMillisecond.class, "from_millisecond"),
            scalar(FromSecond.class, "from_second"),
            scalar(SecondTimestamp.class, "second_timestamp"),
            scalar(MilliSecondTimestamp.class, "millisecond_timestamp"),
            scalar(MicroSecondTimestamp.class, "microsecond_timestamp"),
            scalar(Sha1.class, "sha1", "sha"),
            scalar(Sha2.class, "sha2"),
            scalar(Sign.class, "sign"),
            scalar(Sin.class, "sin"),
            scalar(Sleep.class, "sleep"),
            scalar(StructElement.class, "struct_element"),
            scalar(Sm3.class, "sm3"),
            scalar(Sm3sum.class, "sm3sum"),
            scalar(Sm4Decrypt.class, "sm4_decrypt"),
            scalar(Sm4DecryptV2.class, "sm4_decrypt_v2"),
            scalar(Sm4Encrypt.class, "sm4_encrypt"),
            scalar(Sm4EncryptV2.class, "sm4_encrypt_v2"),
            scalar(Space.class, "space"),
            scalar(SplitByChar.class, "split_by_char"),
            scalar(SplitByString.class, "split_by_string"),
            scalar(SplitPart.class, "split_part"),
            scalar(Sqrt.class, "sqrt"),
            scalar(StAsBinary.class, "st_asbinary"),
            scalar(StAstext.class, "st_astext"),
            scalar(StAswkt.class, "st_aswkt"),
            scalar(StCircle.class, "st_circle"),
            scalar(StContains.class, "st_contains"),
            scalar(StDistanceSphere.class, "st_distance_sphere"),
            scalar(StAngleSphere.class, "st_angle_sphere"),
            scalar(StAngle.class, "st_angle"),
            scalar(StAzimuth.class, "st_azimuth"),
            scalar(StAreaSquareMeters.class, "st_area_square_meters"),
            scalar(StAreaSquareKm.class, "st_area_square_km"),
            scalar(StGeometryfromtext.class, "st_geometryfromtext"),
            scalar(StGeometryFromWKB.class, "st_geometryfromwkb"),
            scalar(StGeomfromtext.class, "st_geomfromtext"),
            scalar(StGeomFromWKB.class, "st_geomfromwkb"),
            scalar(StLinefromtext.class, "st_linefromtext"),
            scalar(StLinestringfromtext.class, "st_linestringfromtext"),
            scalar(StPoint.class, "st_point"),
            scalar(StPolyfromtext.class, "st_polyfromtext"),
            scalar(StPolygon.class, "st_polygon"),
            scalar(StPolygonfromtext.class, "st_polygonfromtext"),
            scalar(StX.class, "st_x"),
            scalar(StY.class, "st_y"),
            scalar(StartsWith.class, "starts_with"),
            scalar(StrLeft.class, "strleft"),
            scalar(StrRight.class, "strright"),
            scalar(StrToDate.class, "str_to_date"),
            scalar(SubBitmap.class, "sub_bitmap"),
            scalar(SubReplace.class, "sub_replace"),
            scalar(Substring.class, "substr", "substring"),
            scalar(SubstringIndex.class, "substring_index"),
            scalar(Tan.class, "tan"),
            scalar(TimeDiff.class, "timediff"),
            scalar(TimeToSec.class, "time_to_sec"),
            scalar(Timestamp.class, "timestamp"),
            scalar(ToBase64.class, "to_base64"),
            scalar(ToBitmap.class, "to_bitmap"),
            scalar(ToBitmapWithCheck.class, "to_bitmap_with_check"),
            scalar(ToDate.class, "to_date"),
            scalar(ToDateV2.class, "to_datev2"),
            scalar(ToDays.class, "to_days"),
            scalar(Tokenize.class, "tokenize"),
            scalar(ToMonday.class, "to_monday"),
            scalar(ToQuantileState.class, "to_quantile_state"),
            scalar(Trim.class, "trim"),
            scalar(Truncate.class, "truncate"),
            scalar(Unhex.class, "unhex"),
            scalar(UnixTimestamp.class, "unix_timestamp"),
            scalar(Upper.class, "ucase", "upper"),
            scalar(UrlDecode.class, "url_decode"),
            scalar(User.class, "user"),
            scalar(UtcTimestamp.class, "utc_timestamp"),
            scalar(Uuid.class, "uuid"),
            scalar(UuidNumeric.class, "uuid_numeric"),
            scalar(Version.class, "version"),
            scalar(Week.class, "week"),
            scalar(WeekCeil.class, "week_ceil"),
            scalar(WeekFloor.class, "week_floor"),
            scalar(WeekOfYear.class, "weekofyear"),
            scalar(Weekday.class, "weekday"),
            scalar(WeeksAdd.class, "weeks_add"),
            scalar(WeeksDiff.class, "weeks_diff"),
            scalar(WeeksSub.class, "weeks_sub"),
            scalar(WidthBucket.class, "width_bucket"),
            scalar(Year.class, "year"),
            scalar(YearCeil.class, "year_ceil"),
            scalar(YearFloor.class, "year_floor"),
            scalar(YearWeek.class, "yearweek"),
            scalar(YearsAdd.class, "years_add"),
            scalar(YearsDiff.class, "years_diff"),
            scalar(YearsSub.class, "years_sub")
    );

    public static final BuiltinScalarFunctions INSTANCE = new BuiltinScalarFunctions();

    // Note: Do not add any code here!
    private BuiltinScalarFunctions() {}
}
