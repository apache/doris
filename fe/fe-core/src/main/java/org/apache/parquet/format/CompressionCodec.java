/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.parquet.format;


/**
 * Supported compression algorithms.
 * 
 * Codecs added in format version X.Y can be read by readers based on X.Y and later.
 * Codec support may vary between readers based on the format version and
 * libraries available at runtime.
 * 
 * See Compression.md for a detailed specification of these algorithms.
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2023-04-28")
public enum CompressionCodec implements org.apache.thrift.TEnum {
  UNCOMPRESSED(0),
  SNAPPY(1),
  GZIP(2),
  LZO(3),
  BROTLI(4),
  LZ4(5),
  ZSTD(6),
  LZ4_RAW(7);

  private final int value;

  private CompressionCodec(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static CompressionCodec findByValue(int value) { 
    switch (value) {
      case 0:
        return UNCOMPRESSED;
      case 1:
        return SNAPPY;
      case 2:
        return GZIP;
      case 3:
        return LZO;
      case 4:
        return BROTLI;
      case 5:
        return LZ4;
      case 6:
        return ZSTD;
      case 7:
        return LZ4_RAW;
      default:
        return null;
    }
  }
}
