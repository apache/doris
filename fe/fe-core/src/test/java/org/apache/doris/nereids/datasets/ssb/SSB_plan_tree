SELECT SUM(lo_extendedprice * lo_discount) AS REVENUE
FROM lineorder, dates
WHERE
    lo_orderdate = d_datekey
    AND d_year = 1993
    AND lo_discount BETWEEN 1 AND 3
    AND lo_quantity < 25

LogicalProject ( projects=[sum((lo_extendedprice * lo_discount))#36 AS `REVENUE`#0] )
+--LogicalAggregate ( phase=LOCAL, outputExpr=[sum((lo_extendedprice * lo_discount)#35) AS `sum((lo_extendedprice * lo_discount))`#36], groupByExpr=[] )
   +--LogicalProject ( projects=[(lo_extendedprice#10 * lo_discount#12) AS `(lo_extendedprice * lo_discount)`#35] )
      +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#18)], otherJoinCondition=[] )
         |--LogicalProject ( projects=[lo_orderdate#6, lo_extendedprice#10, lo_discount#12] )
         |  +--LogicalFilter ( predicates=(((lo_discount#12 >= 1) AND (lo_discount#12 <= 3)) AND (lo_quantity#9 < 25)) )
         |     +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
         +--LogicalProject ( projects=[d_datekey#18] )
            +--LogicalFilter ( predicates=(d_year#22 = 1993) )
               +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#18, d_date#19, d_dayofweek#20, d_month#21, d_year#22, d_yearmonthnum#23, d_yearmonth#24, d_daynuminweek#25, d_daynuminmonth#26, d_daynuminyear#27, d_monthnuminyear#28, d_weeknuminyear#29, d_sellingseason#30, d_lastdayinweekfl#31, d_lastdayinmonthfl#32, d_holidayfl#33, d_weekdayfl#34], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
SELECT SUM(lo_extendedprice * lo_discount) AS REVENUE
FROM lineorder, dates
WHERE
    lo_orderdate = d_datekey
    AND d_yearmonth = 'Jan1994'
    AND lo_discount BETWEEN 4 AND 6
    AND lo_quantity BETWEEN 26 AND 35

LogicalProject ( projects=[sum((lo_extendedprice * lo_discount))#36 AS `REVENUE`#0] )
+--LogicalAggregate ( phase=LOCAL, outputExpr=[sum((lo_extendedprice * lo_discount)#35) AS `sum((lo_extendedprice * lo_discount))`#36], groupByExpr=[] )
   +--LogicalProject ( projects=[(lo_extendedprice#10 * lo_discount#12) AS `(lo_extendedprice * lo_discount)`#35] )
      +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#18)], otherJoinCondition=[] )
         |--LogicalProject ( projects=[lo_orderdate#6, lo_extendedprice#10, lo_discount#12] )
         |  +--LogicalFilter ( predicates=((((lo_discount#12 >= 4) AND (lo_discount#12 <= 6)) AND (lo_quantity#9 >= 26)) AND (lo_quantity#9 <= 35)) )
         |     +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
         +--LogicalProject ( projects=[d_datekey#18] )
            +--LogicalFilter ( predicates=(CAST(d_yearmonth AS STRING) = 'Jan1994') )
               +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#18, d_date#19, d_dayofweek#20, d_month#21, d_year#22, d_yearmonthnum#23, d_yearmonth#24, d_daynuminweek#25, d_daynuminmonth#26, d_daynuminyear#27, d_monthnuminyear#28, d_weeknuminyear#29, d_sellingseason#30, d_lastdayinweekfl#31, d_lastdayinmonthfl#32, d_holidayfl#33, d_weekdayfl#34], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
SELECT
    SUM(lo_extendedprice * lo_discount) AS REVENUE
FROM lineorder, dates
WHERE
    lo_orderdate = d_datekey
    AND d_weeknuminyear = 6
    AND d_year = 1994
    AND lo_discount BETWEEN 5 AND 7
    AND lo_quantity BETWEEN 26 AND 35

LogicalProject ( projects=[sum((lo_extendedprice * lo_discount))#36 AS `REVENUE`#0] )
+--LogicalAggregate ( phase=LOCAL, outputExpr=[sum((lo_extendedprice * lo_discount)#35) AS `sum((lo_extendedprice * lo_discount))`#36], groupByExpr=[] )
   +--LogicalProject ( projects=[(lo_extendedprice#10 * lo_discount#12) AS `(lo_extendedprice * lo_discount)`#35] )
      +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#18)], otherJoinCondition=[] )
         |--LogicalProject ( projects=[lo_orderdate#6, lo_extendedprice#10, lo_discount#12] )
         |  +--LogicalFilter ( predicates=((((lo_discount#12 >= 5) AND (lo_discount#12 <= 7)) AND (lo_quantity#9 >= 26)) AND (lo_quantity#9 <= 35)) )
         |     +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
         +--LogicalProject ( projects=[d_datekey#18] )
            +--LogicalFilter ( predicates=((d_weeknuminyear#29 = 6) AND (d_year#22 = 1994)) )
               +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#18, d_date#19, d_dayofweek#20, d_month#21, d_year#22, d_yearmonthnum#23, d_yearmonth#24, d_daynuminweek#25, d_daynuminmonth#26, d_daynuminyear#27, d_monthnuminyear#28, d_weeknuminyear#29, d_sellingseason#30, d_lastdayinweekfl#31, d_lastdayinmonthfl#32, d_holidayfl#33, d_weekdayfl#34], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
SELECT SUM(lo_revenue), d_year, p_brand
FROM lineorder, dates, part, supplier
WHERE
    lo_orderdate = d_datekey
    AND lo_partkey = p_partkey
    AND lo_suppkey = s_suppkey
    AND p_category = 'MFGR#12'
    AND s_region = 'AMERICA'
GROUP BY d_year, p_brand
ORDER BY d_year, p_brand

LogicalSort ( orderKeys=[d_year#21, p_brand#38] )
+--LogicalProject ( projects=[sum(lo_revenue)#51 AS `SUM(lo_revenue)`#50, d_year#21, p_brand#38] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[d_year#21, p_brand#38, sum(lo_revenue#12) AS `sum(lo_revenue)`#51], groupByExpr=[d_year#21, p_brand#38] )
      +--LogicalProject ( projects=[lo_revenue#12, d_year#21, p_brand#38] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#4 = s_suppkey#43)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_suppkey#4, lo_revenue#12, d_year#21, p_brand#38] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_partkey#3 = p_partkey#34)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_partkey#3, lo_suppkey#4, lo_revenue#12, d_year#21] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#5 = d_datekey#17)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_partkey#3, lo_suppkey#4, lo_orderdate#5, lo_revenue#12] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#0, lo_linenumber#1, lo_custkey#2, lo_partkey#3, lo_suppkey#4, lo_orderdate#5, lo_orderpriority#6, lo_shippriority#7, lo_quantity#8, lo_extendedprice#9, lo_ordtotalprice#10, lo_discount#11, lo_revenue#12, lo_supplycost#13, lo_tax#14, lo_commitdate#15, lo_shipmode#16], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[d_datekey#17, d_year#21] )
            |     |        +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#17, d_date#18, d_dayofweek#19, d_month#20, d_year#21, d_yearmonthnum#22, d_yearmonth#23, d_daynuminweek#24, d_daynuminmonth#25, d_daynuminyear#26, d_monthnuminyear#27, d_weeknuminyear#28, d_sellingseason#29, d_lastdayinweekfl#30, d_lastdayinmonthfl#31, d_holidayfl#32, d_weekdayfl#33], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
            |     +--LogicalProject ( projects=[p_partkey#34, p_brand#38] )
            |        +--LogicalFilter ( predicates=(CAST(p_category AS STRING) = 'MFGR#12') )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.part, output=[p_partkey#34, p_name#35, p_mfgr#36, p_category#37, p_brand#38, p_color#39, p_type#40, p_size#41, p_container#42], candidateIndexIds=[10751], selectedIndexId=10751, preAgg=ON )
            +--LogicalProject ( projects=[s_suppkey#43] )
               +--LogicalFilter ( predicates=(CAST(s_region AS STRING) = 'AMERICA') )
                  +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#43, s_name#44, s_address#45, s_city#46, s_nation#47, s_region#48, s_phone#49], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
---------------------
SELECT SUM(lo_revenue), d_year, p_brand
FROM lineorder, dates, part, supplier
WHERE
    lo_orderdate = d_datekey
    AND lo_partkey = p_partkey
    AND lo_suppkey = s_suppkey
    AND p_brand BETWEEN 'MFGR#2221' AND 'MFGR#2228'
    AND s_region = 'ASIA'
GROUP BY d_year, p_brand
ORDER BY d_year, p_brand

LogicalSort ( orderKeys=[d_year#21, p_brand#38] )
+--LogicalProject ( projects=[sum(lo_revenue)#51 AS `SUM(lo_revenue)`#50, d_year#21, p_brand#38] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[d_year#21, p_brand#38, sum(lo_revenue#12) AS `sum(lo_revenue)`#51], groupByExpr=[d_year#21, p_brand#38] )
      +--LogicalProject ( projects=[lo_revenue#12, d_year#21, p_brand#38] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#4 = s_suppkey#43)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_suppkey#4, lo_revenue#12, d_year#21, p_brand#38] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_partkey#3 = p_partkey#34)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_partkey#3, lo_suppkey#4, lo_revenue#12, d_year#21] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#5 = d_datekey#17)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_partkey#3, lo_suppkey#4, lo_orderdate#5, lo_revenue#12] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#0, lo_linenumber#1, lo_custkey#2, lo_partkey#3, lo_suppkey#4, lo_orderdate#5, lo_orderpriority#6, lo_shippriority#7, lo_quantity#8, lo_extendedprice#9, lo_ordtotalprice#10, lo_discount#11, lo_revenue#12, lo_supplycost#13, lo_tax#14, lo_commitdate#15, lo_shipmode#16], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[d_datekey#17, d_year#21] )
            |     |        +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#17, d_date#18, d_dayofweek#19, d_month#20, d_year#21, d_yearmonthnum#22, d_yearmonth#23, d_daynuminweek#24, d_daynuminmonth#25, d_daynuminyear#26, d_monthnuminyear#27, d_weeknuminyear#28, d_sellingseason#29, d_lastdayinweekfl#30, d_lastdayinmonthfl#31, d_holidayfl#32, d_weekdayfl#33], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
            |     +--LogicalProject ( projects=[p_partkey#34, p_brand#38] )
            |        +--LogicalFilter ( predicates=((CAST(p_brand AS STRING) >= 'MFGR#2221') AND (CAST(p_brand AS STRING) <= 'MFGR#2228')) )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.part, output=[p_partkey#34, p_name#35, p_mfgr#36, p_category#37, p_brand#38, p_color#39, p_type#40, p_size#41, p_container#42], candidateIndexIds=[10751], selectedIndexId=10751, preAgg=ON )
            +--LogicalProject ( projects=[s_suppkey#43] )
               +--LogicalFilter ( predicates=(CAST(s_region AS STRING) = 'ASIA') )
                  +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#43, s_name#44, s_address#45, s_city#46, s_nation#47, s_region#48, s_phone#49], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
---------------------
SELECT SUM(lo_revenue), d_year, p_brand
FROM lineorder, dates, part, supplier
WHERE
    lo_orderdate = d_datekey
    AND lo_partkey = p_partkey
    AND lo_suppkey = s_suppkey
    AND p_brand = 'MFGR#2239'
    AND s_region = 'EUROPE'
GROUP BY d_year, p_brand
ORDER BY d_year, p_brand

LogicalSort ( orderKeys=[d_year#21, p_brand#38] )
+--LogicalProject ( projects=[sum(lo_revenue)#51 AS `SUM(lo_revenue)`#50, d_year#21, p_brand#38] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[d_year#21, p_brand#38, sum(lo_revenue#12) AS `sum(lo_revenue)`#51], groupByExpr=[d_year#21, p_brand#38] )
      +--LogicalProject ( projects=[lo_revenue#12, d_year#21, p_brand#38] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#4 = s_suppkey#43)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_suppkey#4, lo_revenue#12, d_year#21, p_brand#38] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_partkey#3 = p_partkey#34)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_partkey#3, lo_suppkey#4, lo_revenue#12, d_year#21] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#5 = d_datekey#17)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_partkey#3, lo_suppkey#4, lo_orderdate#5, lo_revenue#12] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#0, lo_linenumber#1, lo_custkey#2, lo_partkey#3, lo_suppkey#4, lo_orderdate#5, lo_orderpriority#6, lo_shippriority#7, lo_quantity#8, lo_extendedprice#9, lo_ordtotalprice#10, lo_discount#11, lo_revenue#12, lo_supplycost#13, lo_tax#14, lo_commitdate#15, lo_shipmode#16], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[d_datekey#17, d_year#21] )
            |     |        +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#17, d_date#18, d_dayofweek#19, d_month#20, d_year#21, d_yearmonthnum#22, d_yearmonth#23, d_daynuminweek#24, d_daynuminmonth#25, d_daynuminyear#26, d_monthnuminyear#27, d_weeknuminyear#28, d_sellingseason#29, d_lastdayinweekfl#30, d_lastdayinmonthfl#31, d_holidayfl#32, d_weekdayfl#33], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
            |     +--LogicalProject ( projects=[p_partkey#34, p_brand#38] )
            |        +--LogicalFilter ( predicates=(CAST(p_brand AS STRING) = 'MFGR#2239') )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.part, output=[p_partkey#34, p_name#35, p_mfgr#36, p_category#37, p_brand#38, p_color#39, p_type#40, p_size#41, p_container#42], candidateIndexIds=[10751], selectedIndexId=10751, preAgg=ON )
            +--LogicalProject ( projects=[s_suppkey#43] )
               +--LogicalFilter ( predicates=(CAST(s_region AS STRING) = 'EUROPE') )
                  +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#43, s_name#44, s_address#45, s_city#46, s_nation#47, s_region#48, s_phone#49], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
---------------------
SELECT
    c_nation,
    s_nation,
    d_year,
    SUM(lo_revenue) AS REVENUE
FROM lineorder, customer, supplier, dates
WHERE
    lo_custkey = c_custkey
    AND lo_suppkey = s_suppkey
    AND lo_orderdate = d_datekey
    AND c_region = 'ASIA'
    AND s_region = 'ASIA'
    AND d_year >= 1992
    AND d_year <= 1997
GROUP BY c_nation, s_nation, d_year
ORDER BY d_year ASC, REVENUE DESC

LogicalSort ( orderKeys=[d_year#37, REVENUE#0] )
+--LogicalProject ( projects=[c_nation#22, s_nation#30, d_year#37, sum(lo_revenue)#50 AS `REVENUE`#0] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[d_year#37, c_nation#22, s_nation#30, sum(lo_revenue#13) AS `sum(lo_revenue)`#50], groupByExpr=[c_nation#22, s_nation#30, d_year#37] )
      +--LogicalProject ( projects=[lo_revenue#13, c_nation#22, s_nation#30, d_year#37] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#33)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_orderdate#6, lo_revenue#13, c_nation#22, s_nation#30] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#5 = s_suppkey#26)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_suppkey#5, lo_orderdate#6, lo_revenue#13, c_nation#22] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_custkey#3 = c_custkey#18)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_custkey#3, lo_suppkey#5, lo_orderdate#6, lo_revenue#13] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[c_custkey#18, c_nation#22] )
            |     |        +--LogicalFilter ( predicates=(CAST(c_region AS STRING) = 'ASIA') )
            |     |           +--LogicalOlapScan ( qualified=default_cluster:test.customer, output=[c_custkey#18, c_name#19, c_address#20, c_city#21, c_nation#22, c_region#23, c_phone#24, c_mktsegment#25], candidateIndexIds=[10689], selectedIndexId=10689, preAgg=ON )
            |     +--LogicalProject ( projects=[s_suppkey#26, s_nation#30] )
            |        +--LogicalFilter ( predicates=(CAST(s_region AS STRING) = 'ASIA') )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#26, s_name#27, s_address#28, s_city#29, s_nation#30, s_region#31, s_phone#32], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
            +--LogicalProject ( projects=[d_datekey#33, d_year#37] )
               +--LogicalFilter ( predicates=((d_year#37 >= 1992) AND (d_year#37 <= 1997)) )
                  +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#33, d_date#34, d_dayofweek#35, d_month#36, d_year#37, d_yearmonthnum#38, d_yearmonth#39, d_daynuminweek#40, d_daynuminmonth#41, d_daynuminyear#42, d_monthnuminyear#43, d_weeknuminyear#44, d_sellingseason#45, d_lastdayinweekfl#46, d_lastdayinmonthfl#47, d_holidayfl#48, d_weekdayfl#49], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
SELECT
    c_city,
    s_city,
    d_year,
    SUM(lo_revenue) AS REVENUE
FROM lineorder, customer , supplier, dates
WHERE
    lo_custkey = c_custkey
    AND lo_suppkey = s_suppkey
    AND lo_orderdate = d_datekey
    AND c_nation = 'UNITED STATES'
    AND s_nation = 'UNITED STATES'
    AND d_year >= 1992
    AND d_year <= 1997
GROUP BY c_city, s_city, d_year
ORDER BY d_year ASC, REVENUE DESC

LogicalSort ( orderKeys=[d_year#37, REVENUE#0] )
+--LogicalProject ( projects=[c_city#21, s_city#29, d_year#37, sum(lo_revenue)#50 AS `REVENUE`#0] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[c_city#21, d_year#37, s_city#29, sum(lo_revenue#13) AS `sum(lo_revenue)`#50], groupByExpr=[c_city#21, s_city#29, d_year#37] )
      +--LogicalProject ( projects=[lo_revenue#13, c_city#21, s_city#29, d_year#37] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#33)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_orderdate#6, lo_revenue#13, c_city#21, s_city#29] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#5 = s_suppkey#26)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_suppkey#5, lo_orderdate#6, lo_revenue#13, c_city#21] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_custkey#3 = c_custkey#18)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_custkey#3, lo_suppkey#5, lo_orderdate#6, lo_revenue#13] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[c_custkey#18, c_city#21] )
            |     |        +--LogicalFilter ( predicates=(CAST(c_nation AS STRING) = 'UNITED STATES') )
            |     |           +--LogicalOlapScan ( qualified=default_cluster:test.customer, output=[c_custkey#18, c_name#19, c_address#20, c_city#21, c_nation#22, c_region#23, c_phone#24, c_mktsegment#25], candidateIndexIds=[10689], selectedIndexId=10689, preAgg=ON )
            |     +--LogicalProject ( projects=[s_suppkey#26, s_city#29] )
            |        +--LogicalFilter ( predicates=(CAST(s_nation AS STRING) = 'UNITED STATES') )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#26, s_name#27, s_address#28, s_city#29, s_nation#30, s_region#31, s_phone#32], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
            +--LogicalProject ( projects=[d_datekey#33, d_year#37] )
               +--LogicalFilter ( predicates=((d_year#37 >= 1992) AND (d_year#37 <= 1997)) )
                  +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#33, d_date#34, d_dayofweek#35, d_month#36, d_year#37, d_yearmonthnum#38, d_yearmonth#39, d_daynuminweek#40, d_daynuminmonth#41, d_daynuminyear#42, d_monthnuminyear#43, d_weeknuminyear#44, d_sellingseason#45, d_lastdayinweekfl#46, d_lastdayinmonthfl#47, d_holidayfl#48, d_weekdayfl#49], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
SELECT
    c_city,
    s_city,
    d_year,
    SUM(lo_revenue) AS REVENUE
FROM lineorder, customer, supplier, dates
WHERE
    lo_custkey = c_custkey
    AND lo_suppkey = s_suppkey
    AND lo_orderdate = d_datekey
    AND (
        c_city = 'UNITED KI1'
        OR c_city = 'UNITED KI5'
    )
    AND (
        s_city = 'UNITED KI1'
        OR s_city = 'UNITED KI5'
    )
    AND d_year >= 1992
    AND d_year <= 1997
GROUP BY c_city, s_city, d_year
ORDER BY d_year ASC, REVENUE DESC

LogicalSort ( orderKeys=[d_year#37, REVENUE#0] )
+--LogicalProject ( projects=[c_city#21, s_city#29, d_year#37, sum(lo_revenue)#50 AS `REVENUE`#0] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[c_city#21, d_year#37, s_city#29, sum(lo_revenue#13) AS `sum(lo_revenue)`#50], groupByExpr=[c_city#21, s_city#29, d_year#37] )
      +--LogicalProject ( projects=[lo_revenue#13, c_city#21, s_city#29, d_year#37] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#33)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_orderdate#6, lo_revenue#13, c_city#21, s_city#29] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#5 = s_suppkey#26)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_suppkey#5, lo_orderdate#6, lo_revenue#13, c_city#21] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_custkey#3 = c_custkey#18)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_custkey#3, lo_suppkey#5, lo_orderdate#6, lo_revenue#13] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[c_custkey#18, c_city#21] )
            |     |        +--LogicalFilter ( predicates=((CAST(c_city AS STRING) = 'UNITED KI1') OR (CAST(c_city AS STRING) = 'UNITED KI5')) )
            |     |           +--LogicalOlapScan ( qualified=default_cluster:test.customer, output=[c_custkey#18, c_name#19, c_address#20, c_city#21, c_nation#22, c_region#23, c_phone#24, c_mktsegment#25], candidateIndexIds=[10689], selectedIndexId=10689, preAgg=ON )
            |     +--LogicalProject ( projects=[s_suppkey#26, s_city#29] )
            |        +--LogicalFilter ( predicates=((CAST(s_city AS STRING) = 'UNITED KI1') OR (CAST(s_city AS STRING) = 'UNITED KI5')) )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#26, s_name#27, s_address#28, s_city#29, s_nation#30, s_region#31, s_phone#32], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
            +--LogicalProject ( projects=[d_datekey#33, d_year#37] )
               +--LogicalFilter ( predicates=((d_year#37 >= 1992) AND (d_year#37 <= 1997)) )
                  +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#33, d_date#34, d_dayofweek#35, d_month#36, d_year#37, d_yearmonthnum#38, d_yearmonth#39, d_daynuminweek#40, d_daynuminmonth#41, d_daynuminyear#42, d_monthnuminyear#43, d_weeknuminyear#44, d_sellingseason#45, d_lastdayinweekfl#46, d_lastdayinmonthfl#47, d_holidayfl#48, d_weekdayfl#49], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
SELECT
    c_city,
    s_city,
    d_year,
    SUM(lo_revenue) AS REVENUE
FROM lineorder, customer, supplier, dates
WHERE
    lo_custkey = c_custkey
    AND lo_suppkey = s_suppkey
    AND lo_orderdate = d_datekey
    AND (
        c_city = 'UNITED KI1'
        OR c_city = 'UNITED KI5'
    )
    AND (
        s_city = 'UNITED KI1'
        OR s_city = 'UNITED KI5'
    )
    AND d_yearmonth = 'Dec1997'
GROUP BY c_city, s_city, d_year
ORDER BY d_year ASC, REVENUE DESC

LogicalSort ( orderKeys=[d_year#37, REVENUE#0] )
+--LogicalProject ( projects=[c_city#21, s_city#29, d_year#37, sum(lo_revenue)#50 AS `REVENUE`#0] )
   +--LogicalAggregate ( phase=LOCAL, outputExpr=[c_city#21, d_year#37, s_city#29, sum(lo_revenue#13) AS `sum(lo_revenue)`#50], groupByExpr=[c_city#21, s_city#29, d_year#37] )
      +--LogicalProject ( projects=[lo_revenue#13, c_city#21, s_city#29, d_year#37] )
         +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_orderdate#6 = d_datekey#33)], otherJoinCondition=[] )
            |--LogicalProject ( projects=[lo_orderdate#6, lo_revenue#13, c_city#21, s_city#29] )
            |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_suppkey#5 = s_suppkey#26)], otherJoinCondition=[] )
            |     |--LogicalProject ( projects=[lo_suppkey#5, lo_orderdate#6, lo_revenue#13, c_city#21] )
            |     |  +--LogicalJoin ( type=INNER_JOIN, hashJoinCondition=[(lo_custkey#3 = c_custkey#18)], otherJoinCondition=[] )
            |     |     |--LogicalProject ( projects=[lo_custkey#3, lo_suppkey#5, lo_orderdate#6, lo_revenue#13] )
            |     |     |  +--LogicalOlapScan ( qualified=default_cluster:test.lineorder, output=[lo_orderkey#1, lo_linenumber#2, lo_custkey#3, lo_partkey#4, lo_suppkey#5, lo_orderdate#6, lo_orderpriority#7, lo_shippriority#8, lo_quantity#9, lo_extendedprice#10, lo_ordtotalprice#11, lo_discount#12, lo_revenue#13, lo_supplycost#14, lo_tax#15, lo_commitdate#16, lo_shipmode#17], candidateIndexIds=[10013], selectedIndexId=10013, preAgg=ON )
            |     |     +--LogicalProject ( projects=[c_custkey#18, c_city#21] )
            |     |        +--LogicalFilter ( predicates=((CAST(c_city AS STRING) = 'UNITED KI1') OR (CAST(c_city AS STRING) = 'UNITED KI5')) )
            |     |           +--LogicalOlapScan ( qualified=default_cluster:test.customer, output=[c_custkey#18, c_name#19, c_address#20, c_city#21, c_nation#22, c_region#23, c_phone#24, c_mktsegment#25], candidateIndexIds=[10689], selectedIndexId=10689, preAgg=ON )
            |     +--LogicalProject ( projects=[s_suppkey#26, s_city#29] )
            |        +--LogicalFilter ( predicates=((CAST(s_city AS STRING) = 'UNITED KI1') OR (CAST(s_city AS STRING) = 'UNITED KI5')) )
            |           +--LogicalOlapScan ( qualified=default_cluster:test.supplier, output=[s_suppkey#26, s_name#27, s_address#28, s_city#29, s_nation#30, s_region#31, s_phone#32], candidateIndexIds=[10723], selectedIndexId=10723, preAgg=ON )
            +--LogicalProject ( projects=[d_datekey#33, d_year#37] )
               +--LogicalFilter ( predicates=(CAST(d_yearmonth AS STRING) = 'Dec1997') )
                  +--LogicalOlapScan ( qualified=default_cluster:test.dates, output=[d_datekey#33, d_date#34, d_dayofweek#35, d_month#36, d_year#37, d_yearmonthnum#38, d_yearmonth#39, d_daynuminweek#40, d_daynuminmonth#41, d_daynuminyear#42, d_monthnuminyear#43, d_weeknuminyear#44, d_sellingseason#45, d_lastdayinweekfl#46, d_lastdayinmonthfl#47, d_holidayfl#48, d_weekdayfl#49], candidateIndexIds=[10717], selectedIndexId=10717, preAgg=ON )
---------------------
