-- This file is automatically generated. You should know what you did if you want to edit this
-- !shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN broadcast] hashCondition=((t1.v <=> t2.v)) otherCondition=()
------filter((t1.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t1]
------filter((t2.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t2]

-- !null_safe_equal --
1	\N	1	\N

-- !equal --

-- !shape_left_join --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_OUTER_JOIN broadcast] hashCondition=((t1.k = t2.k) and (t1.v <=> t2.v)) otherCondition=()
------filter((t1.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t1]
------filter((t2.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t2]

-- !shape_right_join --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_OUTER_JOIN broadcast] hashCondition=((t1.k = t2.k) and (t1.v <=> t2.v)) otherCondition=()
------filter((t2.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t2]
------filter((t1.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t1]

-- !shape_anti_join --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_ANTI_JOIN broadcast] hashCondition=((t1.k = t2.k) and (t1.v <=> t2.v)) otherCondition=()
------filter((t1.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t1]
------filter((t2.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t2]

-- !shape_semi_join --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((t1.v <=> t2.v)) otherCondition=()
------filter((t1.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t1]
------filter((t2.k = 1))
--------PhysicalOlapScan[eliminate_cost_join_condition_t2]

-- !shape_mark_join --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject
------filter(OR[ifnull($c$1, FALSE),(t1.k > 10)])
--------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((t1.k = t2.k)) otherCondition=()
----------filter((t1.k = 1))
------------PhysicalOlapScan[eliminate_cost_join_condition_t1]
----------PhysicalProject
------------filter((t2.k = 1))
--------------PhysicalOlapScan[eliminate_cost_join_condition_t2]

