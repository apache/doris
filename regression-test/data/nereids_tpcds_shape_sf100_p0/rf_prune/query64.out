-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_64 --
PhysicalCteAnchor ( cteId=CTEId#1 )
--PhysicalCteProducer ( cteId=CTEId#1 )
----PhysicalProject
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_first_shipto_date_sk = d3.d_date_sk)) otherCondition=()
----------------PhysicalProject
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_first_sales_date_sk = d2.d_date_sk)) otherCondition=()
--------------------PhysicalProject
----------------------hashJoin[INNER_JOIN shuffle] hashCondition=((store_sales.ss_customer_sk = customer.c_customer_sk)) otherCondition=(( not (cd_marital_status = cd_marital_status))) build RFs:RF17 ss_customer_sk->[c_customer_sk]
------------------------PhysicalProject
--------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((customer.c_current_addr_sk = ad2.ca_address_sk)) otherCondition=()
----------------------------PhysicalProject
------------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((customer.c_current_cdemo_sk = cd2.cd_demo_sk)) otherCondition=()
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_current_hdemo_sk = hd2.hd_demo_sk)) otherCondition=()
------------------------------------PhysicalProject
--------------------------------------PhysicalOlapScan[customer] apply RFs: RF17
------------------------------------PhysicalProject
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((hd2.hd_income_band_sk = ib2.ib_income_band_sk)) otherCondition=()
----------------------------------------PhysicalProject
------------------------------------------PhysicalOlapScan[household_demographics]
----------------------------------------PhysicalProject
------------------------------------------PhysicalOlapScan[income_band]
--------------------------------PhysicalProject
----------------------------------PhysicalOlapScan[customer_demographics]
----------------------------PhysicalProject
------------------------------PhysicalOlapScan[customer_address]
------------------------PhysicalProject
--------------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((store_sales.ss_item_sk = store_returns.sr_item_sk) and (store_sales.ss_ticket_number = store_returns.sr_ticket_number)) otherCondition=() build RFs:RF11 ss_item_sk->[sr_item_sk];RF12 ss_ticket_number->[sr_ticket_number]
----------------------------PhysicalProject
------------------------------PhysicalOlapScan[store_returns] apply RFs: RF11 RF12
----------------------------PhysicalProject
------------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((store_sales.ss_cdemo_sk = cd1.cd_demo_sk)) otherCondition=() build RFs:RF10 ss_cdemo_sk->[cd_demo_sk]
--------------------------------PhysicalProject
----------------------------------PhysicalOlapScan[customer_demographics] apply RFs: RF10
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((store_sales.ss_addr_sk = ad1.ca_address_sk)) otherCondition=() build RFs:RF9 ss_addr_sk->[ca_address_sk]
------------------------------------PhysicalProject
--------------------------------------PhysicalOlapScan[customer_address] apply RFs: RF9
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF8 i_item_sk->[cr_item_sk,cs_item_sk,ss_item_sk]
--------------------------------------PhysicalProject
----------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_promo_sk = promotion.p_promo_sk)) otherCondition=()
------------------------------------------PhysicalProject
--------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=()
----------------------------------------------PhysicalProject
------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((hd1.hd_income_band_sk = ib1.ib_income_band_sk)) otherCondition=()
--------------------------------------------------PhysicalProject
----------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = hd1.hd_demo_sk)) otherCondition=()
------------------------------------------------------PhysicalProject
--------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = d1.d_date_sk)) otherCondition=() build RFs:RF3 d_date_sk->[ss_sold_date_sk]
----------------------------------------------------------PhysicalProject
------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = cs_ui.cs_item_sk)) otherCondition=() build RFs:RF2 cs_item_sk->[ss_item_sk]
--------------------------------------------------------------PhysicalProject
----------------------------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2 RF3 RF8
--------------------------------------------------------------PhysicalProject
----------------------------------------------------------------filter((sale > (2 * refund)))
------------------------------------------------------------------hashAgg[GLOBAL]
--------------------------------------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------------------------------------hashAgg[LOCAL]
------------------------------------------------------------------------PhysicalProject
--------------------------------------------------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((catalog_sales.cs_item_sk = catalog_returns.cr_item_sk) and (catalog_sales.cs_order_number = catalog_returns.cr_order_number)) otherCondition=()
----------------------------------------------------------------------------PhysicalProject
------------------------------------------------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF8
----------------------------------------------------------------------------PhysicalProject
------------------------------------------------------------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF8
----------------------------------------------------------PhysicalProject
------------------------------------------------------------filter(d_year IN (2001, 2002))
--------------------------------------------------------------PhysicalOlapScan[date_dim]
------------------------------------------------------PhysicalProject
--------------------------------------------------------PhysicalOlapScan[household_demographics]
--------------------------------------------------PhysicalProject
----------------------------------------------------PhysicalOlapScan[income_band]
----------------------------------------------PhysicalProject
------------------------------------------------PhysicalOlapScan[store]
------------------------------------------PhysicalProject
--------------------------------------------PhysicalOlapScan[promotion]
--------------------------------------PhysicalProject
----------------------------------------filter((item.i_current_price <= 33.00) and (item.i_current_price >= 24.00) and i_color IN ('blanched', 'brown', 'burlywood', 'chocolate', 'drab', 'medium'))
------------------------------------------PhysicalOlapScan[item]
--------------------PhysicalProject
----------------------PhysicalOlapScan[date_dim]
----------------PhysicalProject
------------------PhysicalOlapScan[date_dim]
--PhysicalResultSink
----PhysicalQuickSort[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalQuickSort[LOCAL_SORT]
----------PhysicalProject
------------hashJoin[INNER_JOIN shuffle] hashCondition=((cs1.item_sk = cs2.item_sk) and (cs1.store_name = cs2.store_name) and (cs1.store_zip = cs2.store_zip)) otherCondition=((cs2.cnt <= cs1.cnt))
--------------PhysicalProject
----------------filter((cs1.syear = 2001))
------------------PhysicalCteConsumer ( cteId=CTEId#1 )
--------------PhysicalProject
----------------filter((cs2.syear = 2002))
------------------PhysicalCteConsumer ( cteId=CTEId#1 )

