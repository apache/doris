-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_75 --
CteAnchor[cteId= ( CTEId#3=] )
--CteProducer[cteId= ( CTEId#3=] )
----hashAgg[LOCAL]
------hashAgg[GLOBAL]
--------PhysicalDistribute
----------hashAgg[LOCAL]
------------PhysicalUnion
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute
------------------hashAgg[LOCAL]
--------------------PhysicalUnion
----------------------PhysicalProject
------------------------hashJoin[RIGHT_OUTER_JOIN](catalog_sales.cs_item_sk = catalog_returns.cr_item_sk)(catalog_sales.cs_order_number = catalog_returns.cr_order_number)
--------------------------PhysicalProject
----------------------------PhysicalOlapScan[catalog_returns]
--------------------------PhysicalProject
----------------------------hashJoin[INNER_JOIN](date_dim.d_date_sk = catalog_sales.cs_sold_date_sk)
------------------------------hashJoin[INNER_JOIN](item.i_item_sk = catalog_sales.cs_item_sk)
--------------------------------PhysicalProject
----------------------------------PhysicalOlapScan[catalog_sales]
--------------------------------PhysicalDistribute
----------------------------------PhysicalProject
------------------------------------filter((cast(i_category as VARCHAR(*)) = 'Home'))
--------------------------------------PhysicalOlapScan[item]
------------------------------PhysicalDistribute
--------------------------------PhysicalProject
----------------------------------filter(((date_dim.d_year = 1998) OR (date_dim.d_year = 1999)))
------------------------------------PhysicalOlapScan[date_dim]
----------------------PhysicalProject
------------------------hashJoin[RIGHT_OUTER_JOIN](store_sales.ss_item_sk = store_returns.sr_item_sk)(store_sales.ss_ticket_number = store_returns.sr_ticket_number)
--------------------------PhysicalProject
----------------------------PhysicalOlapScan[store_returns]
--------------------------PhysicalProject
----------------------------hashJoin[INNER_JOIN](date_dim.d_date_sk = store_sales.ss_sold_date_sk)
------------------------------hashJoin[INNER_JOIN](item.i_item_sk = store_sales.ss_item_sk)
--------------------------------PhysicalProject
----------------------------------PhysicalOlapScan[store_sales]
--------------------------------PhysicalDistribute
----------------------------------PhysicalProject
------------------------------------filter((cast(i_category as VARCHAR(*)) = 'Home'))
--------------------------------------PhysicalOlapScan[item]
------------------------------PhysicalDistribute
--------------------------------PhysicalProject
----------------------------------filter(((date_dim.d_year = 1998) OR (date_dim.d_year = 1999)))
------------------------------------PhysicalOlapScan[date_dim]
--------------PhysicalProject
----------------hashJoin[RIGHT_OUTER_JOIN](web_sales.ws_item_sk = web_returns.wr_item_sk)(web_sales.ws_order_number = web_returns.wr_order_number)
------------------PhysicalProject
--------------------PhysicalOlapScan[web_returns]
------------------PhysicalProject
--------------------hashJoin[INNER_JOIN](date_dim.d_date_sk = web_sales.ws_sold_date_sk)
----------------------hashJoin[INNER_JOIN](item.i_item_sk = web_sales.ws_item_sk)
------------------------PhysicalProject
--------------------------PhysicalOlapScan[web_sales]
------------------------PhysicalDistribute
--------------------------PhysicalProject
----------------------------filter((cast(i_category as VARCHAR(*)) = 'Home'))
------------------------------PhysicalOlapScan[item]
----------------------PhysicalDistribute
------------------------PhysicalProject
--------------------------filter(((date_dim.d_year = 1998) OR (date_dim.d_year = 1999)))
----------------------------PhysicalOlapScan[date_dim]
--PhysicalTopN
----PhysicalDistribute
------PhysicalTopN
--------PhysicalProject
----------hashJoin[INNER_JOIN](curr_yr.i_brand_id = prev_yr.i_brand_id)(curr_yr.i_class_id = prev_yr.i_class_id)(curr_yr.i_category_id = prev_yr.i_category_id)(curr_yr.i_manufact_id = prev_yr.i_manufact_id)((cast(cast(sales_cnt as DECIMALV3(17, 2)) as DECIMALV3(23, 8)) / cast(sales_cnt as DECIMALV3(17, 2))) < 0.900000)
------------filter((curr_yr.d_year = 1999))
--------------CteConsumer[cteId= ( CTEId#3=] )
------------PhysicalDistribute
--------------filter((prev_yr.d_year = 1998))
----------------CteConsumer[cteId= ( CTEId#3=] )

