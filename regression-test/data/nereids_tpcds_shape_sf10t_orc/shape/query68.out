-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_68 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject
----------hashJoin[INNER_JOIN shuffle] hashCondition=((customer.c_current_addr_sk = current_addr.ca_address_sk)) otherCondition=(( not (ca_city = bought_city))) build RFs:RF5 ca_address_sk->[c_current_addr_sk]
------------PhysicalProject
--------------hashJoin[INNER_JOIN shuffle] hashCondition=((dn.ss_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF4 c_customer_sk->[ss_customer_sk]
----------------PhysicalProject
------------------hashAgg[LOCAL]
--------------------PhysicalProject
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF3 hd_demo_sk->[ss_hdemo_sk]
------------------------PhysicalProject
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ss_store_sk]
----------------------------PhysicalProject
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ss_sold_date_sk]
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((store_sales.ss_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF0 ca_address_sk->[ss_addr_sk]
------------------------------------PhysicalProject
--------------------------------------PhysicalFileScan[store_sales] apply RFs: RF0 RF1 RF2 RF3 RF4
------------------------------------PhysicalProject
--------------------------------------PhysicalFileScan[customer_address]
--------------------------------PhysicalProject
----------------------------------filter((date_dim.d_dom <= 2) and (date_dim.d_dom >= 1) and d_year IN (1999, 2000, 2001))
------------------------------------PhysicalFileScan[date_dim]
----------------------------PhysicalProject
------------------------------filter(s_city IN ('Bethel', 'Pleasant Hill'))
--------------------------------PhysicalFileScan[store]
------------------------PhysicalProject
--------------------------filter(((household_demographics.hd_dep_count = 4) OR (household_demographics.hd_vehicle_count = 0)))
----------------------------PhysicalFileScan[household_demographics]
----------------PhysicalProject
------------------PhysicalFileScan[customer] apply RFs: RF5
------------PhysicalProject
--------------PhysicalFileScan[customer_address]

