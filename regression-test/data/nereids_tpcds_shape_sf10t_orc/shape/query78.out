-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_78 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject
----------filter(((coalesce(ws_qty, 0) > 0) OR (coalesce(cs_qty, 0) > 0)))
------------hashJoin[LEFT_OUTER_JOIN colocated] hashCondition=((cs.cs_customer_sk = ss.ss_customer_sk) and (cs.cs_item_sk = ss.ss_item_sk) and (cs.cs_sold_year = ss.ss_sold_year)) otherCondition=()
--------------PhysicalProject
----------------hashJoin[LEFT_OUTER_JOIN colocated] hashCondition=((ws.ws_customer_sk = ss.ss_customer_sk) and (ws.ws_item_sk = ss.ss_item_sk) and (ws.ws_sold_year = ss.ss_sold_year)) otherCondition=()
------------------PhysicalProject
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalProject
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
------------------------------PhysicalProject
--------------------------------filter(sr_ticket_number IS NULL)
----------------------------------hashJoin[LEFT_OUTER_JOIN shuffle] hashCondition=((store_returns.sr_ticket_number = store_sales.ss_ticket_number) and (store_sales.ss_item_sk = store_returns.sr_item_sk)) otherCondition=()
------------------------------------PhysicalProject
--------------------------------------PhysicalFileScan[store_sales] apply RFs: RF2
------------------------------------PhysicalProject
--------------------------------------PhysicalFileScan[store_returns]
------------------------------PhysicalProject
--------------------------------filter((date_dim.d_year = 2001))
----------------------------------PhysicalFileScan[date_dim]
------------------PhysicalProject
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalProject
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ws_sold_date_sk]
------------------------------PhysicalProject
--------------------------------filter(wr_order_number IS NULL)
----------------------------------hashJoin[LEFT_OUTER_JOIN shuffle] hashCondition=((web_returns.wr_order_number = web_sales.ws_order_number) and (web_sales.ws_item_sk = web_returns.wr_item_sk)) otherCondition=()
------------------------------------PhysicalProject
--------------------------------------PhysicalFileScan[web_sales] apply RFs: RF1
------------------------------------PhysicalProject
--------------------------------------PhysicalFileScan[web_returns]
------------------------------PhysicalProject
--------------------------------filter((date_dim.d_year = 2001))
----------------------------------PhysicalFileScan[date_dim]
--------------PhysicalProject
----------------hashAgg[GLOBAL]
------------------PhysicalDistribute[DistributionSpecHash]
--------------------hashAgg[LOCAL]
----------------------PhysicalProject
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject
----------------------------filter(cr_order_number IS NULL)
------------------------------hashJoin[LEFT_OUTER_JOIN shuffle] hashCondition=((catalog_returns.cr_order_number = catalog_sales.cs_order_number) and (catalog_sales.cs_item_sk = catalog_returns.cr_item_sk)) otherCondition=()
--------------------------------PhysicalProject
----------------------------------PhysicalFileScan[catalog_sales] apply RFs: RF0
--------------------------------PhysicalProject
----------------------------------PhysicalFileScan[catalog_returns]
--------------------------PhysicalProject
----------------------------filter((date_dim.d_year = 2001))
------------------------------PhysicalFileScan[date_dim]

