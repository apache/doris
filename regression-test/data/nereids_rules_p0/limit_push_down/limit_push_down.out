-- This file is automatically generated. You should know what you did if you want to edit this
-- !limit_project --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_offset_project --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_semi_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !right_semi_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[RIGHT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !left_anti_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !right_anti_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[RIGHT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !full_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !left_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !right_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t2]

-- !cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t2]

-- !limit_offset_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_offset_agg --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_distinct --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[LOCAL]
--------NestedLoopJoin[CROSS_JOIN]
----------PhysicalLimit[LOCAL]
------------hashAgg[LOCAL]
--------------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[LOCAL]
--------NestedLoopJoin[CROSS_JOIN]
----------PhysicalLimit[LOCAL]
------------hashAgg[LOCAL]
--------------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[LOCAL]
--------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalLimit[LOCAL]
------------hashAgg[LOCAL]
--------------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[LOCAL]
--------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalLimit[LOCAL]
------------hashAgg[LOCAL]
--------------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]

-- !limit_offset_agg --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_set_operation --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------PhysicalUnion
------------PhysicalLimit[LOCAL]
--------------hashAgg[LOCAL]
----------------PhysicalOlapScan[t1]
------------PhysicalLimit[LOCAL]
--------------hashAgg[LOCAL]
----------------PhysicalOlapScan[t2]

-- !limit_offset_set_operation --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalIntersect
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalPartitionTopN
--------------PhysicalOlapScan[t1]

-- !limit_offset_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalPartitionTopN
--------------PhysicalOlapScan[t1]

-- !limit_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !limit_offset_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !limit_project_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_join_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id > 100))
----------PhysicalOlapScan[t1]
--------filter((t2.id > 100))
----------PhysicalOlapScan[t2]

-- !limit_subquery --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_subquery_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_subquery_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalPartitionTopN
--------------PhysicalOlapScan[t1]

-- !limit_nested_subquery --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_union_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalUnion
--------PhysicalLimit[LOCAL]
----------filter((cast(msg as DOUBLE) > 100.0))
------------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------filter((t2.id > 100))
------------PhysicalOlapScan[t2]

-- !limit_union_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalUnion
--------PhysicalLimit[LOCAL]
----------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t3.id = t4.id)) otherCondition=()
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t3]
------------PhysicalOlapScan[t4]

-- !limit_union_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalUnion
--------PhysicalLimit[LOCAL]
----------PhysicalWindow
------------PhysicalQuickSort[MERGE_SORT]
--------------PhysicalQuickSort[LOCAL_SORT]
----------------PhysicalPartitionTopN
------------------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------PhysicalWindow
------------PhysicalQuickSort[MERGE_SORT]
--------------PhysicalQuickSort[LOCAL_SORT]
----------------PhysicalPartitionTopN
------------------PhysicalOlapScan[t2]

-- !limit_subquery_join_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id > 100))
----------PhysicalOlapScan[t1]
--------filter((t2.id > 100))
----------PhysicalOlapScan[t2]

-- !limit_subquery_join_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[LOCAL_SORT]
----------PhysicalPartitionTopN
------------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]

-- !limit_subquery_union_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalUnion
--------PhysicalLimit[LOCAL]
----------filter((t1.id > 100))
------------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------filter((t2.id > 100))
------------PhysicalOlapScan[t2]

-- !limit_subquery_union_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------PhysicalUnion
------------PhysicalLimit[LOCAL]
--------------hashAgg[LOCAL]
----------------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------------PhysicalOlapScan[t1]
------------------PhysicalOlapScan[t2]
------------PhysicalLimit[LOCAL]
--------------hashAgg[LOCAL]
----------------hashJoin[INNER_JOIN] hashCondition=((t3.id = t4.id)) otherCondition=()
------------------PhysicalOlapScan[t3]
------------------PhysicalOlapScan[t4]

-- !limit_subquery_union_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[LOCAL_SORT]
----------PhysicalPartitionTopN
------------hashAgg[GLOBAL]
--------------hashAgg[LOCAL]
----------------PhysicalUnion
------------------PhysicalOlapScan[t1]
------------------PhysicalOlapScan[t2]

-- !limit_correlated_subquery --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t2.id = t1.id)) otherCondition=()
----PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !limit_correlated_subquery_join --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t3.id = t1.id)) otherCondition=()
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------PhysicalOlapScan[t1]
------PhysicalOlapScan[t2]
----PhysicalOlapScan[t3]

-- !limit_correlated_subquery_window --
PhysicalResultSink
--PhysicalWindow
----PhysicalQuickSort[LOCAL_SORT]
------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t2.id = t1.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_cte_query --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalResultSink
----PhysicalLimit[GLOBAL]
------PhysicalLimit[LOCAL]
--------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !limit_cte_query_join --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalCteAnchor ( cteId=CTEId#1 )
----PhysicalCteProducer ( cteId=CTEId#1 )
------filter((t2.id < 10))
--------PhysicalOlapScan[t2]
----PhysicalResultSink
------PhysicalLimit[GLOBAL]
--------PhysicalLimit[LOCAL]
----------hashJoin[FULL_OUTER_JOIN] hashCondition=((cte1.id = cte2.id)) otherCondition=()
------------PhysicalCteConsumer ( cteId=CTEId#0 )
------------PhysicalCteConsumer ( cteId=CTEId#1 )

-- !limit_cte_query_window --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalResultSink
----PhysicalLimit[GLOBAL]
------PhysicalLimit[LOCAL]
--------PhysicalWindow
----------PhysicalQuickSort[MERGE_SORT]
------------PhysicalQuickSort[LOCAL_SORT]
--------------PhysicalPartitionTopN
----------------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !limit_project_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_join_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id > 100))
----------PhysicalOlapScan[t1]
--------filter((t2.id > 100))
----------PhysicalOlapScan[t2]

-- !limit_subquery --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_filter --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_subquery_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_subquery_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalPartitionTopN
--------------PhysicalOlapScan[t1]

-- !limit_nested_subquery --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_order_by --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_order_by_offset --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_distinct --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t2]

-- !limit_multiple_left_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------PhysicalLimit[LOCAL]
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_multiple_right_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t3]

-- !limit_multiple_full_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_multiple_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------NestedLoopJoin[CROSS_JOIN]
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t1]
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t3]

-- !limit_left_outer_join_right_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t3]

-- !limit_left_outer_join_full_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_left_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t3]

-- !limit_right_outer_join_full_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_right_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t3]

-- !limit_full_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t3]

-- !limit_left_outer_join_right_outer_join_full_outer_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t4.id)) otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]
----------PhysicalOlapScan[t3]
--------PhysicalOlapScan[t4]

-- !limit_left_outer_join_right_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
------------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]
------------PhysicalLimit[LOCAL]
--------------PhysicalOlapScan[t3]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t4]

-- !limit_left_outer_join_full_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
------------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]
------------PhysicalOlapScan[t3]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t4]

-- !limit_right_outer_join_full_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
------------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]
------------PhysicalOlapScan[t3]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t4]

-- !limit_left_outer_join_right_outer_join_full_outer_join_cross_join --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalLimit[LOCAL]
----------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t4.id)) otherCondition=()
------------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------------PhysicalOlapScan[t1]
----------------PhysicalOlapScan[t2]
--------------PhysicalOlapScan[t3]
------------PhysicalOlapScan[t4]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t4]

