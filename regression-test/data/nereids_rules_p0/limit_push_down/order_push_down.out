-- This file is automatically generated. You should know what you did if you want to edit this
-- !limit_offset_sort_project --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalOlapScan[t1]

-- !limit_sort_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_sort_semi_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !right_semi_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[RIGHT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !left_anti_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !right_anti_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[RIGHT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !full_outer_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !left_outer_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !right_outer_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t2]

-- !cross_join_order --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_offset_sort_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_sort_agg_having --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_offset_agg_having --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_offset_sort_agg_having --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_distinct --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------NestedLoopJoin[CROSS_JOIN]
------------PhysicalTopN[MERGE_SORT]
--------------PhysicalTopN[LOCAL_SORT]
----------------hashAgg[GLOBAL]
------------------hashAgg[LOCAL]
--------------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------NestedLoopJoin[CROSS_JOIN]
------------PhysicalTopN[MERGE_SORT]
--------------PhysicalTopN[LOCAL_SORT]
----------------hashAgg[GLOBAL]
------------------hashAgg[LOCAL]
--------------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_distinct --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalPartitionTopN
--------------PhysicalOlapScan[t1]

-- !limit_sort_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalOlapScan[t1]

-- !limit_offset_window --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalPartitionTopN
--------------PhysicalOlapScan[t1]

-- !limit_offset_sort_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalOlapScan[t1]

-- !limit_sort_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !limit_offset_sort_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !limit_subquery_order_by_inside_limit_outside --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_all_inside --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalOlapScan[t1]

-- !limit_set_operation --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalUnion
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t1]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t2]

-- !limit_outside_order_inside_set_operation --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalUnion
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t1]
--------PhysicalLimit[LOCAL]
----------PhysicalOlapScan[t2]

-- !limit_inside_set_operation --
PhysicalResultSink
--PhysicalUnion
----PhysicalOlapScan[t1]
----PhysicalTopN[MERGE_SORT]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalOlapScan[t2]

-- !limit_offset_set_operation --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalIntersect
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalOlapScan[t1]

-- !limit_offset_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalOlapScan[t1]

-- !limit_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !limit_offset_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !limit_project_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_join_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id > 100))
----------PhysicalOlapScan[t1]
--------filter((t2.id > 100))
----------PhysicalOlapScan[t2]

-- !limit_subquery --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalOlapScan[t1]

-- !limit_subquery_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_subquery_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_subquery_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalOlapScan[t1]

-- !limit_nested_subquery --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalOlapScan[t1]

-- !limit_union_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalUnion
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------filter((t1.id > 100))
--------------PhysicalOlapScan[t1]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------filter((t2.id > 100))
--------------PhysicalOlapScan[t2]

-- !limit_union_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalUnion
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t3.id = t4.id)) otherCondition=()
--------------PhysicalTopN[MERGE_SORT]
----------------PhysicalTopN[LOCAL_SORT]
------------------PhysicalOlapScan[t3]
--------------PhysicalOlapScan[t4]

-- !limit_union_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalUnion
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalWindow
--------------PhysicalQuickSort[MERGE_SORT]
----------------PhysicalQuickSort[LOCAL_SORT]
------------------PhysicalOlapScan[t1]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalWindow
--------------PhysicalQuickSort[MERGE_SORT]
----------------PhysicalQuickSort[LOCAL_SORT]
------------------PhysicalOlapScan[t2]

-- !limit_subquery_join_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id > 100))
----------PhysicalOlapScan[t1]
--------filter((t2.id > 100))
----------PhysicalOlapScan[t2]

-- !limit_subqueryjoin_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[LOCAL_SORT]
----------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_subquery_union_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalUnion
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------filter((t1.id > 100))
--------------PhysicalOlapScan[t1]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------filter((t2.id > 100))
--------------PhysicalOlapScan[t2]

-- !limit_subquery_union_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalUnion
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------hashJoin[INNER_JOIN] hashCondition=((t3.id = t4.id)) otherCondition=()
--------------PhysicalOlapScan[t3]
--------------PhysicalOlapScan[t4]

-- !limit_subquery_union_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[LOCAL_SORT]
----------PhysicalUnion
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_correlated_subquery --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t2.id = t1.id)) otherCondition=()
----PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !limit_correlated_subquery_join --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t3.id = t1.id)) otherCondition=()
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------PhysicalOlapScan[t1]
------PhysicalOlapScan[t2]
----PhysicalOlapScan[t3]

-- !limit_correlated_subquery_window --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalQuickSort[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[LOCAL_SORT]
----------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t2.id = t1.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]

-- !limit_cte_query --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalResultSink
----PhysicalTopN[MERGE_SORT]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !limit_cte_outside_query --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalResultSink
----PhysicalLimit[GLOBAL]
------PhysicalLimit[LOCAL]
--------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !limit_cte_outside_query --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----PhysicalTopN[MERGE_SORT]
------PhysicalTopN[LOCAL_SORT]
--------filter((t1.id < 10))
----------PhysicalOlapScan[t1]
--PhysicalResultSink
----PhysicalCteConsumer ( cteId=CTEId#0 )

-- !limit_cte_query_join --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalCteAnchor ( cteId=CTEId#1 )
----PhysicalCteProducer ( cteId=CTEId#1 )
------filter((t2.id < 10))
--------PhysicalOlapScan[t2]
----PhysicalResultSink
------PhysicalTopN[MERGE_SORT]
--------PhysicalTopN[LOCAL_SORT]
----------hashJoin[FULL_OUTER_JOIN] hashCondition=((cte1.id = cte2.id)) otherCondition=()
------------PhysicalCteConsumer ( cteId=CTEId#0 )
------------PhysicalCteConsumer ( cteId=CTEId#1 )

-- !limit_cte_query_window --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----filter((t1.id < 10))
------PhysicalOlapScan[t1]
--PhysicalResultSink
----PhysicalTopN[MERGE_SORT]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalWindow
----------PhysicalQuickSort[MERGE_SORT]
------------PhysicalQuickSort[LOCAL_SORT]
--------------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !limit_project_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------filter((t1.id > 100))
--------PhysicalOlapScan[t1]

-- !limit_join_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id > 100))
----------PhysicalOlapScan[t1]
--------filter((t2.id > 100))
----------PhysicalOlapScan[t2]

-- !limit_subquery_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_subquery_window --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------PhysicalWindow
--------PhysicalQuickSort[MERGE_SORT]
----------PhysicalQuickSort[LOCAL_SORT]
------------PhysicalOlapScan[t1]

-- !limit_nested_subquery --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------PhysicalOlapScan[t1]

-- !limit_subquery_distinct --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !limit_cross_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_multiple_left_outer_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------------PhysicalTopN[MERGE_SORT]
----------------PhysicalTopN[LOCAL_SORT]
------------------PhysicalOlapScan[t1]
--------------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_multiple_right_outer_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_multiple_full_outerjoin --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_subquery_cross_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalOlapScan[t1]
--------PhysicalOlapScan[t2]

-- !limit_subquery_multiple_join --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((subq.id = t3.id)) otherCondition=()
--------hashJoin[INNER_JOIN] hashCondition=((subq.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_subquery_multiple_join_nested_subquery --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashJoin[INNER_JOIN] hashCondition=((subq2.id = t3.id)) otherCondition=()
--------hashJoin[INNER_JOIN] hashCondition=((subq2.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalOlapScan[t2]
--------PhysicalOlapScan[t3]

-- !limit_subquery_multiple_join_nested_subquery_distinct --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------hashJoin[INNER_JOIN] hashCondition=((subq2.id = t3.id)) otherCondition=()
----------hashJoin[INNER_JOIN] hashCondition=((subq2.id = t2.id)) otherCondition=()
------------PhysicalOlapScan[t1]
------------PhysicalOlapScan[t2]
----------PhysicalOlapScan[t3]

-- !limit_subquery_multiple_join_nested_subquery_distinct_filter --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalTopN[LOCAL_SORT]
------hashAgg[LOCAL]
--------hashJoin[INNER_JOIN] hashCondition=((subq2.id = t3.id)) otherCondition=()
----------hashJoin[INNER_JOIN] hashCondition=((subq2.id = t2.id)) otherCondition=()
------------filter((t1.id > 100))
--------------PhysicalOlapScan[t1]
------------filter((t2.id > 100))
--------------PhysicalOlapScan[t2]
----------filter((t3.id > 100))
------------PhysicalOlapScan[t3]

