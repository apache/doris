-- This file is automatically generated. You should know what you did if you want to edit this
-- !sumCount_empty_table --
\N

-- !maxMax_minMin_sumSum_sumCount --
1	1	1	1
2	2	2	1
6	6	6	1
7	2	20	5
8	6	26	4
8	8	8	1
9	5	20	3

-- !maxGroupKey_minGroupKey --
\N	\N	6	6
1	1	2	1
2	2	3	3
3	3	2	1
4	4	2	2
5	5	4	3
7	7	6	6

-- !agg_project_agg --
\N	\N	\N	6	1
1	1	1	20	5
2	2	2	8	1
3	3	3	20	3
4	4	4	2	1
5	5	5	26	4
7	7	7	1	1

-- !upper_plan_can_use_name --
2
3
7
8
9
9
10

-- !outer_agg_has_distinct_same_keys --
1	1	1	1
2	2	2	1
4	2	6	2
6	6	6	1
6	6	6	1
6	6	6	1
7	3	14	3
8	6	20	3
8	8	8	1
9	5	14	2

-- !inner_agg_has_distinct_same_keys --
1	1	1	1
2	2	2	1
4	2	6	2
6	6	6	1
6	6	6	1
6	6	6	1
7	3	14	3
8	6	14	3
8	8	8	1
9	5	14	2

-- !sumCount_empty_table_shape --
PhysicalResultSink
--hashAgg[GLOBAL]
----PhysicalDistribute[DistributionSpecGather]
------hashAgg[LOCAL]
--------PhysicalProject[t.col]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[mal_test2.a]
------------------PhysicalOlapScan[mal_test2]

-- !agg_project_agg_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col2), min(col2), sum(col3), sum(col4)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[mal_test1.a, mal_test1.b]
------------------PhysicalOlapScan[mal_test1]

-- !maxMax_minMin_sumSum_sumCount_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col2), sum(col3), sum(col4)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[mal_test1.a, mal_test1.b]
------------------PhysicalOlapScan[mal_test1]

-- !maxGroupKey_minGroupKey_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(a), min(a), max(pk), min(pk)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[mal_test1.pk, mal_test1.a]
------------------PhysicalOlapScan[mal_test1]

-- !outer_agg_has_distinct_same_keys_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col2), sum(col3), sum(DISTINCT col4)]
----------hashAgg[LOCAL]
------------PhysicalOlapScan[mal_test1]

-- !inner_agg_has_distinct_same_keys_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col2), sum(col3), sum(col4)]
----------hashAgg[DISTINCT_LOCAL]
------------hashAgg[GLOBAL]
--------------hashAgg[LOCAL]
----------------PhysicalOlapScan[mal_test1]

-- !middle_project_has_expression_cannot_merge_shape1 --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col1)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[t.a, (pk + 1) AS `col1`]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[mal_test1.pk, mal_test1.a]
----------------------PhysicalOlapScan[mal_test1]

-- !middle_project_has_expression_cannot_merge_shape2 --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col2), sum(col3), sum(col4)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[t.a, (max(b) + 1) AS `col1`, t.col2, t.col3, t.col4]
------------------hashAgg[LOCAL]
--------------------PhysicalOlapScan[mal_test1]

-- !maxGroupKey_minGroupKey_sumGroupKey_cannot_merge_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[max(a), min(a), max(pk), min(pk), sum(pk)]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------hashAgg[LOCAL]
--------------PhysicalProject[mal_test1.pk, mal_test1.a]
----------------PhysicalOlapScan[mal_test1]

-- !maxMin_cannot_merge_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[max(col), max(col2)]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[t.a, t.col, t.col2]
--------------hashAgg[LOCAL]
----------------PhysicalOlapScan[mal_test1]

-- !group_key_not_contain_cannot_merge_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[max(col2)]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[t.a, t.col2]
--------------hashAgg[LOCAL]
----------------PhysicalOlapScan[mal_test1]

-- !outer_agg_has_distinct_cannot_merge_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col2), sum(col3), sum(DISTINCT col4)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[t.a, t.col1, t.col2, t.col3, t.col4]
------------------hashAgg[LOCAL]
--------------------PhysicalOlapScan[mal_test1]

-- !inner_agg_has_distinct_cannot_merge_shape --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1), min(col2), sum(col3), sum(col4)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[t.a, t.col1, t.col2, t.col3, t.col4]
------------------hashAgg[DISTINCT_LOCAL]
--------------------hashAgg[GLOBAL]
----------------------hashAgg[LOCAL]
------------------------PhysicalOlapScan[mal_test1]

-- !agg_with_expr_cannot_merge_shape1 --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1+a), min(col1)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[t.a, pk AS `col1`, (pk + a) AS `(pk + a)`]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[mal_test1.pk, mal_test1.a]
----------------------PhysicalOlapScan[mal_test1]

-- !agg_with_expr_cannot_merge_shape2 --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[max(col1+1), min(col1)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[t.a, pk AS `col1`, (pk + 1) AS `(pk + 1)`]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[mal_test1.pk, mal_test1.a]
----------------------PhysicalOlapScan[mal_test1]

-- !test_has_project_distinct_cant_transform --
1

-- !test_has_project_distinct_cant_transform_shape --
PhysicalResultSink
--hashAgg[GLOBAL]
----PhysicalDistribute[DistributionSpecGather]
------hashAgg[LOCAL]
--------PhysicalProject[count(DISTINCT CASE WHEN k3 IS NULL THEN 1 ELSE 0 END) AS `count_col`]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[mal_test_merge_agg.k4, if(k3 IS NULL, 1, 0) AS `if(k3 IS NULL, 1, 0)`]
------------------PhysicalOlapScan[mal_test_merge_agg]

-- !test_distinct_expr_transform --
-1

-- !test_distinct_expr_transform_shape --
PhysicalResultSink
--hashAgg[GLOBAL]
----PhysicalDistribute[DistributionSpecGather]
------hashAgg[LOCAL]
--------PhysicalProject[(0 - abs(k1)) AS `(0 - abs(k1))`]
----------PhysicalOlapScan[mal_test_merge_agg]

-- !test_has_project_distinct_expr_transform --
1
1
1

-- !test_has_project_distinct_expr_transform --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[sum(count_col)]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[mal_test_merge_agg.k4, if(k3 IS NULL, 1, 0) AS `if(k3 IS NULL, 1, 0)`]
--------------PhysicalOlapScan[mal_test_merge_agg]

-- !test_sum_empty_table --
\N	\N	\N

-- !test_sum_empty_table_shape --
PhysicalResultSink
--hashAgg[GLOBAL]
----PhysicalDistribute[DistributionSpecGather]
------hashAgg[LOCAL]
--------PhysicalOlapScan[mal_test2]

-- !agg_project_agg_the_project_has_duplicate_slot_output --
1	7	7
2	4	4
6	\N	\N
7	1	1
8	2	2
8	5	5
9	3	3

