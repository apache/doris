-- This file is automatically generated. You should know what you did if you want to edit this
-- !left_semi --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8)))) build RFs:RF0 b->[b];RF1 b->[b]
----filter(a IN (1, 2))
------PhysicalOlapScan[test_like1] apply RFs: RF0 RF1
----filter(a IN (8, 9))
------PhysicalOlapScan[test_like2]

-- !right_semi --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8)))) build RFs:RF0 b->[b];RF1 b->[b]
----filter(a IN (8, 9))
------PhysicalOlapScan[test_like2] apply RFs: RF0 RF1
----filter(a IN (1, 2))
------PhysicalOlapScan[test_like1]

-- !left --
PhysicalResultSink
--hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8))) and a IN (1, 2))
----PhysicalOlapScan[test_like1]
----filter(a IN (8, 9))
------PhysicalOlapScan[test_like2]

-- !right --
PhysicalResultSink
--hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8))) and a IN (8, 9))
----PhysicalOlapScan[test_like2]
----filter(a IN (1, 2))
------PhysicalOlapScan[test_like1]

-- !left_anti --
PhysicalResultSink
--hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8))) and a IN (1, 2))
----PhysicalOlapScan[test_like1]
----filter(a IN (8, 9))
------PhysicalOlapScan[test_like2]

-- !right_anti --
PhysicalResultSink
--hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8))) and a IN (8, 9))
----PhysicalOlapScan[test_like2]
----filter(a IN (1, 2))
------PhysicalOlapScan[test_like1]

-- !inner --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t1.b = t2.b)) otherCondition=((((t2.a = 9) AND (t1.a = 1)) OR ((t1.a = 2) AND (t2.a = 8)))) build RFs:RF0 b->[b];RF1 b->[b]
----filter(a IN (1, 2))
------PhysicalOlapScan[test_like1] apply RFs: RF0 RF1
----filter(a IN (8, 9))
------PhysicalOlapScan[test_like2]

-- !left_semi_res --
1
2

-- !right_semi_res --
8
9

-- !left_res --
1
2
3

-- !right_res --
\N
1
2

-- !left_anti_res --
3

-- !right_anti_res --
7

-- !inner_res --
1
2

