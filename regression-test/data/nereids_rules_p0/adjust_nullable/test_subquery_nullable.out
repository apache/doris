-- This file is automatically generated. You should know what you did if you want to edit this
-- !uncorrelate_scalar_subquery --
1	\N
2	\N

-- !uncorrelate_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[AND[x IS NULL,NULL] AS `x > 10 and x < 1`, a AS `a`]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[test_subquery_nullable_t1.a]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------PhysicalAssertNumRows
----------PhysicalLimit[GLOBAL]
------------PhysicalDistribute[DistributionSpecGather]
--------------PhysicalLimit[LOCAL]
----------------PhysicalProject[test_subquery_nullable_t2.x]
------------------filter((test_subquery_nullable_t2.x > 1000))
--------------------PhysicalOlapScan[test_subquery_nullable_t2]

-- !correlate_scalar_subquery --
1	\N
2	\N

-- !correlate_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[AND[any_value(x) IS NULL,NULL] AS `x > 10 and x < 1`, a AS `a`]
------hashJoin[LEFT_OUTER_JOIN broadcast] hashCondition=((test_subquery_nullable_t1.b = test_subquery_nullable_t2.y)) otherCondition=()
--------PhysicalProject[test_subquery_nullable_t1.a, test_subquery_nullable_t1.b]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[test_subquery_nullable_t2.x, test_subquery_nullable_t2.y]
----------------filter((test_subquery_nullable_t2.x > 1000))
------------------PhysicalOlapScan[test_subquery_nullable_t2]

-- !uncorrelate_top_nullable_agg_scalar_subquery --
1	\N
2	\N

-- !uncorrelate_top_nullable_agg_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[AND[sum(x) IS NULL,NULL] AS `x > 10 and x < 1`, a AS `a`]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[test_subquery_nullable_t1.a]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecGather]
------------hashAgg[LOCAL]
--------------PhysicalProject[test_subquery_nullable_t2.x]
----------------filter((test_subquery_nullable_t2.x > 1000))
------------------PhysicalOlapScan[test_subquery_nullable_t2]

-- !correlate_top_nullable_agg_scalar_subquery --
1	\N
2	\N

-- !correlate_top_nullable_agg_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[AND[sum(x) IS NULL,NULL] AS `x > 10 and x < 1`, a AS `a`]
------hashJoin[LEFT_OUTER_JOIN broadcast] hashCondition=((test_subquery_nullable_t1.b = test_subquery_nullable_t2.y)) otherCondition=()
--------PhysicalProject[test_subquery_nullable_t1.a, test_subquery_nullable_t1.b]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[test_subquery_nullable_t2.x, test_subquery_nullable_t2.y]
----------------filter((test_subquery_nullable_t2.x > 1000))
------------------PhysicalOlapScan[test_subquery_nullable_t2]

-- !uncorrelate_top_notnullable_agg_scalar_subquery --
1	false
2	false

-- !uncorrelate_top_notnullable_agg_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[FALSE AS `x > 10 and x < 1`, a AS `a`]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[test_subquery_nullable_t1.a]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------PhysicalProject[1 AS `1`]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecGather]
--------------hashAgg[LOCAL]
----------------PhysicalProject[test_subquery_nullable_t2.x]
------------------filter((test_subquery_nullable_t2.x > 1000))
--------------------PhysicalOlapScan[test_subquery_nullable_t2]

-- !correlate_top_notnullable_agg_scalar_subquery --
1	false
2	false

-- !correlate_top_notnullable_agg_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[FALSE AS `x > 10 and x < 1`, a AS `a`]
------PhysicalOlapScan[test_subquery_nullable_t1]

-- !uncorrelate_notop_notnullable_agg_scalar_subquery --
1	\N
2	\N

-- !uncorrelate_notop_notnullable_agg_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[AND[count(x) IS NULL,NULL] AS `x > 10 and x < 1`, a AS `a`]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[test_subquery_nullable_t1.a]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------PhysicalAssertNumRows
----------PhysicalDistribute[DistributionSpecGather]
------------PhysicalProject[count(x)]
--------------hashAgg[LOCAL]
----------------PhysicalProject[test_subquery_nullable_t2.x]
------------------filter((test_subquery_nullable_t2.x > 1000))
--------------------PhysicalOlapScan[test_subquery_nullable_t2]

-- !correlate_notop_notnullable_agg_scalar_subquery --
1	\N
2	\N

-- !correlate_notop_notnullable_agg_scalar_subquery_shape --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalProject[AND[any_value(count(x)) IS NULL,NULL] AS `x > 10 and x < 1`, a AS `a`, assert_true(OR[count(*) IS NULL,(count(*) <= 1)], 'correlate scalar subquery must return only 1 row') AS `assert_true(OR[count(*) IS NULL,(count(*) <= 1)], 'correlate scalar subquery must return only 1 row')`, assert_true(OR[count(*) IS NULL,(count(*) <= 1)], 'correlate scalar subquery must return only 1 row') AS `assert_true(OR[count(*) IS NULL,(count(*) <= 1)], 'correlate scalar subquery must return only 1 row')`]
------hashJoin[LEFT_OUTER_JOIN broadcast] hashCondition=((expr_(a + b) = cast(x as BIGINT))) otherCondition=()
--------PhysicalProject[(a + b) AS `expr_(a + b)`, test_subquery_nullable_t1.a]
----------PhysicalOlapScan[test_subquery_nullable_t1]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[cast(x as BIGINT) AS `cast(x as BIGINT)`, count(x)]
----------------hashAgg[LOCAL]
------------------PhysicalProject[test_subquery_nullable_t2.x]
--------------------filter((test_subquery_nullable_t2.x > 1000))
----------------------PhysicalOlapScan[test_subquery_nullable_t2]

