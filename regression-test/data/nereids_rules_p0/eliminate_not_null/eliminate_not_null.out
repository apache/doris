-- This file is automatically generated. You should know what you did if you want to edit this
-- !eliminate_not_null_basic_comparison --
PhysicalResultSink
--filter(( not score IS NULL) and (t.score > 13))
----PhysicalOlapScan[t]

-- !eliminate_not_null_in_clause --
PhysicalResultSink
--filter(( not id IS NULL) and id IN (1, 2, 3))
----PhysicalOlapScan[t]

-- !eliminate_not_null_not_equal --
PhysicalResultSink
--filter(( not (score = 13)) and ( not score IS NULL))
----PhysicalOlapScan[t]

-- !eliminate_not_null_string_function --
PhysicalResultSink
--filter(( not name IS NULL) and (length(name) > 0))
----PhysicalOlapScan[t]

-- !eliminate_not_null_aggregate --
PhysicalResultSink
--hashAgg[LOCAL]
----filter(( not score IS NULL) and (t.score > 0))
------PhysicalOlapScan[t]

-- !eliminate_not_null_between --
PhysicalResultSink
--filter(( not score IS NULL) and (t.score <= 10) and (t.score >= 1))
----PhysicalOlapScan[t]

-- !eliminate_not_null_math_function --
PhysicalResultSink
--filter(( not score IS NULL) and (abs(score) = 5))
----PhysicalOlapScan[t]

-- !eliminate_not_null_complex_logic --
PhysicalResultSink
--filter(( not score IS NULL) and ((t.score > 5) OR (t.id < 10)))
----PhysicalOlapScan[t]

-- !eliminate_not_null_date_function --
PhysicalResultSink
--filter(( not name IS NULL) and (year(cast(name as DATEV2)) = 2022))
----PhysicalOlapScan[t]

-- !eliminate_not_null_with_subquery --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t.score = t.score)) otherCondition=()
----filter(( not score IS NULL) and (t.score > 0))
------PhysicalOlapScan[t]
----filter((t.score > 0))
------PhysicalOlapScan[t]

