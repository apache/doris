-- This file is automatically generated. You should know what you did if you want to edit this
-- !sum_add_const_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) + 2)) AS `sum(id + 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) + 2)) AS `partial_sum((cast(id as BIGINT) + 2))`)]
------PhysicalProject[(cast(id as BIGINT) + 2) AS `(cast(id as BIGINT) + 2)`]
--------PhysicalOlapScan[sr]

-- !sum_add_const_result --
138

-- !sum_add_const_alias_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) + 2)) AS `result`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) + 2)) AS `partial_sum((cast(id as BIGINT) + 2))`)]
------PhysicalProject[(cast(id as BIGINT) + 2) AS `(cast(id as BIGINT) + 2)`]
--------PhysicalOlapScan[sr]

-- !sum_add_const_alias_result --
138

-- !sum_add_const_where_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) + 2)) AS `sum(id + 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) + 2)) AS `partial_sum((cast(id as BIGINT) + 2))`)]
------PhysicalProject[(cast(id as BIGINT) + 2) AS `(cast(id as BIGINT) + 2)`]
--------filter(( not id IS NULL))
----------PhysicalOlapScan[sr]

-- !sum_add_const_where_result --
138

-- !sum_add_const_group_by_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(id as BIGINT) + 2)) AS `sum(id + 2)`)]
----hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(id as BIGINT) + 2)) AS `partial_sum((cast(id as BIGINT) + 2))`, sr.not_null_id)]
------PhysicalProject[(cast(id as BIGINT) + 2) AS `(cast(id as BIGINT) + 2)`, sr.not_null_id]
--------PhysicalOlapScan[sr]

-- !sum_add_const_group_by_result --
10	43
6	27
7	31
8	17
9	20

-- !sum_add_const_having_shape --
PhysicalResultSink
--filter((sum(id + 2) > 5))
----hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(id as BIGINT) + 2)) AS `sum(id + 2)`)]
------hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(id as BIGINT) + 2)) AS `partial_sum((cast(id as BIGINT) + 2))`, sr.not_null_id)]
--------PhysicalProject[(cast(id as BIGINT) + 2) AS `(cast(id as BIGINT) + 2)`, sr.not_null_id]
----------PhysicalOlapScan[sr]

-- !sum_add_const_having_result --
10	43
6	27
7	31
8	17
9	20

-- !sum_sub_const_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) - 2)) AS `sum(id - 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) - 2)) AS `partial_sum((cast(id as BIGINT) - 2))`)]
------PhysicalProject[(cast(id as BIGINT) - 2) AS `(cast(id as BIGINT) - 2)`]
--------PhysicalOlapScan[sr]

-- !sum_sub_const_result --
106

-- !sum_sub_const_alias_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) - 2)) AS `result`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) - 2)) AS `partial_sum((cast(id as BIGINT) - 2))`)]
------PhysicalProject[(cast(id as BIGINT) - 2) AS `(cast(id as BIGINT) - 2)`]
--------PhysicalOlapScan[sr]

-- !sum_sub_const_alias_result --
106

-- !sum_sub_const_where_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) - 2)) AS `sum(id - 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) - 2)) AS `partial_sum((cast(id as BIGINT) - 2))`)]
------PhysicalProject[(cast(id as BIGINT) - 2) AS `(cast(id as BIGINT) - 2)`]
--------filter(( not id IS NULL))
----------PhysicalOlapScan[sr]

-- !sum_sub_const_where_result --
106

-- !sum_sub_const_group_by_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(id as BIGINT) - 2)) AS `sum(id - 2)`)]
----hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(id as BIGINT) - 2)) AS `partial_sum((cast(id as BIGINT) - 2))`, sr.not_null_id)]
------PhysicalProject[(cast(id as BIGINT) - 2) AS `(cast(id as BIGINT) - 2)`, sr.not_null_id]
--------PhysicalOlapScan[sr]

-- !sum_sub_const_group_by_result --
10	35
6	19
7	23
8	13
9	16

-- !sum_sub_const_having_shape --
PhysicalResultSink
--filter((sum(id - 2) > 0))
----hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(id as BIGINT) - 2)) AS `sum(id - 2)`)]
------hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(id as BIGINT) - 2)) AS `partial_sum((cast(id as BIGINT) - 2))`, sr.not_null_id)]
--------PhysicalProject[(cast(id as BIGINT) - 2) AS `(cast(id as BIGINT) - 2)`, sr.not_null_id]
----------PhysicalOlapScan[sr]

-- !sum_sub_const_having_result --
10	35
6	19
7	23
8	13
9	16

-- !sum_add_const_empty_table_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) + 2)) AS `sum(id + 2)`)]
----PhysicalProject[(cast(id as BIGINT) + 2) AS `(cast(id as BIGINT) + 2)`, sr.id]
------PhysicalEmptyRelation

-- !sum_add_const_empty_table_result --
\N

-- !sum_add_const_empty_table_group_by_shape --
PhysicalResultSink
--PhysicalEmptyRelation

-- !sum_add_const_empty_table_group_by_result --

-- !sum_sub_const_empty_table_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) - 2)) AS `sum(id - 2)`)]
----PhysicalProject[(cast(id as BIGINT) - 2) AS `(cast(id as BIGINT) - 2)`, sr.id]
------PhysicalEmptyRelation

-- !sum_sub_const_empty_table_result --
\N

-- !sum_sub_const_empty_table_group_by_shape --
PhysicalResultSink
--PhysicalEmptyRelation

-- !sum_sub_const_empty_table_group_by_result --

-- !float_sum_add_const_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(f_id as DOUBLE) + 2.0)) AS `sum(f_id + 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(f_id as DOUBLE) + 2.0)) AS `partial_sum((cast(f_id as DOUBLE) + 2.0))`)]
------PhysicalProject[(cast(f_id as DOUBLE) + 2.0) AS `(cast(f_id as DOUBLE) + 2.0)`]
--------PhysicalOlapScan[sr]

-- !float_sum_add_const_result --
79.60000002384186

-- !float_sum_add_const_alias_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(f_id as DOUBLE) + 2.0)) AS `result`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(f_id as DOUBLE) + 2.0)) AS `partial_sum((cast(f_id as DOUBLE) + 2.0))`)]
------PhysicalProject[(cast(f_id as DOUBLE) + 2.0) AS `(cast(f_id as DOUBLE) + 2.0)`]
--------PhysicalOlapScan[sr]

-- !float_sum_add_const_alias_result --
79.60000002384186

-- !float_sum_add_const_where_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(f_id as DOUBLE) + 2.0)) AS `sum(f_id + 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(f_id as DOUBLE) + 2.0)) AS `partial_sum((cast(f_id as DOUBLE) + 2.0))`)]
------PhysicalProject[(cast(f_id as DOUBLE) + 2.0) AS `(cast(f_id as DOUBLE) + 2.0)`]
--------filter(( not f_id IS NULL))
----------PhysicalOlapScan[sr]

-- !float_sum_add_const_where_result --
79.60000002384186

-- !float_sum_add_const_group_by_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(f_id as DOUBLE) + 2.0)) AS `sum(f_id + 2)`)]
----hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(f_id as DOUBLE) + 2.0)) AS `partial_sum((cast(f_id as DOUBLE) + 2.0))`, sr.not_null_id)]
------PhysicalProject[(cast(f_id as DOUBLE) + 2.0) AS `(cast(f_id as DOUBLE) + 2.0)`, sr.not_null_id]
--------PhysicalOlapScan[sr]

-- !float_sum_add_const_group_by_result --
10	24.0
6	7.300000071525574
7	11.700000047683716
8	16.09999990463257
9	20.5

-- !float_sum_add_const_having_shape --
PhysicalResultSink
--filter((sum(f_id + 2) > 5.0))
----hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(f_id as DOUBLE) + 2.0)) AS `sum(f_id + 2)`)]
------hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(f_id as DOUBLE) + 2.0)) AS `partial_sum((cast(f_id as DOUBLE) + 2.0))`, sr.not_null_id)]
--------PhysicalProject[(cast(f_id as DOUBLE) + 2.0) AS `(cast(f_id as DOUBLE) + 2.0)`, sr.not_null_id]
----------PhysicalOlapScan[sr]

-- !float_sum_add_const_having_result --
10	24.0
6	7.300000071525574
7	11.700000047683716
8	16.09999990463257
9	20.5

-- !float_sum_sub_const_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(f_id as DOUBLE) - 2.0)) AS `sum(f_id - 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(f_id as DOUBLE) - 2.0)) AS `partial_sum((cast(f_id as DOUBLE) - 2.0))`)]
------PhysicalProject[(cast(f_id as DOUBLE) - 2.0) AS `(cast(f_id as DOUBLE) - 2.0)`]
--------PhysicalOlapScan[sr]

-- !float_sum_sub_const_result --
39.60000002384186

-- !float_sum_sub_const_alias_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(f_id as DOUBLE) - 2.0)) AS `result`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(f_id as DOUBLE) - 2.0)) AS `partial_sum((cast(f_id as DOUBLE) - 2.0))`)]
------PhysicalProject[(cast(f_id as DOUBLE) - 2.0) AS `(cast(f_id as DOUBLE) - 2.0)`]
--------PhysicalOlapScan[sr]

-- !float_sum_sub_const_alias_result --
39.60000002384186

-- !float_sum_sub_const_where_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(f_id as DOUBLE) - 2.0)) AS `sum(f_id - 2)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(f_id as DOUBLE) - 2.0)) AS `partial_sum((cast(f_id as DOUBLE) - 2.0))`)]
------PhysicalProject[(cast(f_id as DOUBLE) - 2.0) AS `(cast(f_id as DOUBLE) - 2.0)`]
--------filter(( not f_id IS NULL))
----------PhysicalOlapScan[sr]

-- !float_sum_sub_const_where_result --
39.60000002384186

-- !float_sum_sub_const_group_by_shape --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(f_id as DOUBLE) - 2.0)) AS `sum(f_id - 2)`)]
----hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(f_id as DOUBLE) - 2.0)) AS `partial_sum((cast(f_id as DOUBLE) - 2.0))`, sr.not_null_id)]
------PhysicalProject[(cast(f_id as DOUBLE) - 2.0) AS `(cast(f_id as DOUBLE) - 2.0)`, sr.not_null_id]
--------PhysicalOlapScan[sr]

-- !float_sum_sub_const_group_by_result --
10	16.0
6	-0.6999999284744263
7	3.700000047683716
8	8.099999904632568
9	12.5

-- !float_sum_sub_const_having_shape --
PhysicalResultSink
--filter((sum(f_id - 2) > 0.0))
----hashAgg[GLOBAL, groupByExpr=(sr.not_null_id), outputExpr=(sr.not_null_id, sum((cast(f_id as DOUBLE) - 2.0)) AS `sum(f_id - 2)`)]
------hashAgg[LOCAL, groupByExpr=(sr.not_null_id), outputExpr=(partial_sum((cast(f_id as DOUBLE) - 2.0)) AS `partial_sum((cast(f_id as DOUBLE) - 2.0))`, sr.not_null_id)]
--------PhysicalProject[(cast(f_id as DOUBLE) - 2.0) AS `(cast(f_id as DOUBLE) - 2.0)`, sr.not_null_id]
----------PhysicalOlapScan[sr]

-- !float_sum_sub_const_having_result --
10	16.0
7	3.700000047683716
8	8.099999904632568
9	12.5

-- !sum_null_and_not_null_shape --
PhysicalResultSink
--PhysicalProject[(sum(cast(id as BIGINT)) + (count(cast(id as BIGINT)) * 1)) AS `sum(id + 1)`, (sum(cast(id as BIGINT)) - (count(cast(id as BIGINT)) * 1)) AS `sum(id - 1)`, (sum(cast(not_null_id as BIGINT)) + (count(cast(not_null_id as BIGINT)) * 1)) AS `sum(not_null_id + 1)`, (sum(cast(not_null_id as BIGINT)) - (count(cast(not_null_id as BIGINT)) * 1)) AS `sum(not_null_id - 1)`, sum(id), sum(not_null_id)]
----hashAgg[GLOBAL, groupByExpr=(), outputExpr=(count(cast(id as BIGINT)) AS `count(cast(id as BIGINT))`, count(cast(not_null_id as BIGINT)) AS `count(cast(not_null_id as BIGINT))`, sum(cast(id as BIGINT)) AS `sum(cast(id as BIGINT))`, sum(cast(not_null_id as BIGINT)) AS `sum(cast(not_null_id as BIGINT))`, sum(id) AS `sum(id)`, sum(not_null_id) AS `sum(not_null_id)`)]
------hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_count(cast(id as BIGINT)) AS `partial_count(cast(id as BIGINT))`, partial_count(cast(not_null_id as BIGINT)) AS `partial_count(cast(not_null_id as BIGINT))`, partial_sum(cast(id as BIGINT)) AS `partial_sum(cast(id as BIGINT))`, partial_sum(cast(not_null_id as BIGINT)) AS `partial_sum(cast(not_null_id as BIGINT))`, partial_sum(id) AS `partial_sum(id)`, partial_sum(not_null_id) AS `partial_sum(not_null_id)`)]
--------PhysicalProject[cast(id as BIGINT) AS `cast(id as BIGINT)`, cast(not_null_id as BIGINT) AS `cast(not_null_id as BIGINT)`, sr.id, sr.not_null_id]
----------PhysicalOlapScan[sr]

-- !sum_null_and_not_null_result --
122	130	114	80	90	70

-- !sum_distinct_shape --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----PhysicalProject[(cast(id as BIGINT) + 1) AS `(cast(id as BIGINT) + 1)`, sr.id]
------PhysicalOlapScan[sr]
--PhysicalResultSink
----NestedLoopJoin[CROSS_JOIN]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[sum(DISTINCT id) AS `sum(distinct id)`]
----------hashAgg[DISTINCT_GLOBAL, groupByExpr=(), outputExpr=(sum(id) AS `sum(DISTINCT id)`)]
------------hashAgg[DISTINCT_LOCAL, groupByExpr=(), outputExpr=(partial_sum(id) AS `partial_sum(id)`)]
--------------hashAgg[GLOBAL, groupByExpr=(.id), outputExpr=(.id)]
----------------hashAgg[LOCAL, groupByExpr=(.id), outputExpr=(.id)]
------------------PhysicalCteConsumer ( cteId=CTEId#0 )
--------PhysicalProject[sum(DISTINCT (cast(id as BIGINT) + 1)) AS `sum(distinct id + 1)`]
----------hashAgg[DISTINCT_GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) + 1)) AS `sum(DISTINCT (cast(id as BIGINT) + 1))`)]
------------hashAgg[DISTINCT_LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) + 1)) AS `partial_sum((cast(id as BIGINT) + 1))`)]
--------------hashAgg[GLOBAL, groupByExpr=(.(cast(id as BIGINT) + 1)), outputExpr=(.(cast(id as BIGINT) + 1))]
----------------hashAgg[LOCAL, groupByExpr=(.(cast(id as BIGINT) + 1)), outputExpr=(.(cast(id as BIGINT) + 1))]
------------------PhysicalCteConsumer ( cteId=CTEId#0 )
------PhysicalProject[sum((cast(id as BIGINT) + 1)) AS `sum(id + 1)`, sum(id) AS `sum(id)`]
--------hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(id as BIGINT) + 1)) AS `sum((cast(id as BIGINT) + 1))`, sum(id) AS `sum(id)`)]
----------hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(id as BIGINT) + 1)) AS `partial_sum((cast(id as BIGINT) + 1))`, partial_sum(id) AS `partial_sum(id)`)]
------------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !sum_distinct_result --
122	122	130	130

-- !sum_not_null_distinct_shape --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----PhysicalProject[(cast(not_null_id as BIGINT) + 1) AS `(cast(not_null_id as BIGINT) + 1)`, sr.not_null_id]
------PhysicalOlapScan[sr]
--PhysicalResultSink
----NestedLoopJoin[CROSS_JOIN]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[sum(DISTINCT not_null_id) AS `sum(distinct not_null_id)`]
----------hashAgg[DISTINCT_GLOBAL, groupByExpr=(), outputExpr=(sum(not_null_id) AS `sum(DISTINCT not_null_id)`)]
------------hashAgg[DISTINCT_LOCAL, groupByExpr=(), outputExpr=(partial_sum(not_null_id) AS `partial_sum(not_null_id)`)]
--------------hashAgg[GLOBAL, groupByExpr=(.not_null_id), outputExpr=(.not_null_id)]
----------------hashAgg[LOCAL, groupByExpr=(.not_null_id), outputExpr=(.not_null_id)]
------------------PhysicalCteConsumer ( cteId=CTEId#0 )
--------PhysicalProject[sum(DISTINCT (cast(not_null_id as BIGINT) + 1)) AS `sum(distinct not_null_id + 1)`]
----------hashAgg[DISTINCT_GLOBAL, groupByExpr=(), outputExpr=(sum((cast(not_null_id as BIGINT) + 1)) AS `sum(DISTINCT (cast(not_null_id as BIGINT) + 1))`)]
------------hashAgg[DISTINCT_LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(not_null_id as BIGINT) + 1)) AS `partial_sum((cast(not_null_id as BIGINT) + 1))`)]
--------------hashAgg[GLOBAL, groupByExpr=(.(cast(not_null_id as BIGINT) + 1)), outputExpr=(.(cast(not_null_id as BIGINT) + 1))]
----------------hashAgg[LOCAL, groupByExpr=(.(cast(not_null_id as BIGINT) + 1)), outputExpr=(.(cast(not_null_id as BIGINT) + 1))]
------------------PhysicalCteConsumer ( cteId=CTEId#0 )
------PhysicalProject[sum((cast(not_null_id as BIGINT) + 1)) AS `sum(not_null_id + 1)`, sum(not_null_id) AS `sum(not_null_id)`]
--------hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum((cast(not_null_id as BIGINT) + 1)) AS `sum((cast(not_null_id as BIGINT) + 1))`, sum(not_null_id) AS `sum(not_null_id)`)]
----------hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum((cast(not_null_id as BIGINT) + 1)) AS `partial_sum((cast(not_null_id as BIGINT) + 1))`, partial_sum(not_null_id) AS `partial_sum(not_null_id)`)]
------------PhysicalCteConsumer ( cteId=CTEId#0 )

-- !sum_not_null_distinct_result --
80	40	90	45

