-- This file is automatically generated. You should know what you did if you want to edit this
-- !pushdown_inner_join --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_left_semi_join --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_right_semi_join --
PhysicalResultSink
--hashJoin[RIGHT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_left_outer_join --
PhysicalResultSink
--hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=((t1.id > 1))
----PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_right_outer_join --
PhysicalResultSink
--hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !pushdown_full_outer_join --
PhysicalResultSink
--hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=((t1.id > 1))
----PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !pushdown_left_anti_join --
PhysicalResultSink
--hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=((t1.id > 1))
----PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_right_anti_join --
PhysicalResultSink
--hashJoin[RIGHT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !pushdown_cross_join --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_inner_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10) and (t2.id > 1))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10) and (t3.id > 1))
------PhysicalOlapScan[t3]

-- !pushdown_left_semi_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
----hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10) and (t2.id > 1))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10) and (t3.id > 1))
------PhysicalOlapScan[t3]

-- !pushdown_right_semi_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----hashJoin[RIGHT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10) and (t2.id > 1))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10) and (t3.id > 1))
------PhysicalOlapScan[t3]

-- !pushdown_left_outer_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10) and (t2.id > 1))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10) and (t3.id > 1))
------PhysicalOlapScan[t3]

-- !pushdown_right_outer_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10))
------PhysicalOlapScan[t3]

-- !pushdown_full_outer_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10))
------PhysicalOlapScan[t3]

-- !pushdown_left_anti_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
----hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=((t1.id > 1))
------filter((t1.id < 10))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10) and (t2.id > 1))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10))
------PhysicalOlapScan[t3]

-- !pushdown_right_anti_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----hashJoin[RIGHT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id < 10) and (t1.id > 1))
--------PhysicalOlapScan[t1]
------filter((t2.id < 10))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10))
------PhysicalOlapScan[t3]

-- !pushdown_cross_join_combined --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t2.id = t3.id)) otherCondition=()
----NestedLoopJoin[CROSS_JOIN]
------PhysicalOlapScan[t1]
------filter((t2.id < 10))
--------PhysicalOlapScan[t2]
----filter((t3.id < 10))
------PhysicalOlapScan[t3]

-- !pushdown_null_aware_anti_join_combined --
PhysicalResultSink
--hashJoin[NULL_AWARE_LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----PhysicalOlapScan[t1]
----filter((t2.id > 0))
------PhysicalOlapScan[t2]

-- !pushdown_inner_join_subquery --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((expr_cast(id as BIGINT) = sum(id))) otherCondition=()
----filter((cast(id as BIGINT) = 1) and (t1.id = 1))
------PhysicalOlapScan[t1]
----filter((sum(id) = 1))
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------PhysicalOlapScan[t2]

-- !pushdown_left_semi_join_subquery --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_left_outer_join_subquery --
PhysicalResultSink
--filter(((cast(id as BIGINT) = sum(id)) OR id IS NULL))
----NestedLoopJoin[LEFT_OUTER_JOIN](id = 1)
------PhysicalOlapScan[t1]
------hashAgg[GLOBAL]
--------hashAgg[LOCAL]
----------PhysicalOlapScan[t2]

-- !pushdown_left_anti_join_subquery --
PhysicalResultSink
--NestedLoopJoin[LEFT_ANTI_JOIN](((t1.id = t2.id) OR id IS NULL) OR id IS NULL)(id > 1)
----PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !pushdown_cross_subquery --
PhysicalResultSink
--NestedLoopJoin[LEFT_SEMI_JOIN]
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----PhysicalOlapScan[t2]

-- !pushdown_inner_join_subquery_outer --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalAssertNumRows
--------PhysicalOlapScan[t2]

-- !pushdown_left_semi_join_subquery_outer --
PhysicalResultSink
--hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----filter((t2.id > 1))
------PhysicalOlapScan[t2]

-- !pushdown_left_outer_join_subquery_outer --
PhysicalResultSink
--NestedLoopJoin[INNER_JOIN]((t1.id = t2.id) OR (id IS NULL AND (id > 1)))
----PhysicalOlapScan[t1]
----PhysicalAssertNumRows
------PhysicalOlapScan[t2]

-- !pushdown_cross_join_subquery_outer --
PhysicalResultSink
--NestedLoopJoin[CROSS_JOIN]
----filter((t1.id > 1))
------PhysicalOlapScan[t1]
----PhysicalLimit[GLOBAL]
------PhysicalLimit[LOCAL]
--------PhysicalOlapScan[t2]

