-- This file is automatically generated. You should know what you did if you want to edit this
-- !filter_project_alias --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((t1.id = 1))
------PhysicalOlapScan[t1]

-- !filter_project_constant --
PhysicalResultSink
--PhysicalEmptyRelation

-- !filter_project_arithmetic --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((cast(id as BIGINT) = 1))
------PhysicalOlapScan[t1]

-- !filter_order_by --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((t.id = 1))
------PhysicalOlapScan[t1]

-- !filter_order_by_limit --
PhysicalResultSink
--filter((t.id = 1))
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalOlapScan[t1]

-- !filter_order_by_constant --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((t.id = 1))
------PhysicalOlapScan[t1]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.msg = ''))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------PhysicalOlapScan[t2]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1) and (t1.id = 2))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1) and (t2.id = 2))
----------PhysicalOlapScan[t2]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=(((t1.id = 1) OR (t2.id = 2)))
------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------PhysicalOlapScan[t2]

-- !filter_join_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1) and (t1.id = 2))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1) and (t2.id = 2))
----------PhysicalOlapScan[t2]

-- !filter_join_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter(((t1.id = 1) OR (t2.id = 2)))
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalOlapScan[t1]
--------PhysicalDistribute[DistributionSpecHash]
----------PhysicalOlapScan[t2]

-- !filter_join_right --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_full --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1) and (t1.id = 2))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1) and (t2.id = 2))
----------PhysicalOlapScan[t2]

-- !filter_join_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter(((t1.id = 1) OR (t2.id = 2)))
------hashJoin[FULL_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------PhysicalDistribute[DistributionSpecHash]
----------PhysicalOlapScan[t1]
--------PhysicalDistribute[DistributionSpecHash]
----------PhysicalOlapScan[t2]

-- !filter_join_cross --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----NestedLoopJoin[CROSS_JOIN]
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecReplicated]
--------PhysicalOlapScan[t2]

-- !filter_join_left_anti --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_left_semi --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_right_anti --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[RIGHT_ANTI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------PhysicalDistribute[DistributionSpecHash]
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_right_semi --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[RIGHT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_join_right_semi --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[RIGHT_SEMI_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]

-- !filter_multi_inner --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute[DistributionSpecHash]
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t3.id = 1))
----------PhysicalOlapScan[t3]

-- !filter_mixed_inner_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((((t1.id = 1) AND (t2.id = 2)) OR (t3.id = 2)))
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalDistribute[DistributionSpecHash]
------------PhysicalOlapScan[t2]
--------PhysicalDistribute[DistributionSpecHash]
----------PhysicalOlapScan[t3]

-- !filter_multi_left --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((((t1.id = 1) AND (t2.id > 1)) OR (t3.id < 4)))
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------PhysicalOlapScan[t1]
----------PhysicalDistribute[DistributionSpecHash]
------------PhysicalOlapScan[t2]
--------PhysicalDistribute[DistributionSpecHash]
----------PhysicalOlapScan[t3]

-- !filter_multi_outer --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute[DistributionSpecHash]
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t3.id = 1))
----------PhysicalOlapScan[t3]

-- !filter_multi_cross --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----NestedLoopJoin[CROSS_JOIN]
------NestedLoopJoin[CROSS_JOIN]
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute[DistributionSpecReplicated]
----------PhysicalOlapScan[t2]
------PhysicalDistribute[DistributionSpecReplicated]
--------PhysicalOlapScan[t3]

-- !filter_multi_mixed --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t1.id = t4.id)) otherCondition=()
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id)) otherCondition=()
--------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id)) otherCondition=()
----------filter((t1.id = 1))
------------PhysicalOlapScan[t1]
----------PhysicalDistribute[DistributionSpecHash]
------------filter((t2.id = 1))
--------------PhysicalOlapScan[t2]
--------PhysicalDistribute[DistributionSpecHash]
----------filter((t3.id = 1))
------------PhysicalOlapScan[t3]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t4.id = 1))
----------PhysicalOlapScan[t4]

-- !filter_aggregation_filtered_agg_func --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((count(*) > 10))
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalOlapScan[t1]

-- !filter_aggregation_group_set --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((cast(msg as DOUBLE) = 1.0))
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalRepeat
--------------filter((t1.id > 10))
----------------PhysicalOlapScan[t1]

-- !filter_aggregation_group_set --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter(((t1.id > 10) OR (cast(msg as DOUBLE) = 1.0)))
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalRepeat
--------------PhysicalOlapScan[t1]

-- !filter_aggregation_filtered_key --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashAgg[LOCAL]
------filter((t1.id > 10))
--------PhysicalOlapScan[t1]

-- !filter_aggregation_filtered_part_key --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashAgg[LOCAL]
------filter((t1.id > 10))
--------PhysicalOlapScan[t1]

-- !filter_aggregation_filtered_part_key --

-- !filter_aggregation_filtered_part_key --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----filter((t.c > 10))
------hashAgg[LOCAL]
--------PhysicalOlapScan[t1]

-- !push_filter_union --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashAgg[GLOBAL]
------PhysicalDistribute[DistributionSpecHash]
--------hashAgg[LOCAL]
----------PhysicalUnion
------------PhysicalDistribute[DistributionSpecExecutionAny]
--------------filter((t1.id = 2))
----------------PhysicalOlapScan[t1]
------------PhysicalDistribute[DistributionSpecExecutionAny]
--------------filter((t2.id = 2))
----------------PhysicalOlapScan[t2]

-- !push_filter_union_all --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalUnion
------PhysicalDistribute[DistributionSpecExecutionAny]
--------filter((t1.id = 2))
----------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecExecutionAny]
--------filter((t2.id = 2))
----------PhysicalOlapScan[t2]

-- !push_filter_intersect --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalIntersect
------PhysicalDistribute[DistributionSpecHash]
--------filter((t1.id = 2))
----------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 2))
----------PhysicalOlapScan[t2]

-- !push_filter_except --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalExcept
------PhysicalDistribute[DistributionSpecHash]
--------filter((t1.id = 2))
----------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 2))
----------PhysicalOlapScan[t2]

-- !push_filter_union --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashAgg[GLOBAL]
------PhysicalDistribute[DistributionSpecHash]
--------hashAgg[LOCAL]
----------PhysicalUnion
------------PhysicalDistribute[DistributionSpecExecutionAny]
--------------filter((cast(random() as INT) = 2))
----------------PhysicalOneRowRelation
------------PhysicalDistribute[DistributionSpecExecutionAny]
--------------filter((t2.id = 2))
----------------PhysicalOlapScan[t2]

-- !push_filter_union_all --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalUnion
------PhysicalDistribute[DistributionSpecExecutionAny]
--------filter(((cast(random() as INT) = 2) OR (cast(random() as INT) = 3)))
----------PhysicalOneRowRelation
------PhysicalDistribute[DistributionSpecExecutionAny]
--------filter(id IN (2, 3))
----------PhysicalOlapScan[t2]

-- !push_filter_intersect --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalIntersect
------PhysicalDistribute[DistributionSpecHash]
--------filter(((cast(random() as INT) = 2) OR (cast(random() as INT) = 3)))
----------PhysicalOneRowRelation
------PhysicalDistribute[DistributionSpecHash]
--------filter(id IN (2, 3))
----------PhysicalOlapScan[t2]

-- !push_filter_except --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalExcept
------PhysicalDistribute[DistributionSpecHash]
--------filter((cast(random() as INT) = 2) and (t1.msg = ''))
----------PhysicalOlapScan[t1]
------PhysicalDistribute[DistributionSpecHash]
--------filter((t2.id = 2) and (t2.msg = ''))
----------PhysicalOlapScan[t2]

-- !push_filter_except --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t3.id = t.id)) otherCondition=()
------PhysicalDistribute[DistributionSpecHash]
--------PhysicalExcept
----------PhysicalDistribute[DistributionSpecHash]
------------filter((t1.id = 2))
--------------PhysicalOlapScan[t1]
----------PhysicalDistribute[DistributionSpecHash]
------------filter((t2.id = 2))
--------------PhysicalOlapScan[t2]
------PhysicalDistribute[DistributionSpecHash]
--------PhysicalOlapScan[t3]

-- !push_filter_subquery --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----hashJoin[INNER_JOIN] hashCondition=((t3.id = t.id)) otherCondition=()
------PhysicalDistribute[DistributionSpecHash]
--------PhysicalExcept
----------PhysicalDistribute[DistributionSpecHash]
------------filter((t1.id = 2))
--------------PhysicalOlapScan[t1]
----------PhysicalDistribute[DistributionSpecHash]
------------filter((t2.id = 2))
--------------PhysicalOlapScan[t2]
------PhysicalDistribute[DistributionSpecHash]
--------PhysicalOlapScan[t3]

-- !filter_window_row_number --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT]
--------filter((t1.id <= 5))
----------PhysicalOlapScan[t1]

-- !filter_window_order_row_number --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT]
--------filter((t1.id <= 5))
----------PhysicalOlapScan[t1]

-- !filter_window_row_number_complex_predicate --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalDistribute[DistributionSpecHash]
----------filter(((cast(id as DOUBLE) + cast(msg as DOUBLE)) = cast('' as DOUBLE)))
------------PhysicalOlapScan[t1]

-- !filter_multi_window --
PhysicalResultSink
--PhysicalDistribute[DistributionSpecGather]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalDistribute[DistributionSpecHash]
----------PhysicalWindow
------------PhysicalQuickSort[LOCAL_SORT]
--------------PhysicalDistribute[DistributionSpecHash]
----------------filter(((t1.msg = '') OR (t1.id = 2)))
------------------PhysicalOlapScan[t1]

