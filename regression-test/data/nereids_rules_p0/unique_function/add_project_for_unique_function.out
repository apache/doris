-- This file is automatically generated. You should know what you did if you want to edit this
-- !one_row_relation_1 --
PhysicalResultSink
--PhysicalOneRowRelation[random(1, 100) AS `random(1, 100)`, uuid_to_int(uuid()) AS `uuid_to_int(uuid())`]

-- !one_row_relation_2 --
PhysicalResultSink
--PhysicalProject[AND[($_random_5_$ >= 10),($_random_5_$ <= 20)] AS `random(1, 100) between 10 and 20`, uuid_to_int(uuid()) AS `uuid_to_int(uuid())`]
----PhysicalOneRowRelation[random(1, 100) AS `$_random_5_$`]

-- !one_row_relation_3 --
PhysicalResultSink
--PhysicalProject[AND[($_random_5_$ >= 10),($_random_5_$ <= 20)] AS `random(1, 100) between 10 and 20`, AND[(uuid_to_int($_uuid_6_$) >= 111),(uuid_to_int($_uuid_6_$) <= 222)] AS `uuid_to_int(uuid()) between 111 and 222`]
----PhysicalOneRowRelation[random(1, 100) AS `$_random_5_$`, uuid() AS `$_uuid_6_$`]

-- !project_1 --
PhysicalResultSink
--PhysicalProject[((cast(id as BIGINT) + random(1, 100)) > 20) AS `id + random(1, 100) > 20`, (cast(id as BIGINT) * 200) AS `id * 200`]
----PhysicalOlapScan[t1]

-- !project_2 --
PhysicalResultSink
--PhysicalProject[(cast(id as BIGINT) * 200) AS `id * 200`, AND[((cast(id as BIGINT) + $_random_5_$) >= 10),((cast(id as BIGINT) + $_random_5_$) <= 20)] AS `id + random(1, 100) between 10 and 20`]
----PhysicalProject[random(1, 100) AS `$_random_5_$`, t1.id]
------PhysicalOlapScan[t1]

-- !filter_1 --
PhysicalResultSink
--PhysicalProject[t1.id]
----filter(((cast(id as BIGINT) + random(1, 100)) >= 10))
------PhysicalOlapScan[t1]

-- !filter_2 --
PhysicalResultSink
--PhysicalProject[t1.id]
----filter(((cast(id as BIGINT) + $_random_3_$) <= 20) and ((cast(id as BIGINT) + $_random_3_$) >= 10))
------PhysicalProject[random(1, 100) AS `$_random_3_$`, t1.id]
--------PhysicalOlapScan[t1]

-- !union_1 --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(k), outputExpr=(k)]
----hashAgg[LOCAL, groupByExpr=(k), outputExpr=(k)]
------PhysicalUnion(constantExprsList=[[TRUE AS `true`]])
--------PhysicalProject[AND[($_random_8_$ >= 0.1),($_random_8_$ <= 0.5)] AS `k`]
----------PhysicalOneRowRelation[random() AS `$_random_8_$`]

-- !union_2 --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(k), outputExpr=(k)]
----hashAgg[LOCAL, groupByExpr=(k), outputExpr=(k)]
------PhysicalUnion(constantExprsList=[[TRUE AS `true`]])
--------PhysicalProject[AND[((cast(id as DOUBLE) + $_random_9_$) >= 0.1),((cast(id as DOUBLE) + $_random_9_$) <= 0.5)] AS `k`]
----------PhysicalProject[random() AS `$_random_9_$`, t1.id]
------------PhysicalOlapScan[t1]

-- !union_all_1 --
PhysicalResultSink
--PhysicalUnion(constantExprsList=[[TRUE AS `true`]])
----PhysicalProject[AND[($_random_6_$ >= 0.1),($_random_6_$ <= 0.5)] AS `k`]
------PhysicalOneRowRelation[random() AS `$_random_6_$`]

-- !union_all_2 --
PhysicalResultSink
--PhysicalUnion(constantExprsList=[[TRUE AS `true`]])
----PhysicalProject[AND[((cast(id as DOUBLE) + $_random_7_$) >= 0.1),((cast(id as DOUBLE) + $_random_7_$) <= 0.5)] AS `k`]
------PhysicalProject[random() AS `$_random_7_$`, t1.id]
--------PhysicalOlapScan[t1]

-- !intersect_1 --
PhysicalResultSink
--PhysicalIntersect
----PhysicalProject[AND[($_random_8_$ >= 0.1),($_random_8_$ <= 0.5)] AS `k`]
------filter((AND[($_random_8_$ >= 0.1),($_random_8_$ <= 0.5)] = TRUE))
--------PhysicalOneRowRelation[random() AS `$_random_8_$`]
----PhysicalOneRowRelation[TRUE AS `true`]

-- !intersect_2 --
PhysicalResultSink
--PhysicalIntersect
----PhysicalProject[AND[((cast(id as DOUBLE) + $_random_9_$) >= 0.1),((cast(id as DOUBLE) + $_random_9_$) <= 0.5)] AS `k`]
------filter((AND[((cast(id as DOUBLE) + $_random_9_$) >= 0.1),((cast(id as DOUBLE) + $_random_9_$) <= 0.5)] = TRUE))
--------PhysicalProject[random() AS `$_random_9_$`, t1.id]
----------PhysicalOlapScan[t1]
----PhysicalOneRowRelation[TRUE AS `true`]

-- !except_1 --
PhysicalResultSink
--PhysicalExcept
----PhysicalProject[AND[($_random_8_$ >= 0.1),($_random_8_$ <= 0.5)] AS `k`]
------PhysicalOneRowRelation[random() AS `$_random_8_$`]
----PhysicalOneRowRelation[TRUE AS `true`]

-- !except_2 --
PhysicalResultSink
--PhysicalExcept
----PhysicalProject[AND[((cast(id as DOUBLE) + $_random_9_$) >= 0.1),((cast(id as DOUBLE) + $_random_9_$) <= 0.5)] AS `k`]
------PhysicalProject[random() AS `$_random_9_$`, t1.id]
--------PhysicalOlapScan[t1]
----PhysicalOneRowRelation[TRUE AS `true`]

-- !sort_1 --
PhysicalResultSink
--PhysicalProject[t.k]
----PhysicalQuickSort[MERGE_SORT, orderKeys=(AND[((cast(k as DOUBLE) + random(100)) >= 0.6),((cast(k as DOUBLE) + random(100)) <= 0.7)] asc null first)]
------PhysicalQuickSort[LOCAL_SORT, orderKeys=(AND[((cast(k as DOUBLE) + random(100)) >= 0.6),((cast(k as DOUBLE) + random(100)) <= 0.7)] asc null first)]
--------PhysicalProject[AND[((cast(k as DOUBLE) + $_random_5_$) >= 0.6),((cast(k as DOUBLE) + $_random_5_$) <= 0.7)] AS `AND[((cast(k as DOUBLE) + random(100)) >= 0.6),((cast(k as DOUBLE) + random(100)) <= 0.7)]`, t.k]
----------PhysicalProject[AND[($_random_6_$ >= 0.1),($_random_6_$ <= 0.5)] AS `k`, random(100) AS `$_random_5_$`]
------------PhysicalOneRowRelation[random() AS `$_random_6_$`]

-- !sort_2 --
PhysicalResultSink
--PhysicalProject[t.k]
----PhysicalQuickSort[MERGE_SORT, orderKeys=(AND[((cast(k as DOUBLE) + random(100)) >= 0.6),((cast(k as DOUBLE) + random(100)) <= 0.7)] asc null first)]
------PhysicalQuickSort[LOCAL_SORT, orderKeys=(AND[((cast(k as DOUBLE) + random(100)) >= 0.6),((cast(k as DOUBLE) + random(100)) <= 0.7)] asc null first)]
--------PhysicalProject[AND[((cast(k as DOUBLE) + $_random_6_$) >= 0.6),((cast(k as DOUBLE) + $_random_6_$) <= 0.7)] AS `AND[((cast(k as DOUBLE) + random(100)) >= 0.6),((cast(k as DOUBLE) + random(100)) <= 0.7)]`, t.k]
----------PhysicalProject[AND[((cast(id as DOUBLE) + $_random_7_$) >= 0.1),((cast(id as DOUBLE) + $_random_7_$) <= 0.5)] AS `k`, random(100) AS `$_random_6_$`]
------------PhysicalProject[random() AS `$_random_7_$`, t1.id]
--------------PhysicalOlapScan[t1]

-- !agg_1 --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum(cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT)) AS `sum(random(100) between 0.6 and 0.7)`)]
----PhysicalProject[$_random_5_$, cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT) AS `cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT)`]
------PhysicalOneRowRelation[random(100) AS `$_random_5_$`]

-- !agg_2 --
PhysicalResultSink
--hashAgg[GLOBAL, groupByExpr=(), outputExpr=(sum(cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT)) AS `sum(random(100) between 0.6 and 0.7)`, sum(id) AS `sum(id)`)]
----hashAgg[LOCAL, groupByExpr=(), outputExpr=(partial_sum(cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT)) AS `partial_sum(cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT))`, partial_sum(id) AS `partial_sum(id)`)]
------PhysicalProject[cast(AND[(random(100) >= 0.6),(random(100) <= 0.7)] as TINYINT) AS `cast(AND[($_random_5_$ >= 0.6),($_random_5_$ <= 0.7)] as TINYINT)`, random(100) AS `$_random_5_$`, t1.id]
--------PhysicalOlapScan[t1]

-- !agg_3 --
PhysicalResultSink
--PhysicalProject[sum(id), sum(random(100) between 0.6 and 0.7)]
----hashAgg[GLOBAL, groupByExpr=(AND[(random() >= cast(0.1 as DOUBLE)),(random() <= cast(0.5 as DOUBLE))]), outputExpr=(AND[(random() >= cast(0.1 as DOUBLE)),(random() <= cast(0.5 as DOUBLE))], sum(cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT)) AS `sum(random(100) between 0.6 and 0.7)`, sum(id) AS `sum(id)`)]
------hashAgg[LOCAL, groupByExpr=(AND[(random() >= cast(0.1 as DOUBLE)),(random() <= cast(0.5 as DOUBLE))]), outputExpr=(AND[(random() >= cast(0.1 as DOUBLE)),(random() <= cast(0.5 as DOUBLE))], partial_sum(cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT)) AS `partial_sum(cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT))`, partial_sum(id) AS `partial_sum(id)`)]
--------PhysicalProject[AND[($_random_8_$ >= 0.1),($_random_8_$ <= 0.5)] AS `AND[(random() >= cast(0.1 as DOUBLE)),(random() <= cast(0.5 as DOUBLE))]`, cast(AND[(random(100) >= 0.6),(random(100) <= 0.7)] as TINYINT) AS `cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT)`, random(100) AS `$_random_7_$`, t1.id]
----------PhysicalProject[random() AS `$_random_8_$`, t1.id]
------------PhysicalOlapScan[t1]

-- !agg_4 --
PhysicalResultSink
--PhysicalProject[sum(id), sum(random(100) between 0.6 and 0.7)]
----hashAgg[GLOBAL, groupByExpr=(AND[((cast(id as DOUBLE) + random()) >= cast(0.1 as DOUBLE)),((cast(id as DOUBLE) + random()) <= cast(0.5 as DOUBLE))]), outputExpr=(AND[((cast(id as DOUBLE) + random()) >= cast(0.1 as DOUBLE)),((cast(id as DOUBLE) + random()) <= cast(0.5 as DOUBLE))], sum(cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT)) AS `sum(random(100) between 0.6 and 0.7)`, sum(id) AS `sum(id)`)]
------hashAgg[LOCAL, groupByExpr=(AND[((cast(id as DOUBLE) + random()) >= cast(0.1 as DOUBLE)),((cast(id as DOUBLE) + random()) <= cast(0.5 as DOUBLE))]), outputExpr=(AND[((cast(id as DOUBLE) + random()) >= cast(0.1 as DOUBLE)),((cast(id as DOUBLE) + random()) <= cast(0.5 as DOUBLE))], partial_sum(cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT)) AS `partial_sum(cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT))`, partial_sum(id) AS `partial_sum(id)`)]
--------PhysicalProject[AND[((cast(id as DOUBLE) + $_random_8_$) >= 0.1),((cast(id as DOUBLE) + $_random_8_$) <= 0.5)] AS `AND[((cast(id as DOUBLE) + random()) >= cast(0.1 as DOUBLE)),((cast(id as DOUBLE) + random()) <= cast(0.5 as DOUBLE))]`, cast(AND[(random(100) >= 0.6),(random(100) <= 0.7)] as TINYINT) AS `cast(AND[($_random_7_$ >= 0.6),($_random_7_$ <= 0.7)] as TINYINT)`, random(100) AS `$_random_7_$`, t1.id]
----------PhysicalProject[random() AS `$_random_8_$`, t1.id]
------------PhysicalOlapScan[t1]

-- !window_1 --
PhysicalResultSink
--PhysicalProject[sum(random(1) between 0.1 and 0.11)
            over(partition by random(2) between 0.2 and 0.22)]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT, orderKeys=(AND[(random(2) >= 0.2),(random(2) <= 0.22)] asc)]
--------PhysicalProject[AND[($_random_8_$ >= 0.2),($_random_8_$ <= 0.22)] AS `AND[(random(2) >= 0.2),(random(2) <= 0.22)]`, cast(AND[($_random_7_$ >= 0.1),($_random_7_$ <= 0.11)] as TINYINT) AS `cast(AND[(random(1) >= 0.1),(random(1) <= 0.11)] as TINYINT)`]
----------PhysicalOneRowRelation[random(1) AS `$_random_7_$`, random(2) AS `$_random_8_$`]

-- !window_2 --
PhysicalResultSink
--PhysicalProject[sum(random(1) between 0.1 and 0.11)
            over(partition by random(2) between 0.2 and 0.22 order by random(3) between 0.3 and 0.33)]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT, orderKeys=(AND[(random(2) >= 0.2),(random(2) <= 0.22)] asc)]
--------PhysicalProject[AND[($_random_10_$ >= 0.2),($_random_10_$ <= 0.22)] AS `AND[(random(2) >= 0.2),(random(2) <= 0.22)]`, cast(AND[($_random_9_$ >= 0.1),($_random_9_$ <= 0.11)] as TINYINT) AS `cast(AND[(random(1) >= 0.1),(random(1) <= 0.11)] as TINYINT)`]
----------PhysicalOneRowRelation[random(1) AS `$_random_9_$`, random(2) AS `$_random_10_$`]

-- !window_3 --
PhysicalResultSink
--PhysicalProject[sum(id + random(1) between 0.1 and 0.11)
             over(partition by id + random(2) between 0.2 and 0.22 order by id + random(3) between 0.3 and 0.33)]
----PhysicalWindow
------PhysicalQuickSort[LOCAL_SORT, orderKeys=(AND[((cast(id as DOUBLE) + random(2)) >= 0.2),((cast(id as DOUBLE) + random(2)) <= 0.22)] asc, AND[((cast(id as DOUBLE) + random(3)) >= 0.3),((cast(id as DOUBLE) + random(3)) <= 0.33)] asc null first)]
--------PhysicalProject[AND[((cast(id as DOUBLE) + $_random_10_$) >= 0.2),((cast(id as DOUBLE) + $_random_10_$) <= 0.22)] AS `AND[((cast(id as DOUBLE) + random(2)) >= 0.2),((cast(id as DOUBLE) + random(2)) <= 0.22)]`, AND[((cast(id as DOUBLE) + $_random_11_$) >= 0.3),((cast(id as DOUBLE) + $_random_11_$) <= 0.33)] AS `AND[((cast(id as DOUBLE) + random(3)) >= 0.3),((cast(id as DOUBLE) + random(3)) <= 0.33)]`, cast(AND[((cast(id as DOUBLE) + $_random_9_$) >= 0.1),((cast(id as DOUBLE) + $_random_9_$) <= 0.11)] as TINYINT) AS `cast(AND[((cast(id as DOUBLE) + random(1)) >= 0.1),((cast(id as DOUBLE) + random(1)) <= 0.11)] as TINYINT)`]
----------PhysicalProject[random(1) AS `$_random_9_$`, random(2) AS `$_random_10_$`, random(3) AS `$_random_11_$`, t1.id]
------------PhysicalOlapScan[t1]

-- !join_1 --
PhysicalResultSink
--PhysicalProject[t1.id, t1.msg, t2.id, t2.msg]
----NestedLoopJoin[INNER_JOIN](((cast(id as BIGINT) + cast(id as BIGINT)) + $_random_9_$) >= 10)(((cast(id as BIGINT) + cast(id as BIGINT)) + $_random_9_$) <= 20)
------PhysicalProject[cast(id as BIGINT) AS `cast(id as BIGINT)`, random(1, 100) AS `$_random_9_$`, t1.id, t1.msg]
--------filter(($_random_10_$ <= 10) and ($_random_10_$ >= 1))
----------PhysicalProject[random(1, 100) AS `$_random_10_$`, t1.id, t1.msg]
------------PhysicalOlapScan[t1]
------PhysicalProject[cast(id as BIGINT) AS `cast(id as BIGINT)`, t2.id, t2.msg]
--------filter(((cast(id as BIGINT) * $_random_11_$) <= 200) and ((cast(id as BIGINT) * $_random_11_$) >= 100))
----------PhysicalProject[random(1, 100) AS `$_random_11_$`, t2.id, t2.msg]
------------PhysicalOlapScan[t2]

