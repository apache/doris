-- This file is automatically generated. You should know what you did if you want to edit this
-- !basic_join_union --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !three_way_union --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
------PhysicalOlapScan[table_d]
----PhysicalOlapScan[table_a]

-- !union_with_projections --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !union_with_constants --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !union_with_loss_slots --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !different_join_conditions --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !multi_column_join --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id) and (name = name)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !left_joins --
PhysicalResultSink
--PhysicalUnion
----hashJoin[LEFT_OUTER_JOIN] hashCondition=((a.id = b.id)) otherCondition=()
------PhysicalOlapScan[table_a]
------PhysicalOlapScan[table_b]
----hashJoin[LEFT_OUTER_JOIN] hashCondition=((a.id = c.id)) otherCondition=()
------PhysicalOlapScan[table_a]
------PhysicalOlapScan[table_c]

-- !subquery_join --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------hashAgg[LOCAL]
--------PhysicalOlapScan[table_b]
------hashAgg[LOCAL]
--------PhysicalOlapScan[table_c]
----PhysicalOlapScan[table_a]

-- !complex_join_condition1 --
PhysicalResultSink
--PhysicalUnion
----hashJoin[INNER_JOIN] hashCondition=((expr_cast(id as BIGINT) = expr_(cast(id as BIGINT) - 1))) otherCondition=()
------PhysicalOlapScan[table_a]
------PhysicalOlapScan[table_b]
----hashJoin[INNER_JOIN] hashCondition=((expr_cast(id as BIGINT) = expr_(cast(id as BIGINT) - 1))) otherCondition=()
------PhysicalOlapScan[table_a]
------PhysicalOlapScan[table_c]

-- !complex_join_condition2 --
PhysicalResultSink
--PhysicalUnion
----hashJoin[INNER_JOIN] hashCondition=((expr_cast(id as BIGINT) = expr_(cast(id as BIGINT) - 1))) otherCondition=()
------PhysicalOlapScan[table_a]
------PhysicalOlapScan[table_b]
----hashJoin[INNER_JOIN] hashCondition=((expr_cast(id as DOUBLE) = expr_(cast(id as DOUBLE) - 1.0))) otherCondition=()
------PhysicalOlapScan[table_a]
------PhysicalOlapScan[table_c]

-- !union_filter1 --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------filter((b.id = 1))
--------PhysicalOlapScan[table_b]
------filter((c.id = 1))
--------PhysicalOlapScan[table_c]
----filter((a.id = 1))
------PhysicalOlapScan[table_a]

-- !union_filter2 --
PhysicalResultSink
--hashJoin[INNER_JOIN] hashCondition=((id = id)) otherCondition=()
----PhysicalUnion
------PhysicalOlapScan[table_b]
------PhysicalOlapScan[table_c]
----filter((cast(value as DOUBLE) = 1.0))
------PhysicalOlapScan[table_a]

