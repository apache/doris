-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = n2.n_nationkey)) otherCondition=()
--------------------PhysicalProject
----------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((supplier.s_suppkey = lineitem.l_suppkey)) otherCondition=()
------------------------PhysicalProject
--------------------------PhysicalOlapScan[supplier]
------------------------PhysicalProject
--------------------------hashJoin[INNER_JOIN shuffleBucket] hashCondition=((orders.o_custkey = customer.c_custkey)) otherCondition=()
----------------------------PhysicalProject
------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((lineitem.l_orderkey = orders.o_orderkey)) otherCondition=()
--------------------------------PhysicalProject
----------------------------------filter((orders.o_orderdate <= '1996-12-31') and (orders.o_orderdate >= '1995-01-01'))
------------------------------------PhysicalOlapScan[orders]
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((part.p_partkey = lineitem.l_partkey)) otherCondition=()
------------------------------------PhysicalProject
--------------------------------------PhysicalOlapScan[lineitem]
------------------------------------PhysicalProject
--------------------------------------filter((part.p_type = 'ECONOMY ANODIZED STEEL'))
----------------------------------------PhysicalOlapScan[part]
----------------------------PhysicalProject
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_nationkey = n1.n_nationkey)) otherCondition=()
--------------------------------PhysicalProject
----------------------------------PhysicalOlapScan[customer]
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((n1.n_regionkey = region.r_regionkey)) otherCondition=()
------------------------------------PhysicalProject
--------------------------------------PhysicalOlapScan[nation]
------------------------------------PhysicalProject
--------------------------------------filter((region.r_name = 'AMERICA'))
----------------------------------------PhysicalOlapScan[region]
--------------------PhysicalProject
----------------------PhysicalOlapScan[nation]

Hint log:
Used: leading(supplier { orders { lineitem broadcast part } { customer broadcast { n1 broadcast region } } } broadcast n2 ) 
UnUsed: 
SyntaxError:

