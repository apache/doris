-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[partsupp.ps_partkey, value]
----------NestedLoopJoin[INNER_JOIN](cast(value as DOUBLE) > cast((sum((ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0)))) * 0.000002) as DOUBLE))
------------PhysicalProject[cast(value as DOUBLE) AS `cast(value as DOUBLE)`, partsupp.ps_partkey, value]
--------------hashAgg[LOCAL]
----------------PhysicalProject[(ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0))) AS `(ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0)))`, partsupp.ps_partkey]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((partsupp.ps_suppkey = supplier.s_suppkey)) otherCondition=()
--------------------PhysicalProject[partsupp.ps_availqty, partsupp.ps_partkey, partsupp.ps_suppkey, partsupp.ps_supplycost]
----------------------PhysicalOlapScan[partsupp]
--------------------PhysicalProject[supplier.s_suppkey]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=()
------------------------PhysicalProject[supplier.s_nationkey, supplier.s_suppkey]
--------------------------PhysicalOlapScan[supplier]
------------------------PhysicalProject[nation.n_nationkey]
--------------------------filter((nation.n_name = 'GERMANY'))
----------------------------PhysicalOlapScan[nation]
------------PhysicalProject[cast((sum((ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0)))) * 0.000002) as DOUBLE) AS `cast((sum((ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0)))) * 0.000002) as DOUBLE)`]
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecGather]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[(ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0))) AS `(ps_supplycost * cast(ps_availqty as DECIMALV3(10, 0)))`]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((partsupp.ps_suppkey = supplier.s_suppkey)) otherCondition=()
------------------------PhysicalProject[partsupp.ps_availqty, partsupp.ps_suppkey, partsupp.ps_supplycost]
--------------------------PhysicalOlapScan[partsupp]
------------------------PhysicalProject[supplier.s_suppkey]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=()
----------------------------PhysicalProject[supplier.s_nationkey, supplier.s_suppkey]
------------------------------PhysicalOlapScan[supplier]
----------------------------PhysicalProject[nation.n_nationkey]
------------------------------filter((nation.n_name = 'GERMANY'))
--------------------------------PhysicalOlapScan[nation]

Hint log:
Used: leading(partsupp { supplier nation } ) leading(partsupp { supplier nation } )
UnUsed: 
SyntaxError:

