-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[nation.n_name, (l_extendedprice * (1.00 - cast(l_discount as DECIMALV3(16, 2)))) AS `(l_extendedprice * (1.00 - cast(l_discount as DECIMALV3(16, 2))))`]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((nation.n_regionkey = region.r_regionkey)) otherCondition=() build RFs:RF5 r_regionkey->[n_regionkey]
------------------PhysicalProject[lineitem.l_extendedprice, lineitem.l_discount, nation.n_name, nation.n_regionkey]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=() build RFs:RF4 n_nationkey->[c_nationkey,s_nationkey]
----------------------PhysicalProject[lineitem.l_extendedprice, lineitem.l_discount, supplier.s_nationkey]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_nationkey = supplier.s_nationkey) and (lineitem.l_suppkey = supplier.s_suppkey)) otherCondition=() build RFs:RF2 s_suppkey->[l_suppkey];RF3 s_nationkey->[c_nationkey]
--------------------------PhysicalProject[customer.c_nationkey, lineitem.l_suppkey, lineitem.l_extendedprice, lineitem.l_discount]
----------------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((lineitem.l_orderkey = orders.o_orderkey)) otherCondition=() build RFs:RF1 o_orderkey->[l_orderkey]
------------------------------PhysicalProject[lineitem.l_orderkey, lineitem.l_suppkey, lineitem.l_extendedprice, lineitem.l_discount]
--------------------------------PhysicalOlapScan[lineitem] apply RFs: RF1 RF2
------------------------------PhysicalProject[customer.c_nationkey, orders.o_orderkey]
--------------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((customer.c_custkey = orders.o_custkey)) otherCondition=() build RFs:RF0 c_custkey->[o_custkey]
----------------------------------PhysicalProject[orders.o_orderkey, orders.o_custkey]
------------------------------------filter((orders.o_orderdate < '1995-01-01') and (orders.o_orderdate >= '1994-01-01'))
--------------------------------------PhysicalOlapScan[orders] apply RFs: RF0
----------------------------------PhysicalProject[customer.c_custkey, customer.c_nationkey]
------------------------------------PhysicalOlapScan[customer] apply RFs: RF3 RF4
--------------------------PhysicalProject[supplier.s_suppkey, supplier.s_nationkey]
----------------------------PhysicalOlapScan[supplier] apply RFs: RF4
----------------------PhysicalProject[nation.n_nationkey, nation.n_name, nation.n_regionkey]
------------------------PhysicalOlapScan[nation] apply RFs: RF5
------------------PhysicalProject[region.r_regionkey]
--------------------filter((region.r_name = 'ASIA'))
----------------------PhysicalOlapScan[region]

