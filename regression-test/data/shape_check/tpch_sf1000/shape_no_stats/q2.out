-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[nation.n_name, part.p_mfgr, part.p_partkey, supplier.s_acctbal, supplier.s_address, supplier.s_comment, supplier.s_name, supplier.s_phone]
----------filter((partsupp.ps_supplycost = min(ps_supplycost) OVER(PARTITION BY p_partkey)))
------------PhysicalWindow
--------------PhysicalQuickSort[LOCAL_SORT]
----------------PhysicalProject[nation.n_name, part.p_mfgr, part.p_partkey, partsupp.ps_supplycost, supplier.s_acctbal, supplier.s_address, supplier.s_comment, supplier.s_name, supplier.s_phone]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((nation.n_regionkey = region.r_regionkey)) otherCondition=() build RFs:RF3 r_regionkey->[n_regionkey]
--------------------PhysicalProject[nation.n_name, nation.n_regionkey, part.p_mfgr, part.p_partkey, partsupp.ps_supplycost, supplier.s_acctbal, supplier.s_address, supplier.s_comment, supplier.s_name, supplier.s_phone]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=() build RFs:RF2 n_nationkey->[s_nationkey]
------------------------PhysicalProject[part.p_mfgr, part.p_partkey, partsupp.ps_supplycost, supplier.s_acctbal, supplier.s_address, supplier.s_comment, supplier.s_name, supplier.s_nationkey, supplier.s_phone]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_suppkey = partsupp.ps_suppkey)) otherCondition=() build RFs:RF1 s_suppkey->[ps_suppkey]
----------------------------PhysicalProject[part.p_mfgr, part.p_partkey, partsupp.ps_suppkey, partsupp.ps_supplycost]
------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((part.p_partkey = partsupp.ps_partkey)) otherCondition=() build RFs:RF0 p_partkey->[ps_partkey]
--------------------------------PhysicalProject[partsupp.ps_partkey, partsupp.ps_suppkey, partsupp.ps_supplycost]
----------------------------------PhysicalOlapScan[partsupp] apply RFs: RF0 RF1
--------------------------------PhysicalProject[part.p_mfgr, part.p_partkey]
----------------------------------filter((p_type like '%BRASS') and (part.p_size = 15))
------------------------------------PhysicalOlapScan[part]
----------------------------PhysicalOlapScan[supplier] apply RFs: RF2
------------------------PhysicalProject[nation.n_name, nation.n_nationkey, nation.n_regionkey]
--------------------------PhysicalOlapScan[nation] apply RFs: RF3
--------------------PhysicalProject[region.r_regionkey]
----------------------filter((region.r_name = 'EUROPE'))
------------------------PhysicalOlapScan[region]

