-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalProject
----PhysicalLazyMaterialize[materializedSlots:(supplier.s_acctbal,supplier.s_name,nation.n_name,part.p_partkey) lazySlots:(part.p_mfgr,supplier.s_address,supplier.s_comment,supplier.s_phone)]
------PhysicalTopN[MERGE_SORT]
--------PhysicalDistribute[DistributionSpecGather]
----------PhysicalTopN[LOCAL_SORT]
------------PhysicalProject
--------------filter((partsupp.ps_supplycost = min(ps_supplycost) OVER(PARTITION BY p_partkey)))
----------------PhysicalWindow
------------------PhysicalQuickSort[LOCAL_SORT]
--------------------PhysicalProject
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((nation.n_regionkey = region.r_regionkey)) otherCondition=() build RFs:RF3 r_regionkey->[n_regionkey]
------------------------PhysicalProject
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=() build RFs:RF2 n_nationkey->[s_nationkey]
----------------------------PhysicalProject
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_suppkey = partsupp.ps_suppkey)) otherCondition=() build RFs:RF1 s_suppkey->[ps_suppkey]
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((part.p_partkey = partsupp.ps_partkey)) otherCondition=() build RFs:RF0 p_partkey->[ps_partkey]
------------------------------------PhysicalProject
--------------------------------------PhysicalOlapScan[partsupp] apply RFs: RF0 RF1
------------------------------------PhysicalProject
--------------------------------------filter((p_type like '%BRASS') and (part.p_size = 15))
----------------------------------------PhysicalLazyMaterializeOlapScan[part lazySlots:(part.p_mfgr)]
--------------------------------PhysicalLazyMaterializeOlapScan[supplier lazySlots:(supplier.s_address,supplier.s_phone,supplier.s_comment)] apply RFs: RF2
----------------------------PhysicalProject
------------------------------PhysicalOlapScan[nation] apply RFs: RF3
------------------------PhysicalProject
--------------------------filter((region.r_name = 'EUROPE'))
----------------------------PhysicalOlapScan[region]

