-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[(cast((l_extendedprice * (1.00 - cast(l_discount as DECIMALV3(16, 2)))) as DECIMALV3(32, 4)) - cast((ps_supplycost * l_quantity) as DECIMALV3(32, 4))) AS `amount`, n_name AS `nation`, year(o_orderdate) AS `o_year`]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_suppkey = lineitem.l_suppkey)) otherCondition=() build RFs:RF5 s_suppkey->[l_suppkey,ps_suppkey]
------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_quantity, lineitem.l_suppkey, orders.o_orderdate, partsupp.ps_supplycost]
--------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((partsupp.ps_partkey = lineitem.l_partkey) and (partsupp.ps_suppkey = lineitem.l_suppkey)) otherCondition=() build RFs:RF3 ps_suppkey->[l_suppkey];RF4 ps_partkey->[l_partkey,p_partkey]
----------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_partkey, lineitem.l_quantity, lineitem.l_suppkey, orders.o_orderdate]
------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((part.p_partkey = lineitem.l_partkey)) otherCondition=() build RFs:RF2 p_partkey->[l_partkey]
--------------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_partkey, lineitem.l_quantity, lineitem.l_suppkey, orders.o_orderdate]
----------------------------hashJoin[INNER_JOIN colocated] hashCondition=((orders.o_orderkey = lineitem.l_orderkey)) otherCondition=() build RFs:RF1 o_orderkey->[l_orderkey]
------------------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_orderkey, lineitem.l_partkey, lineitem.l_quantity, lineitem.l_suppkey]
--------------------------------PhysicalOlapScan[lineitem] apply RFs: RF1 RF2 RF3 RF4 RF5
------------------------------PhysicalProject[orders.o_orderdate, orders.o_orderkey]
--------------------------------PhysicalOlapScan[orders]
--------------------------PhysicalProject[part.p_partkey]
----------------------------filter((p_name like '%green%'))
------------------------------PhysicalOlapScan[part] apply RFs: RF4
----------------------PhysicalProject[partsupp.ps_partkey, partsupp.ps_suppkey, partsupp.ps_supplycost]
------------------------PhysicalOlapScan[partsupp] apply RFs: RF5
------------------PhysicalProject[nation.n_name, supplier.s_suppkey]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=() build RFs:RF0 n_nationkey->[s_nationkey]
----------------------PhysicalProject[supplier.s_nationkey, supplier.s_suppkey]
------------------------PhysicalOlapScan[supplier] apply RFs: RF0
----------------------PhysicalProject[nation.n_name, nation.n_nationkey]
------------------------PhysicalOlapScan[nation]

