-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[(l_extendedprice * (1.00 - cast(l_discount as DECIMALV3(16, 2)))) AS `volume`, n_name AS `cust_nation`, n_name AS `supp_nation`, year(l_shipdate) AS `l_year`]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_custkey = orders.o_custkey)) otherCondition=(OR[AND[(n1.n_name = 'FRANCE'),(n2.n_name = 'GERMANY')],AND[(n1.n_name = 'GERMANY'),(n2.n_name = 'FRANCE')]]) build RFs:RF4 c_custkey->[o_custkey]
------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_shipdate, n1.n_name, orders.o_custkey]
--------------------hashJoin[INNER_JOIN colocated] hashCondition=((orders.o_orderkey = lineitem.l_orderkey)) otherCondition=() build RFs:RF3 l_orderkey->[o_orderkey]
----------------------PhysicalProject[orders.o_custkey, orders.o_orderkey]
------------------------PhysicalOlapScan[orders] apply RFs: RF3 RF4
----------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_orderkey, lineitem.l_shipdate, n1.n_name]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_suppkey = lineitem.l_suppkey)) otherCondition=() build RFs:RF2 s_suppkey->[l_suppkey]
--------------------------PhysicalProject[lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_orderkey, lineitem.l_shipdate, lineitem.l_suppkey]
----------------------------filter((lineitem.l_shipdate <= '1996-12-31') and (lineitem.l_shipdate >= '1995-01-01'))
------------------------------PhysicalOlapScan[lineitem] apply RFs: RF2
--------------------------PhysicalProject[n1.n_name, supplier.s_suppkey]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = n1.n_nationkey)) otherCondition=() build RFs:RF1 n_nationkey->[s_nationkey]
------------------------------PhysicalProject[supplier.s_nationkey, supplier.s_suppkey]
--------------------------------PhysicalOlapScan[supplier] apply RFs: RF1
------------------------------PhysicalProject[n1.n_name, n1.n_nationkey]
--------------------------------filter(n_name IN ('FRANCE', 'GERMANY'))
----------------------------------PhysicalOlapScan[nation]
------------------PhysicalProject[customer.c_custkey, n2.n_name]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_nationkey = n2.n_nationkey)) otherCondition=() build RFs:RF0 n_nationkey->[c_nationkey]
----------------------PhysicalProject[customer.c_custkey, customer.c_nationkey]
------------------------PhysicalOlapScan[customer] apply RFs: RF0
----------------------PhysicalProject[n2.n_name, n2.n_nationkey]
------------------------filter(n_name IN ('FRANCE', 'GERMANY'))
--------------------------PhysicalOlapScan[nation]

