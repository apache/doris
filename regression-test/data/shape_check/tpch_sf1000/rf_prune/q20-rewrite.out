-- This file is automatically generated. You should know what you did if you want to edit this
-- !select --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[supplier.s_name, supplier.s_address]
----------hashJoin[RIGHT_SEMI_JOIN shuffle] hashCondition=((supplier.s_suppkey = t3.ps_suppkey)) otherCondition=() build RFs:RF4 s_suppkey->[l_suppkey,ps_suppkey]
------------PhysicalProject[t3.ps_suppkey]
--------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((t2.l_partkey = t1.ps_partkey) and (t2.l_suppkey = t1.ps_suppkey)) otherCondition=((cast(ps_availqty as DECIMALV3(38, 3)) > t2.l_q)) build RFs:RF2 ps_partkey->[l_partkey];RF3 ps_suppkey->[l_suppkey]
----------------PhysicalProject[t2.l_partkey, t2.l_suppkey, (0.5 * sum(l_quantity)) AS `l_q`]
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecHash]
----------------------hashAgg[LOCAL]
------------------------PhysicalProject[lineitem.l_partkey, lineitem.l_suppkey, lineitem.l_quantity]
--------------------------filter((lineitem.l_shipdate < '1995-01-01') and (lineitem.l_shipdate >= '1994-01-01'))
----------------------------PhysicalOlapScan[lineitem] apply RFs: RF2 RF3 RF4
----------------hashJoin[LEFT_SEMI_JOIN colocated] hashCondition=((partsupp.ps_partkey = part.p_partkey)) otherCondition=() build RFs:RF1 p_partkey->[ps_partkey]
------------------PhysicalProject[partsupp.ps_partkey, partsupp.ps_suppkey, partsupp.ps_availqty]
--------------------PhysicalOlapScan[partsupp] apply RFs: RF1 RF4
------------------PhysicalProject[part.p_partkey]
--------------------filter((p_name like 'forest%'))
----------------------PhysicalOlapScan[part]
------------PhysicalProject[supplier.s_suppkey, supplier.s_name, supplier.s_address]
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((supplier.s_nationkey = nation.n_nationkey)) otherCondition=() build RFs:RF0 n_nationkey->[s_nationkey]
----------------PhysicalProject[supplier.s_suppkey, supplier.s_name, supplier.s_address, supplier.s_nationkey]
------------------PhysicalOlapScan[supplier] apply RFs: RF0
----------------PhysicalProject[nation.n_nationkey]
------------------filter((nation.n_name = 'CANADA'))
--------------------PhysicalOlapScan[nation]

