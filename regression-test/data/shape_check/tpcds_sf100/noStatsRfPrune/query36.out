-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_36 --
PhysicalResultSink
--PhysicalProject[gross_margin, item.i_category, item.i_class, lochierarchy, rank_within_parent]
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject[gross_margin, if(((GROUPING_PREFIX_i_category + GROUPING_PREFIX_i_class) = 0), i_category, NULL), item.i_category, item.i_class, lochierarchy, rank_within_parent AS `rank_within_parent`]
------------PhysicalWindow
--------------PhysicalQuickSort[LOCAL_SORT]
----------------PhysicalDistribute[DistributionSpecHash]
------------------PhysicalProject[(GROUPING_PREFIX_i_category + GROUPING_PREFIX_i_class) AS `(GROUPING_PREFIX_i_category + GROUPING_PREFIX_i_class)`, (GROUPING_PREFIX_i_category + GROUPING_PREFIX_i_class) AS `lochierarchy`, (cast(sum(ss_net_profit) as DECIMALV3(38, 8)) / sum(ss_ext_sales_price)) AS `gross_margin`, if(((GROUPING_PREFIX_i_category + GROUPING_PREFIX_i_class) = 0), i_category, NULL) AS `if(((GROUPING_PREFIX_i_category + GROUPING_PREFIX_i_class) = 0), i_category, NULL)`, if((GROUPING_PREFIX_i_class = 0), i_category, NULL) AS `if((GROUPING_PREFIX_i_class = 0), i_category, NULL)`, item.i_category, item.i_class]
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalRepeat
----------------------------PhysicalProject[item.i_category, item.i_class, store_sales.ss_ext_sales_price, store_sales.ss_net_profit]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store.s_store_sk = store_sales.ss_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ss_store_sk]
--------------------------------PhysicalProject[item.i_category, item.i_class, store_sales.ss_ext_sales_price, store_sales.ss_net_profit, store_sales.ss_store_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((d1.d_date_sk = store_sales.ss_sold_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ss_sold_date_sk]
------------------------------------PhysicalProject[item.i_category, item.i_class, store_sales.ss_ext_sales_price, store_sales.ss_net_profit, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((item.i_item_sk = store_sales.ss_item_sk)) otherCondition=()
----------------------------------------PhysicalProject[store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_net_profit, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF1 RF2
----------------------------------------PhysicalProject[item.i_category, item.i_class, item.i_item_sk]
------------------------------------------PhysicalOlapScan[item]
------------------------------------PhysicalProject[d1.d_date_sk]
--------------------------------------filter((d1.d_year = 2002))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------------------PhysicalProject[store.s_store_sk]
----------------------------------filter(s_state IN ('AL', 'GA', 'MI', 'MO', 'OH', 'SC', 'SD', 'TN'))
------------------------------------PhysicalOlapScan[store]

