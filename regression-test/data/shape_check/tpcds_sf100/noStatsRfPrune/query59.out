-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_59 --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----hashAgg[GLOBAL]
------PhysicalDistribute[DistributionSpecHash]
--------hashAgg[LOCAL]
----------PhysicalProject[date_dim.d_week_seq, if((d_day_name = 'Friday'), ss_sales_price, NULL) AS `if((d_day_name = 'Friday'), ss_sales_price, NULL)`, if((d_day_name = 'Monday'), ss_sales_price, NULL) AS `if((d_day_name = 'Monday'), ss_sales_price, NULL)`, if((d_day_name = 'Saturday'), ss_sales_price, NULL) AS `if((d_day_name = 'Saturday'), ss_sales_price, NULL)`, if((d_day_name = 'Sunday'), ss_sales_price, NULL) AS `if((d_day_name = 'Sunday'), ss_sales_price, NULL)`, if((d_day_name = 'Thursday'), ss_sales_price, NULL) AS `if((d_day_name = 'Thursday'), ss_sales_price, NULL)`, if((d_day_name = 'Tuesday'), ss_sales_price, NULL) AS `if((d_day_name = 'Tuesday'), ss_sales_price, NULL)`, if((d_day_name = 'Wednesday'), ss_sales_price, NULL) AS `if((d_day_name = 'Wednesday'), ss_sales_price, NULL)`, store_sales.ss_store_sk]
------------hashJoin[INNER_JOIN broadcast] hashCondition=((date_dim.d_date_sk = store_sales.ss_sold_date_sk)) otherCondition=()
--------------PhysicalProject[store_sales.ss_sales_price, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
----------------PhysicalOlapScan[store_sales]
--------------PhysicalProject[date_dim.d_date_sk, date_dim.d_day_name, date_dim.d_week_seq]
----------------PhysicalOlapScan[date_dim]
--PhysicalResultSink
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject[(cast(fri_sales1 as DECIMALV3(38, 8)) / fri_sales2) AS `fri_sales1/fri_sales2`, (cast(mon_sales1 as DECIMALV3(38, 8)) / mon_sales2) AS `mon_sales1/mon_sales2`, (cast(sat_sales1 as DECIMALV3(38, 8)) / sat_sales2) AS `sat_sales1/sat_sales2`, (cast(sun_sales1 as DECIMALV3(38, 8)) / sun_sales2) AS `sun_sales1/sun_sales2`, (cast(thu_sales1 as DECIMALV3(38, 8)) / thu_sales2) AS `thu_sales1/thu_sales2`, (cast(tue_sales1 as DECIMALV3(38, 8)) / tue_sales2) AS `tue_sales1/tue_sales2`, (cast(wed_sales1 as DECIMALV3(38, 8)) / wed_sales2) AS `wed_sales1/wed_sales2`, y.d_week_seq1, y.s_store_id1, y.s_store_name1]
------------hashJoin[INNER_JOIN broadcast] hashCondition=((wss.ss_store_sk = store.s_store_sk) and (y.s_store_id1 = x.s_store_id2)) otherCondition=()
--------------PhysicalProject[d_week_seq1, fri_sales1, fri_sales2, mon_sales1, mon_sales2, s_store_id2, sat_sales1, sat_sales2, sun_sales1, sun_sales2, thu_sales1, thu_sales2, tue_sales1, tue_sales2, wed_sales1, wed_sales2, wss.ss_store_sk]
----------------hashJoin[INNER_JOIN shuffle] hashCondition=((expr_cast(d_week_seq1 as BIGINT) = expr_(d_week_seq2 - 52))) otherCondition=()
------------------PhysicalProject[(d_week_seq2 - 52) AS `expr_(d_week_seq2 - 52)`, fri_sales2, mon_sales2, s_store_id2, sat_sales2, sun_sales2, thu_sales2, tue_sales2, wed_sales2]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((d.d_week_seq = d_week_seq2)) otherCondition=() build RFs:RF3 d_week_seq->[d_week_seq]
----------------------PhysicalProject[d_week_seq2, fri_sales2, mon_sales2, s_store_id2, sat_sales2, sun_sales2, thu_sales2, tue_sales2, wed_sales2]
------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((wss.ss_store_sk = store.s_store_sk)) otherCondition=()
--------------------------PhysicalProject[d_week_seq AS `d_week_seq2`, fri_sales AS `fri_sales2`, mon_sales AS `mon_sales2`, sat_sales AS `sat_sales2`, sun_sales AS `sun_sales2`, thu_sales AS `thu_sales2`, tue_sales AS `tue_sales2`, wed_sales AS `wed_sales2`, wss.ss_store_sk]
----------------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF3
--------------------------PhysicalProject[s_store_id AS `s_store_id2`, store.s_store_sk]
----------------------------PhysicalOlapScan[store]
----------------------PhysicalProject[d.d_week_seq]
------------------------filter((d.d_month_seq <= 1219) and (d.d_month_seq >= 1208))
--------------------------PhysicalOlapScan[date_dim]
------------------PhysicalProject[cast(d_week_seq1 as BIGINT) AS `expr_cast(d_week_seq1 as BIGINT)`, d_week_seq1, fri_sales1, mon_sales1, sat_sales1, sun_sales1, thu_sales1, tue_sales1, wed_sales1, wss.ss_store_sk]
--------------------hashJoin[INNER_JOIN shuffle] hashCondition=((d.d_week_seq = d_week_seq1)) otherCondition=() build RFs:RF1 d_week_seq->[d_week_seq]
----------------------PhysicalProject[d_week_seq AS `d_week_seq1`, fri_sales AS `fri_sales1`, mon_sales AS `mon_sales1`, sat_sales AS `sat_sales1`, sun_sales AS `sun_sales1`, thu_sales AS `thu_sales1`, tue_sales AS `tue_sales1`, wed_sales AS `wed_sales1`, wss.ss_store_sk]
------------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF1
----------------------PhysicalProject[d.d_week_seq]
------------------------filter((d.d_month_seq <= 1207) and (d.d_month_seq >= 1196))
--------------------------PhysicalOlapScan[date_dim]
--------------PhysicalProject[s_store_id AS `s_store_id1`, s_store_name AS `s_store_name1`, store.s_store_sk]
----------------PhysicalOlapScan[store]

