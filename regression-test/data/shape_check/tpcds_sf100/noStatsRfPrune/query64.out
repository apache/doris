-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_64 --
PhysicalCteAnchor ( cteId=CTEId#1 )
--PhysicalCteProducer ( cteId=CTEId#1 )
----PhysicalProject[ca_city AS `b_city`, ca_city AS `c_city`, ca_street_name AS `b_street_name`, ca_street_name AS `c_street_name`, ca_street_number AS `b_street_number`, ca_street_number AS `c_street_number`, ca_zip AS `b_zip`, ca_zip AS `c_zip`, cross_sales.cnt, cross_sales.s1, cross_sales.s2, cross_sales.s3, d_year AS `syear`, i_item_sk AS `item_sk`, i_product_name AS `product_name`, s_store_name AS `store_name`, s_zip AS `store_zip`]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[ad1.ca_city, ad1.ca_street_name, ad1.ca_street_number, ad1.ca_zip, ad2.ca_city, ad2.ca_street_name, ad2.ca_street_number, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year, item.i_item_sk, item.i_product_name, store.s_store_name, store.s_zip, store_sales.ss_coupon_amt, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF19 i_item_sk->[cr_item_sk,cs_item_sk,sr_item_sk,ss_item_sk]
----------------PhysicalProject[ad1.ca_city, ad1.ca_street_name, ad1.ca_street_number, ad1.ca_zip, ad2.ca_city, ad2.ca_street_name, ad2.ca_street_number, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year, store.s_store_name, store.s_zip, store_sales.ss_coupon_amt, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((hd2.hd_income_band_sk = ib2.ib_income_band_sk)) otherCondition=()
--------------------PhysicalProject[ad1.ca_city, ad1.ca_street_name, ad1.ca_street_number, ad1.ca_zip, ad2.ca_city, ad2.ca_street_name, ad2.ca_street_number, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year, hd2.hd_income_band_sk, store.s_store_name, store.s_zip, store_sales.ss_coupon_amt, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((hd1.hd_income_band_sk = ib1.ib_income_band_sk)) otherCondition=()
------------------------PhysicalProject[ad1.ca_city, ad1.ca_street_name, ad1.ca_street_number, ad1.ca_zip, ad2.ca_city, ad2.ca_street_name, ad2.ca_street_number, ad2.ca_zip, d1.d_year, d2.d_year, d3.d_year, hd1.hd_income_band_sk, hd2.hd_income_band_sk, store.s_store_name, store.s_zip, store_sales.ss_coupon_amt, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_current_addr_sk = ad2.ca_address_sk)) otherCondition=()
----------------------------PhysicalProject[ad1.ca_city, ad1.ca_street_name, ad1.ca_street_number, ad1.ca_zip, customer.c_current_addr_sk, d1.d_year, d2.d_year, d3.d_year, hd1.hd_income_band_sk, hd2.hd_income_band_sk, store.s_store_name, store.s_zip, store_sales.ss_coupon_amt, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_addr_sk = ad1.ca_address_sk)) otherCondition=()
--------------------------------PhysicalProject[customer.c_current_addr_sk, d1.d_year, d2.d_year, d3.d_year, hd1.hd_income_band_sk, hd2.hd_income_band_sk, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_current_hdemo_sk = hd2.hd_demo_sk)) otherCondition=()
------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_hdemo_sk, d1.d_year, d2.d_year, d3.d_year, hd1.hd_income_band_sk, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = hd1.hd_demo_sk)) otherCondition=()
----------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_hdemo_sk, d1.d_year, d2.d_year, d3.d_year, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_wholesale_cost]
------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_promo_sk = promotion.p_promo_sk)) otherCondition=()
--------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_hdemo_sk, d1.d_year, d2.d_year, d3.d_year, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_wholesale_cost]
----------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_current_cdemo_sk = cd2.cd_demo_sk)) otherCondition=(( not (cd_marital_status = cd_marital_status)))
------------------------------------------------PhysicalProject[cd1.cd_marital_status, customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, d1.d_year, d2.d_year, d3.d_year, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_wholesale_cost]
--------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_cdemo_sk = cd1.cd_demo_sk)) otherCondition=()
----------------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, d1.d_year, d2.d_year, d3.d_year, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_wholesale_cost]
------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_first_shipto_date_sk = d3.d_date_sk)) otherCondition=()
--------------------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_first_shipto_date_sk, d1.d_year, d2.d_year, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_wholesale_cost]
----------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_first_sales_date_sk = d2.d_date_sk)) otherCondition=()
------------------------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_first_sales_date_sk, customer.c_first_shipto_date_sk, d1.d_year, store.s_store_name, store.s_zip, store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_wholesale_cost]
--------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=()
----------------------------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_first_sales_date_sk, customer.c_first_shipto_date_sk, d1.d_year, store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_store_sk, store_sales.ss_wholesale_cost]
------------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = d1.d_date_sk)) otherCondition=() build RFs:RF6 d_date_sk->[ss_sold_date_sk]
--------------------------------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_first_sales_date_sk, customer.c_first_shipto_date_sk, store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk, store_sales.ss_wholesale_cost]
----------------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_customer_sk = customer.c_customer_sk)) otherCondition=()
------------------------------------------------------------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk, store_sales.ss_wholesale_cost]
--------------------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = cs_ui.cs_item_sk)) otherCondition=() build RFs:RF4 cs_item_sk->[sr_item_sk,ss_item_sk]
----------------------------------------------------------------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk, store_sales.ss_wholesale_cost]
------------------------------------------------------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((store_sales.ss_item_sk = store_returns.sr_item_sk) and (store_sales.ss_ticket_number = store_returns.sr_ticket_number)) otherCondition=()
--------------------------------------------------------------------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_cdemo_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_item_sk, store_sales.ss_list_price, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk, store_sales.ss_ticket_number, store_sales.ss_wholesale_cost]
----------------------------------------------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF4 RF6 RF19
--------------------------------------------------------------------------------PhysicalProject[store_returns.sr_item_sk, store_returns.sr_ticket_number]
----------------------------------------------------------------------------------PhysicalOlapScan[store_returns] apply RFs: RF4 RF19
----------------------------------------------------------------------------PhysicalProject[cs_item_sk AS `cs_item_sk`]
------------------------------------------------------------------------------filter((sale > (2 * refund)))
--------------------------------------------------------------------------------hashAgg[GLOBAL]
----------------------------------------------------------------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------------------------------------------------------------hashAgg[LOCAL]
--------------------------------------------------------------------------------------PhysicalProject[(cast((cast(cr_refunded_cash as DECIMALV3(8, 2)) + cast(cr_reversed_charge as DECIMALV3(8, 2))) as DECIMALV3(9, 2)) + cast(cr_store_credit as DECIMALV3(9, 2))) AS `(cast((cast(cr_refunded_cash as DECIMALV3(8, 2)) + cast(cr_reversed_charge as DECIMALV3(8, 2))) as DECIMALV3(9, 2)) + cast(cr_store_credit as DECIMALV3(9, 2)))`, catalog_sales.cs_ext_list_price, catalog_sales.cs_item_sk]
----------------------------------------------------------------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((catalog_sales.cs_item_sk = catalog_returns.cr_item_sk) and (catalog_sales.cs_order_number = catalog_returns.cr_order_number)) otherCondition=()
------------------------------------------------------------------------------------------PhysicalProject[catalog_sales.cs_ext_list_price, catalog_sales.cs_item_sk, catalog_sales.cs_order_number]
--------------------------------------------------------------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF19
------------------------------------------------------------------------------------------PhysicalProject[catalog_returns.cr_item_sk, catalog_returns.cr_order_number, catalog_returns.cr_refunded_cash, catalog_returns.cr_reversed_charge, catalog_returns.cr_store_credit]
--------------------------------------------------------------------------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF19
------------------------------------------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_customer_sk, customer.c_first_sales_date_sk, customer.c_first_shipto_date_sk]
--------------------------------------------------------------------------PhysicalOlapScan[customer]
--------------------------------------------------------------------PhysicalProject[d1.d_date_sk, d1.d_year]
----------------------------------------------------------------------filter(d_year IN (2001, 2002))
------------------------------------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------------------------------------PhysicalProject[store.s_store_name, store.s_store_sk, store.s_zip]
------------------------------------------------------------------PhysicalOlapScan[store]
------------------------------------------------------------PhysicalProject[d2.d_date_sk, d2.d_year]
--------------------------------------------------------------PhysicalOlapScan[date_dim]
--------------------------------------------------------PhysicalProject[d3.d_date_sk, d3.d_year]
----------------------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------------------------PhysicalProject[cd1.cd_demo_sk, cd1.cd_marital_status]
------------------------------------------------------PhysicalOlapScan[customer_demographics]
------------------------------------------------PhysicalProject[cd2.cd_demo_sk, cd2.cd_marital_status]
--------------------------------------------------PhysicalOlapScan[customer_demographics]
--------------------------------------------PhysicalProject[promotion.p_promo_sk]
----------------------------------------------PhysicalOlapScan[promotion]
----------------------------------------PhysicalProject[hd1.hd_demo_sk, hd1.hd_income_band_sk]
------------------------------------------PhysicalOlapScan[household_demographics]
------------------------------------PhysicalProject[hd2.hd_demo_sk, hd2.hd_income_band_sk]
--------------------------------------PhysicalOlapScan[household_demographics]
--------------------------------PhysicalProject[ad1.ca_address_sk, ad1.ca_city, ad1.ca_street_name, ad1.ca_street_number, ad1.ca_zip]
----------------------------------PhysicalOlapScan[customer_address]
----------------------------PhysicalProject[ad2.ca_address_sk, ad2.ca_city, ad2.ca_street_name, ad2.ca_street_number, ad2.ca_zip]
------------------------------PhysicalOlapScan[customer_address]
------------------------PhysicalProject[ib1.ib_income_band_sk]
--------------------------PhysicalOlapScan[income_band]
--------------------PhysicalProject[ib2.ib_income_band_sk]
----------------------PhysicalOlapScan[income_band]
----------------PhysicalProject[item.i_item_sk, item.i_product_name]
------------------filter((item.i_current_price <= 33.00) and (item.i_current_price >= 24.00) and i_color IN ('blanched', 'brown', 'burlywood', 'chocolate', 'drab', 'medium'))
--------------------PhysicalOlapScan[item]
--PhysicalResultSink
----PhysicalQuickSort[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalQuickSort[LOCAL_SORT]
----------PhysicalProject[cs1.b_city, cs1.b_street_name, cs1.b_street_number, cs1.b_zip, cs1.c_city, cs1.c_street_name, cs1.c_street_number, cs1.c_zip, cs1.cnt, cs1.product_name, cs1.store_name, cs1.store_zip, cs1.syear, cs2.cnt, cs2.syear, s11, s12, s21, s22, s31, s32]
------------hashJoin[INNER_JOIN shuffle] hashCondition=((cs1.item_sk = cs2.item_sk) and (cs1.store_name = cs2.store_name) and (cs1.store_zip = cs2.store_zip)) otherCondition=((cs2.cnt <= cs1.cnt)) build RFs:RF20 item_sk->[item_sk];RF21 store_name->[store_name];RF22 store_zip->[store_zip]
--------------PhysicalProject[cs1.b_city, cs1.b_street_name, cs1.b_street_number, cs1.b_zip, cs1.c_city, cs1.c_street_name, cs1.c_street_number, cs1.c_zip, cs1.cnt, cs1.item_sk, cs1.product_name, cs1.store_name, cs1.store_zip, cs1.syear, s1 AS `s11`, s2 AS `s21`, s3 AS `s31`]
----------------filter((cs1.syear = 2001))
------------------PhysicalCteConsumer ( cteId=CTEId#1 ) apply RFs: RF20 RF21 RF22
--------------PhysicalProject[cs2.cnt, cs2.item_sk, cs2.store_name, cs2.store_zip, cs2.syear, s1 AS `s12`, s2 AS `s22`, s3 AS `s32`]
----------------filter((cs2.syear = 2002))
------------------PhysicalCteConsumer ( cteId=CTEId#1 )

