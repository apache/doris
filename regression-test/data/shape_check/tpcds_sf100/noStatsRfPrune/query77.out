-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_77 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[profit, returns, sales, x.channel, x.id]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalRepeat
------------------PhysicalUnion
--------------------PhysicalProject['store channel' AS `channel`, (profit - coalesce(profit_loss, 0.00)) AS `profit`, coalesce(returns, 0.00) AS `returns`, s_store_sk AS `id`, ss.sales]
----------------------hashJoin[LEFT_OUTER_JOIN colocated] hashCondition=((ss.s_store_sk = sr.s_store_sk)) otherCondition=()
------------------------PhysicalProject[profit AS `profit`, s_store_sk AS `s_store_sk`, sales AS `sales`]
--------------------------hashAgg[GLOBAL]
----------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------hashAgg[LOCAL]
--------------------------------PhysicalProject[store.s_store_sk, store_sales.ss_ext_sales_price, store_sales.ss_net_profit]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=()
------------------------------------PhysicalProject[store_sales.ss_ext_sales_price, store_sales.ss_net_profit, store_sales.ss_store_sk]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
----------------------------------------PhysicalProject[store_sales.ss_ext_sales_price, store_sales.ss_net_profit, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2
----------------------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------------------filter((date_dim.d_date <= '1998-09-04') and (date_dim.d_date >= '1998-08-05'))
--------------------------------------------PhysicalOlapScan[date_dim]
------------------------------------PhysicalProject[store.s_store_sk]
--------------------------------------PhysicalOlapScan[store]
------------------------PhysicalProject[profit_loss AS `profit_loss`, returns AS `returns`, s_store_sk AS `s_store_sk`]
--------------------------hashAgg[GLOBAL]
----------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------hashAgg[LOCAL]
--------------------------------PhysicalProject[store.s_store_sk, store_returns.sr_net_loss, store_returns.sr_return_amt]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_returns.sr_store_sk = store.s_store_sk)) otherCondition=()
------------------------------------PhysicalProject[store_returns.sr_net_loss, store_returns.sr_return_amt, store_returns.sr_store_sk]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_returns.sr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[sr_returned_date_sk]
----------------------------------------PhysicalProject[store_returns.sr_net_loss, store_returns.sr_return_amt, store_returns.sr_returned_date_sk, store_returns.sr_store_sk]
------------------------------------------PhysicalOlapScan[store_returns] apply RFs: RF0
----------------------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------------------filter((date_dim.d_date <= '1998-09-04') and (date_dim.d_date >= '1998-08-05'))
--------------------------------------------PhysicalOlapScan[date_dim]
------------------------------------PhysicalProject[store.s_store_sk]
--------------------------------------PhysicalOlapScan[store]
--------------------PhysicalProject['catalog channel' AS `channel`, (profit - profit_loss) AS `profit`, cr.returns, cs.sales, cs_call_center_sk AS `id`]
----------------------NestedLoopJoin[CROSS_JOIN]
------------------------PhysicalProject[cs_call_center_sk AS `cs_call_center_sk`, profit AS `profit`, sales AS `sales`]
--------------------------hashAgg[GLOBAL]
----------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------hashAgg[LOCAL]
--------------------------------PhysicalProject[catalog_sales.cs_call_center_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF5 d_date_sk->[cs_sold_date_sk]
------------------------------------PhysicalProject[catalog_sales.cs_call_center_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit, catalog_sales.cs_sold_date_sk]
--------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF5
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_date <= '1998-09-04') and (date_dim.d_date >= '1998-08-05'))
----------------------------------------PhysicalOlapScan[date_dim]
------------------------PhysicalProject[profit_loss AS `profit_loss`, returns AS `returns`]
--------------------------hashAgg[GLOBAL]
----------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------hashAgg[LOCAL]
--------------------------------PhysicalProject[catalog_returns.cr_call_center_sk, catalog_returns.cr_net_loss, catalog_returns.cr_return_amount]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_returns.cr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF4 d_date_sk->[cr_returned_date_sk]
------------------------------------PhysicalProject[catalog_returns.cr_call_center_sk, catalog_returns.cr_net_loss, catalog_returns.cr_return_amount, catalog_returns.cr_returned_date_sk]
--------------------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF4
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_date <= '1998-09-04') and (date_dim.d_date >= '1998-08-05'))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------PhysicalProject['web channel' AS `channel`, (profit - coalesce(profit_loss, 0.00)) AS `profit`, coalesce(returns, 0.00) AS `returns`, wp_web_page_sk AS `id`, ws.sales]
----------------------hashJoin[LEFT_OUTER_JOIN colocated] hashCondition=((ws.wp_web_page_sk = wr.wp_web_page_sk)) otherCondition=()
------------------------PhysicalProject[profit AS `profit`, sales AS `sales`, wp_web_page_sk AS `wp_web_page_sk`]
--------------------------hashAgg[GLOBAL]
----------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------hashAgg[LOCAL]
--------------------------------PhysicalProject[web_page.wp_web_page_sk, web_sales.ws_ext_sales_price, web_sales.ws_net_profit]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_web_page_sk = web_page.wp_web_page_sk)) otherCondition=()
------------------------------------PhysicalProject[web_sales.ws_ext_sales_price, web_sales.ws_net_profit, web_sales.ws_web_page_sk]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF8 d_date_sk->[ws_sold_date_sk]
----------------------------------------PhysicalProject[web_sales.ws_ext_sales_price, web_sales.ws_net_profit, web_sales.ws_sold_date_sk, web_sales.ws_web_page_sk]
------------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF8
----------------------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------------------filter((date_dim.d_date <= '1998-09-04') and (date_dim.d_date >= '1998-08-05'))
--------------------------------------------PhysicalOlapScan[date_dim]
------------------------------------PhysicalProject[web_page.wp_web_page_sk]
--------------------------------------PhysicalOlapScan[web_page]
------------------------PhysicalProject[profit_loss AS `profit_loss`, returns AS `returns`, wp_web_page_sk AS `wp_web_page_sk`]
--------------------------hashAgg[GLOBAL]
----------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------hashAgg[LOCAL]
--------------------------------PhysicalProject[web_page.wp_web_page_sk, web_returns.wr_net_loss, web_returns.wr_return_amt]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_returns.wr_web_page_sk = web_page.wp_web_page_sk)) otherCondition=()
------------------------------------PhysicalProject[web_returns.wr_net_loss, web_returns.wr_return_amt, web_returns.wr_web_page_sk]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_returns.wr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF6 d_date_sk->[wr_returned_date_sk]
----------------------------------------PhysicalProject[web_returns.wr_net_loss, web_returns.wr_return_amt, web_returns.wr_returned_date_sk, web_returns.wr_web_page_sk]
------------------------------------------PhysicalOlapScan[web_returns] apply RFs: RF6
----------------------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------------------filter((date_dim.d_date <= '1998-09-04') and (date_dim.d_date >= '1998-08-05'))
--------------------------------------------PhysicalOlapScan[date_dim]
------------------------------------PhysicalProject[web_page.wp_web_page_sk]
--------------------------------------PhysicalOlapScan[web_page]

