-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_61 --
PhysicalResultSink
--PhysicalTopN[GATHER_SORT]
----PhysicalProject[((cast(cast(promotions as DECIMALV3(15, 4)) as DECIMALV3(23, 12)) / cast(total as DECIMALV3(15, 4))) * 100) AS `((cast(cast(promotions as DECIMALV3(15, 4)) as DECIMALV3(23, 12)) / cast(total as DECIMALV3(15, 4))) * 100)`, all_sales.total, promotional_sales.promotions]
------NestedLoopJoin[CROSS_JOIN]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecGather]
------------hashAgg[LOCAL]
--------------PhysicalProject[store_sales.ss_ext_sales_price]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF10 i_item_sk->[ss_item_sk]
------------------PhysicalProject[store_sales.ss_ext_sales_price, store_sales.ss_item_sk]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_address.ca_address_sk = customer.c_current_addr_sk)) otherCondition=() build RFs:RF9 ca_address_sk->[c_current_addr_sk]
----------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF8 d_date_sk->[ss_sold_date_sk]
--------------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_sold_date_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_promo_sk = promotion.p_promo_sk)) otherCondition=() build RFs:RF7 p_promo_sk->[ss_promo_sk]
------------------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF6 s_store_sk->[ss_store_sk]
----------------------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF5 c_customer_sk->[ss_customer_sk]
--------------------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_promo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
----------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF5 RF6 RF7 RF8 RF10
--------------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_customer_sk]
----------------------------------------PhysicalOlapScan[customer] apply RFs: RF9
----------------------------------PhysicalProject[store.s_store_sk]
------------------------------------filter((store.s_gmt_offset = -7.00))
--------------------------------------PhysicalOlapScan[store]
------------------------------PhysicalProject[promotion.p_promo_sk]
--------------------------------filter(OR[(promotion.p_channel_dmail = 'Y'),(promotion.p_channel_email = 'Y'),(promotion.p_channel_tv = 'Y')])
----------------------------------PhysicalOlapScan[promotion]
--------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------filter((date_dim.d_moy = 11) and (date_dim.d_year = 1999))
------------------------------PhysicalOlapScan[date_dim]
----------------------PhysicalProject[customer_address.ca_address_sk]
------------------------filter((customer_address.ca_gmt_offset = -7.00))
--------------------------PhysicalOlapScan[customer_address]
------------------PhysicalProject[item.i_item_sk]
--------------------filter((item.i_category = 'Jewelry'))
----------------------PhysicalOlapScan[item]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecGather]
------------hashAgg[LOCAL]
--------------PhysicalProject[store_sales.ss_ext_sales_price]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF4 i_item_sk->[ss_item_sk]
------------------PhysicalProject[store_sales.ss_ext_sales_price, store_sales.ss_item_sk]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_address.ca_address_sk = customer.c_current_addr_sk)) otherCondition=() build RFs:RF3 ca_address_sk->[c_current_addr_sk]
----------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
--------------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_sold_date_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF1 s_store_sk->[ss_store_sk]
------------------------------PhysicalProject[customer.c_current_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF0 c_customer_sk->[ss_customer_sk]
----------------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_ext_sales_price, store_sales.ss_item_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1 RF2 RF4
----------------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_customer_sk]
------------------------------------PhysicalOlapScan[customer] apply RFs: RF3
------------------------------PhysicalProject[store.s_store_sk]
--------------------------------filter((store.s_gmt_offset = -7.00))
----------------------------------PhysicalOlapScan[store]
--------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------filter((date_dim.d_moy = 11) and (date_dim.d_year = 1999))
------------------------------PhysicalOlapScan[date_dim]
----------------------PhysicalProject[customer_address.ca_address_sk]
------------------------filter((customer_address.ca_gmt_offset = -7.00))
--------------------------PhysicalOlapScan[customer_address]
------------------PhysicalProject[item.i_item_sk]
--------------------filter((item.i_category = 'Jewelry'))
----------------------PhysicalOlapScan[item]

