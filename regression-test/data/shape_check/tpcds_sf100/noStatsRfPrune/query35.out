-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_35 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[ca.ca_state, cnt1, cnt1 AS `cnt2`, cnt1 AS `cnt3`, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_gender, customer_demographics.cd_marital_status, max(cd_dep_college_count), max(cd_dep_college_count) AS `max(cd_dep_college_count)`, max(cd_dep_count), max(cd_dep_count) AS `max(cd_dep_count)`, max(cd_dep_employed_count), max(cd_dep_employed_count) AS `max(cd_dep_employed_count)`, sum(cd_dep_college_count), sum(cd_dep_count), sum(cd_dep_employed_count)]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[ca.ca_state, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_gender, customer_demographics.cd_marital_status]
------------------filter(OR[ifnull($c$1, FALSE),ifnull($c$2, FALSE)])
--------------------hashJoin[LEFT_SEMI_JOIN shuffle] hashCondition=((c.c_customer_sk = catalog_sales.cs_ship_customer_sk)) otherCondition=()
----------------------PhysicalProject[$c$1, c.c_customer_sk, ca.ca_state, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_gender, customer_demographics.cd_marital_status]
------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((customer_demographics.cd_demo_sk = c.c_current_cdemo_sk)) otherCondition=()
--------------------------PhysicalProject[$c$1, c.c_current_cdemo_sk, c.c_customer_sk, ca.ca_state]
----------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((c.c_current_addr_sk = ca.ca_address_sk)) otherCondition=()
------------------------------hashJoin[LEFT_SEMI_JOIN bucketShuffle] hashCondition=((c.c_customer_sk = web_sales.ws_bill_customer_sk)) otherCondition=()
--------------------------------hashJoin[RIGHT_SEMI_JOIN shuffle] hashCondition=((c.c_customer_sk = store_sales.ss_customer_sk)) otherCondition=()
----------------------------------PhysicalProject[store_sales.ss_customer_sk]
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
--------------------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_sold_date_sk]
----------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2
--------------------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------------------filter((date_dim.d_qoy < 4) and (date_dim.d_year = 2001))
------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------PhysicalProject[c.c_current_addr_sk, c.c_current_cdemo_sk, c.c_customer_sk]
------------------------------------PhysicalOlapScan[customer]
--------------------------------PhysicalProject[web_sales.ws_bill_customer_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ws_sold_date_sk]
------------------------------------PhysicalProject[web_sales.ws_bill_customer_sk, web_sales.ws_sold_date_sk]
--------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF1
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_qoy < 4) and (date_dim.d_year = 2001))
----------------------------------------PhysicalOlapScan[date_dim]
------------------------------PhysicalProject[ca.ca_address_sk, ca.ca_state]
--------------------------------PhysicalOlapScan[customer_address]
--------------------------PhysicalProject[customer_demographics.cd_demo_sk, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_gender, customer_demographics.cd_marital_status]
----------------------------PhysicalOlapScan[customer_demographics]
----------------------PhysicalProject[catalog_sales.cs_ship_customer_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject[catalog_sales.cs_ship_customer_sk, catalog_sales.cs_sold_date_sk]
----------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0
--------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------filter((date_dim.d_qoy < 4) and (date_dim.d_year = 2001))
------------------------------PhysicalOlapScan[date_dim]

