-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_30 --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----PhysicalProject
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_returns.wr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[wr_returned_date_sk]
----------------PhysicalProject
------------------hashJoin[INNER_JOIN shuffle] hashCondition=((web_returns.wr_returning_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF0 ca_address_sk->[wr_returning_addr_sk]
--------------------PhysicalProject
----------------------PhysicalOlapScan[web_returns] apply RFs: RF0 RF1
--------------------PhysicalProject
----------------------PhysicalOlapScan[customer_address]
----------------PhysicalProject
------------------filter((date_dim.d_year = 2002))
--------------------PhysicalOlapScan[date_dim]
--PhysicalResultSink
----PhysicalProject
------PhysicalLazyMaterialize[materializedSlots:(customer.c_customer_id,ctr1.ctr_total_return) lazySlots:(customer.c_birth_country,customer.c_birth_day,customer.c_birth_month,customer.c_birth_year,customer.c_email_address,customer.c_first_name,customer.c_last_name,customer.c_last_review_date_sk,customer.c_login,customer.c_preferred_cust_flag,customer.c_salutation)]
--------PhysicalTopN[MERGE_SORT]
----------PhysicalDistribute[DistributionSpecGather]
------------PhysicalTopN[LOCAL_SORT]
--------------PhysicalProject
----------------hashJoin[INNER_JOIN shuffleBucket] hashCondition=((ctr1.ctr_state = ctr2.ctr_state)) otherCondition=((cast(ctr_total_return as DOUBLE) > cast((avg(cast(ctr_total_return as DECIMALV3(38, 4))) * 1.2) as DOUBLE))) build RFs:RF4 ctr_state->[ctr_state]
------------------PhysicalProject
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_address.ca_address_sk = customer.c_current_addr_sk)) otherCondition=() build RFs:RF3 ca_address_sk->[c_current_addr_sk]
----------------------PhysicalProject
------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((ctr1.ctr_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF2 c_customer_sk->[ctr_customer_sk]
--------------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF2 RF4
--------------------------PhysicalProject
----------------------------PhysicalLazyMaterializeOlapScan[customer lazySlots:(customer.c_birth_month,customer.c_birth_year,customer.c_birth_country,customer.c_login,customer.c_email_address,customer.c_last_review_date_sk,customer.c_salutation,customer.c_first_name,customer.c_last_name,customer.c_preferred_cust_flag,customer.c_birth_day)] apply RFs: RF3
----------------------PhysicalProject
------------------------filter((customer_address.ca_state = 'IN'))
--------------------------PhysicalOlapScan[customer_address]
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecHash]
----------------------hashAgg[LOCAL]
------------------------PhysicalDistribute[DistributionSpecExecutionAny]
--------------------------PhysicalCteConsumer ( cteId=CTEId#0 )

