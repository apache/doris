-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_10 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, cnt1, customer_demographics.cd_purchase_estimate, cnt1 AS `cnt2`, customer_demographics.cd_credit_rating, cnt1 AS `cnt3`, customer_demographics.cd_dep_count, cnt1 AS `cnt4`, customer_demographics.cd_dep_employed_count, cnt1 AS `cnt5`, customer_demographics.cd_dep_college_count, cnt1 AS `cnt6`]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count]
------------------filter(OR[ifnull($c$1, FALSE),ifnull($c$2, FALSE)])
--------------------hashJoin[LEFT_SEMI_JOIN shuffle] hashCondition=((c.c_customer_sk = catalog_sales.cs_ship_customer_sk)) otherCondition=()
----------------------PhysicalProject[c.c_customer_sk, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count, $c$1]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((c.c_current_addr_sk = ca.ca_address_sk)) otherCondition=() build RFs:RF5 ca_address_sk->[c_current_addr_sk]
--------------------------PhysicalProject[c.c_customer_sk, c.c_current_addr_sk, $c$1, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_dep_college_count]
----------------------------hashJoin[INNER_JOIN shuffle] hashCondition=((customer_demographics.cd_demo_sk = c.c_current_cdemo_sk)) otherCondition=() build RFs:RF4 cd_demo_sk->[c_current_cdemo_sk]
------------------------------hashJoin[LEFT_SEMI_JOIN bucketShuffle] hashCondition=((c.c_customer_sk = web_sales.ws_bill_customer_sk)) otherCondition=()
--------------------------------hashJoin[RIGHT_SEMI_JOIN shuffle] hashCondition=((c.c_customer_sk = store_sales.ss_customer_sk)) otherCondition=() build RFs:RF3 c_customer_sk->[ss_customer_sk]
----------------------------------PhysicalProject[store_sales.ss_customer_sk]
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
--------------------------------------PhysicalProject[store_sales.ss_sold_date_sk, store_sales.ss_customer_sk]
----------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2 RF3
--------------------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------------------filter((date_dim.d_moy <= 4) and (date_dim.d_moy >= 1) and (date_dim.d_year = 2001))
------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------PhysicalProject[c.c_customer_sk, c.c_current_cdemo_sk, c.c_current_addr_sk]
------------------------------------PhysicalOlapScan[customer] apply RFs: RF4 RF5
--------------------------------PhysicalProject[web_sales.ws_bill_customer_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ws_sold_date_sk]
------------------------------------PhysicalProject[web_sales.ws_sold_date_sk, web_sales.ws_bill_customer_sk]
--------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF1
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_moy <= 4) and (date_dim.d_moy >= 1) and (date_dim.d_year = 2001))
----------------------------------------PhysicalOlapScan[date_dim]
------------------------------PhysicalOlapScan[customer_demographics]
--------------------------PhysicalProject[ca.ca_address_sk]
----------------------------filter(ca_county IN ('Cochran County', 'Kandiyohi County', 'Marquette County', 'Storey County', 'Warren County'))
------------------------------PhysicalOlapScan[customer_address]
----------------------PhysicalProject[catalog_sales.cs_ship_customer_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_ship_customer_sk]
----------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0
--------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------filter((date_dim.d_moy <= 4) and (date_dim.d_moy >= 1) and (date_dim.d_year = 2001))
------------------------------PhysicalOlapScan[date_dim]

