-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_5 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[profit, returns, sales, x.channel, x.id]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalRepeat
------------------PhysicalUnion
--------------------PhysicalProject['store channel' AS `channel`, (profit - profit_loss) AS `profit`, concat('store', s_store_id) AS `id`, returns AS `returns`, sales AS `sales`]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[salesreturns.net_loss, salesreturns.profit, salesreturns.return_amt, salesreturns.sales_price, store.s_store_id]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((salesreturns.store_sk = store.s_store_sk)) otherCondition=()
--------------------------------PhysicalProject[salesreturns.net_loss, salesreturns.profit, salesreturns.return_amt, salesreturns.sales_price, salesreturns.store_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((salesreturns.date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[sr_returned_date_sk,ss_sold_date_sk]
------------------------------------PhysicalUnion
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------PhysicalProject[0.00 AS `net_loss`, 0.00 AS `return_amt`, ss_ext_sales_price AS `sales_price`, ss_net_profit AS `profit`, ss_sold_date_sk AS `date_sk`, ss_store_sk AS `store_sk`]
------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------PhysicalProject[0.00 AS `profit`, 0.00 AS `sales_price`, sr_net_loss AS `net_loss`, sr_return_amt AS `return_amt`, sr_returned_date_sk AS `date_sk`, sr_store_sk AS `store_sk`]
------------------------------------------PhysicalOlapScan[store_returns] apply RFs: RF0
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_date <= '2000-09-02') and (date_dim.d_date >= '2000-08-19'))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------------------PhysicalProject[store.s_store_id, store.s_store_sk]
----------------------------------PhysicalOlapScan[store]
--------------------PhysicalProject['catalog channel' AS `channel`, (profit - profit_loss) AS `profit`, concat('catalog_page', cp_catalog_page_id) AS `id`, returns AS `returns`, sales AS `sales`]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[catalog_page.cp_catalog_page_id, salesreturns.net_loss, salesreturns.profit, salesreturns.return_amt, salesreturns.sales_price]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((salesreturns.page_sk = catalog_page.cp_catalog_page_sk)) otherCondition=()
--------------------------------PhysicalProject[salesreturns.net_loss, salesreturns.page_sk, salesreturns.profit, salesreturns.return_amt, salesreturns.sales_price]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((salesreturns.date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[cr_returned_date_sk,cs_sold_date_sk]
------------------------------------PhysicalUnion
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------PhysicalProject[0.00 AS `net_loss`, 0.00 AS `return_amt`, cs_catalog_page_sk AS `page_sk`, cs_ext_sales_price AS `sales_price`, cs_net_profit AS `profit`, cs_sold_date_sk AS `date_sk`]
------------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF2
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------PhysicalProject[0.00 AS `profit`, 0.00 AS `sales_price`, cr_catalog_page_sk AS `page_sk`, cr_net_loss AS `net_loss`, cr_return_amount AS `return_amt`, cr_returned_date_sk AS `date_sk`]
------------------------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF2
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_date <= '2000-09-02') and (date_dim.d_date >= '2000-08-19'))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------------------PhysicalProject[catalog_page.cp_catalog_page_id, catalog_page.cp_catalog_page_sk]
----------------------------------PhysicalOlapScan[catalog_page]
--------------------PhysicalProject['web channel' AS `channel`, (profit - profit_loss) AS `profit`, concat('web_site', web_site_id) AS `id`, returns AS `returns`, sales AS `sales`]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[salesreturns.net_loss, salesreturns.profit, salesreturns.return_amt, salesreturns.sales_price, web_site.web_site_id]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((salesreturns.wsr_web_site_sk = web_site.web_site_sk)) otherCondition=()
--------------------------------PhysicalProject[salesreturns.net_loss, salesreturns.profit, salesreturns.return_amt, salesreturns.sales_price, salesreturns.wsr_web_site_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((salesreturns.date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF6 d_date_sk->[wr_returned_date_sk,ws_sold_date_sk]
------------------------------------PhysicalUnion
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------PhysicalProject[0.00 AS `net_loss`, 0.00 AS `return_amt`, ws_ext_sales_price AS `sales_price`, ws_net_profit AS `profit`, ws_sold_date_sk AS `date_sk`, ws_web_site_sk AS `wsr_web_site_sk`]
------------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF6
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------PhysicalProject[0.00 AS `profit`, 0.00 AS `sales_price`, wr_net_loss AS `net_loss`, wr_return_amt AS `return_amt`, wr_returned_date_sk AS `date_sk`, ws_web_site_sk AS `wsr_web_site_sk`]
------------------------------------------hashJoin[INNER_JOIN colocated] hashCondition=((web_returns.wr_item_sk = web_sales.ws_item_sk) and (web_returns.wr_order_number = web_sales.ws_order_number)) otherCondition=() build RFs:RF4 wr_item_sk->[ws_item_sk];RF5 wr_order_number->[ws_order_number]
--------------------------------------------PhysicalProject[web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_web_site_sk]
----------------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF4 RF5
--------------------------------------------PhysicalProject[web_returns.wr_item_sk, web_returns.wr_net_loss, web_returns.wr_order_number, web_returns.wr_return_amt, web_returns.wr_returned_date_sk]
----------------------------------------------PhysicalOlapScan[web_returns] apply RFs: RF6
------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------filter((date_dim.d_date <= '2000-09-02') and (date_dim.d_date >= '2000-08-19'))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------------------PhysicalProject[web_site.web_site_id, web_site.web_site_sk]
----------------------------------PhysicalOlapScan[web_site]

