-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_73 --
PhysicalResultSink
--PhysicalQuickSort[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalQuickSort[LOCAL_SORT]
--------PhysicalProject[customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_salutation, dj.cnt, dj.ss_ticket_number]
----------hashJoin[INNER_JOIN broadcast] hashCondition=((dj.ss_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF3 ss_customer_sk->[c_customer_sk]
------------PhysicalProject[customer.c_customer_sk, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_salutation]
--------------PhysicalOlapScan[customer] apply RFs: RF3
------------filter((dj.cnt <= 5) and (dj.cnt >= 1))
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecHash]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_ticket_number]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ss_store_sk]
------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_store_sk, store_sales.ss_ticket_number]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF1 hd_demo_sk->[ss_hdemo_sk]
----------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_store_sk, store_sales.ss_ticket_number]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[ss_sold_date_sk]
--------------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_sold_date_sk, store_sales.ss_store_sk, store_sales.ss_ticket_number]
----------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1 RF2
--------------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------------filter((date_dim.d_dom <= 2) and (date_dim.d_dom >= 1) and d_year IN (2000, 2001, 2002))
------------------------------------PhysicalOlapScan[date_dim]
----------------------------PhysicalProject[household_demographics.hd_demo_sk]
------------------------------filter((household_demographics.hd_vehicle_count > 0) and (if((hd_vehicle_count > 0), (cast(hd_dep_count as DOUBLE) / cast(hd_vehicle_count as DOUBLE)), NULL) > 1.0) and hd_buy_potential IN ('501-1000', 'Unknown'))
--------------------------------PhysicalOlapScan[household_demographics]
------------------------PhysicalProject[store.s_store_sk]
--------------------------filter(s_county IN ('Barrow County', 'Daviess County', 'Fairfield County', 'Walker County'))
----------------------------PhysicalOlapScan[store]

