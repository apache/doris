-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_80 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[x.channel, x.id, sales, returns, profit]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalRepeat
------------------PhysicalUnion
--------------------PhysicalProject['store channel' AS `channel`, concat('store', s_store_id) AS `id`, sales AS `sales`, returns AS `returns`, profit AS `profit`]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[store.s_store_id, store_sales.ss_ext_sales_price, (cast(ss_net_profit as DECIMALV3(8, 2)) - cast(coalesce(sr_net_loss, 0.00) as DECIMALV3(8, 2))) AS `(cast(ss_net_profit as DECIMALV3(8, 2)) - cast(coalesce(sr_net_loss, 0.00) as DECIMALV3(8, 2)))`, coalesce(sr_return_amt, 0.00) AS `coalesce(sr_return_amt, 0.00)`]
------------------------------hashJoin[RIGHT_OUTER_JOIN colocated] hashCondition=((store_sales.ss_item_sk = store_returns.sr_item_sk) and (store_sales.ss_ticket_number = store_returns.sr_ticket_number)) otherCondition=() build RFs:RF4 ss_item_sk->[sr_item_sk];RF5 ss_ticket_number->[sr_ticket_number]
--------------------------------PhysicalProject[store_returns.sr_item_sk, store_returns.sr_ticket_number, store_returns.sr_return_amt, store_returns.sr_net_loss]
----------------------------------PhysicalOlapScan[store_returns] apply RFs: RF4 RF5
--------------------------------PhysicalProject[store_sales.ss_item_sk, store_sales.ss_ticket_number, store_sales.ss_ext_sales_price, store_sales.ss_net_profit, store.s_store_id]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF3 s_store_sk->[ss_store_sk]
------------------------------------PhysicalProject[store_sales.ss_item_sk, store_sales.ss_ticket_number, store_sales.ss_store_sk, store_sales.ss_ext_sales_price, store_sales.ss_net_profit]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF2 i_item_sk->[ss_item_sk]
----------------------------------------PhysicalProject[store_sales.ss_item_sk, store_sales.ss_ticket_number, store_sales.ss_store_sk, store_sales.ss_ext_sales_price, store_sales.ss_net_profit]
------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_promo_sk = promotion.p_promo_sk)) otherCondition=() build RFs:RF1 p_promo_sk->[ss_promo_sk]
--------------------------------------------PhysicalProject[store_sales.ss_item_sk, store_sales.ss_ticket_number, store_sales.ss_store_sk, store_sales.ss_promo_sk, store_sales.ss_ext_sales_price, store_sales.ss_net_profit]
----------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[ss_sold_date_sk]
------------------------------------------------PhysicalProject[store_sales.ss_sold_date_sk, store_sales.ss_item_sk, store_sales.ss_ticket_number, store_sales.ss_store_sk, store_sales.ss_promo_sk, store_sales.ss_ext_sales_price, store_sales.ss_net_profit]
--------------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1 RF2 RF3
------------------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------------------filter((date_dim.d_date <= '2002-09-13') and (date_dim.d_date >= '2002-08-14'))
----------------------------------------------------PhysicalOlapScan[date_dim]
--------------------------------------------PhysicalProject[promotion.p_promo_sk]
----------------------------------------------filter((promotion.p_channel_tv = 'N'))
------------------------------------------------PhysicalOlapScan[promotion]
----------------------------------------PhysicalProject[item.i_item_sk]
------------------------------------------filter((item.i_current_price > 50.00))
--------------------------------------------PhysicalOlapScan[item]
------------------------------------PhysicalProject[store.s_store_sk, store.s_store_id]
--------------------------------------PhysicalOlapScan[store]
--------------------PhysicalProject['catalog channel' AS `channel`, concat('catalog_page', cp_catalog_page_id) AS `id`, sales AS `sales`, returns AS `returns`, profit AS `profit`]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[catalog_page.cp_catalog_page_id, catalog_sales.cs_ext_sales_price, (cast(cs_net_profit as DECIMALV3(8, 2)) - cast(coalesce(cr_net_loss, 0.00) as DECIMALV3(8, 2))) AS `(cast(cs_net_profit as DECIMALV3(8, 2)) - cast(coalesce(cr_net_loss, 0.00) as DECIMALV3(8, 2)))`, coalesce(cr_return_amount, 0.00) AS `coalesce(cr_return_amount, 0.00)`]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_catalog_page_sk = catalog_page.cp_catalog_page_sk)) otherCondition=() build RFs:RF11 cp_catalog_page_sk->[cs_catalog_page_sk]
--------------------------------PhysicalProject[catalog_sales.cs_catalog_page_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit, catalog_returns.cr_return_amount, catalog_returns.cr_net_loss]
----------------------------------hashJoin[RIGHT_OUTER_JOIN colocated] hashCondition=((catalog_sales.cs_item_sk = catalog_returns.cr_item_sk) and (catalog_sales.cs_order_number = catalog_returns.cr_order_number)) otherCondition=() build RFs:RF9 cs_item_sk->[cr_item_sk];RF10 cs_order_number->[cr_order_number]
------------------------------------PhysicalProject[catalog_returns.cr_item_sk, catalog_returns.cr_order_number, catalog_returns.cr_return_amount, catalog_returns.cr_net_loss]
--------------------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF9 RF10
------------------------------------PhysicalProject[catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_catalog_page_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF8 i_item_sk->[cs_item_sk]
----------------------------------------PhysicalProject[catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_catalog_page_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit]
------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_promo_sk = promotion.p_promo_sk)) otherCondition=() build RFs:RF7 p_promo_sk->[cs_promo_sk]
--------------------------------------------PhysicalProject[catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_catalog_page_sk, catalog_sales.cs_promo_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit]
----------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF6 d_date_sk->[cs_sold_date_sk]
------------------------------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_catalog_page_sk, catalog_sales.cs_promo_sk, catalog_sales.cs_ext_sales_price, catalog_sales.cs_net_profit]
--------------------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF6 RF7 RF8 RF11
------------------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------------------filter((date_dim.d_date <= '2002-09-13') and (date_dim.d_date >= '2002-08-14'))
----------------------------------------------------PhysicalOlapScan[date_dim]
--------------------------------------------PhysicalProject[promotion.p_promo_sk]
----------------------------------------------filter((promotion.p_channel_tv = 'N'))
------------------------------------------------PhysicalOlapScan[promotion]
----------------------------------------PhysicalProject[item.i_item_sk]
------------------------------------------filter((item.i_current_price > 50.00))
--------------------------------------------PhysicalOlapScan[item]
--------------------------------PhysicalProject[catalog_page.cp_catalog_page_sk, catalog_page.cp_catalog_page_id]
----------------------------------PhysicalOlapScan[catalog_page]
--------------------PhysicalProject['web channel' AS `channel`, concat('web_site', web_site_id) AS `id`, sales AS `sales`, returns AS `returns`, profit AS `profit`]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[web_site.web_site_id, web_sales.ws_ext_sales_price, coalesce(wr_return_amt, 0.00) AS `coalesce(wr_return_amt, 0.00)`, (cast(ws_net_profit as DECIMALV3(8, 2)) - cast(coalesce(wr_net_loss, 0.00) as DECIMALV3(8, 2))) AS `(cast(ws_net_profit as DECIMALV3(8, 2)) - cast(coalesce(wr_net_loss, 0.00) as DECIMALV3(8, 2)))`]
------------------------------hashJoin[RIGHT_OUTER_JOIN colocated] hashCondition=((web_sales.ws_item_sk = web_returns.wr_item_sk) and (web_sales.ws_order_number = web_returns.wr_order_number)) otherCondition=() build RFs:RF16 ws_item_sk->[wr_item_sk];RF17 ws_order_number->[wr_order_number]
--------------------------------PhysicalProject[web_returns.wr_item_sk, web_returns.wr_order_number, web_returns.wr_return_amt, web_returns.wr_net_loss]
----------------------------------PhysicalOlapScan[web_returns] apply RFs: RF16 RF17
--------------------------------PhysicalProject[web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_ext_sales_price, web_sales.ws_net_profit, web_site.web_site_id]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_web_site_sk = web_site.web_site_sk)) otherCondition=() build RFs:RF15 web_site_sk->[ws_web_site_sk]
------------------------------------PhysicalProject[web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_web_site_sk, web_sales.ws_ext_sales_price, web_sales.ws_net_profit]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF14 i_item_sk->[ws_item_sk]
----------------------------------------PhysicalProject[web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_web_site_sk, web_sales.ws_ext_sales_price, web_sales.ws_net_profit]
------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_promo_sk = promotion.p_promo_sk)) otherCondition=() build RFs:RF13 p_promo_sk->[ws_promo_sk]
--------------------------------------------PhysicalProject[web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_web_site_sk, web_sales.ws_promo_sk, web_sales.ws_ext_sales_price, web_sales.ws_net_profit]
----------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF12 d_date_sk->[ws_sold_date_sk]
------------------------------------------------PhysicalProject[web_sales.ws_sold_date_sk, web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_web_site_sk, web_sales.ws_promo_sk, web_sales.ws_ext_sales_price, web_sales.ws_net_profit]
--------------------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF12 RF13 RF14 RF15
------------------------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------------------------filter((date_dim.d_date <= '2002-09-13') and (date_dim.d_date >= '2002-08-14'))
----------------------------------------------------PhysicalOlapScan[date_dim]
--------------------------------------------PhysicalProject[promotion.p_promo_sk]
----------------------------------------------filter((promotion.p_channel_tv = 'N'))
------------------------------------------------PhysicalOlapScan[promotion]
----------------------------------------PhysicalProject[item.i_item_sk]
------------------------------------------filter((item.i_current_price > 50.00))
--------------------------------------------PhysicalOlapScan[item]
------------------------------------PhysicalProject[web_site.web_site_sk, web_site.web_site_id]
--------------------------------------PhysicalOlapScan[web_site]

