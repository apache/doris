-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_40 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[warehouse.w_state, item.i_item_id, if((d_date >= '2001-05-02'), (cast(cs_sales_price as DECIMALV3(8, 2)) - cast(coalesce(cr_refunded_cash, 0.00) as DECIMALV3(8, 2))), 0.00) AS `if((d_date >= '2001-05-02'), (cast(cs_sales_price as DECIMALV3(8, 2)) - cast(coalesce(cr_refunded_cash, 0.00) as DECIMALV3(8, 2))), 0.00)`, if((d_date < '2001-05-02'), (cast(cs_sales_price as DECIMALV3(8, 2)) - cast(coalesce(cr_refunded_cash, 0.00) as DECIMALV3(8, 2))), 0.00) AS `if((d_date < '2001-05-02'), (cast(cs_sales_price as DECIMALV3(8, 2)) - cast(coalesce(cr_refunded_cash, 0.00) as DECIMALV3(8, 2))), 0.00)`]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_warehouse_sk = warehouse.w_warehouse_sk)) otherCondition=() build RFs:RF4 w_warehouse_sk->[cs_warehouse_sk]
------------------PhysicalProject[catalog_returns.cr_refunded_cash, catalog_sales.cs_warehouse_sk, catalog_sales.cs_sales_price, item.i_item_id, date_dim.d_date]
--------------------hashJoin[RIGHT_OUTER_JOIN colocated] hashCondition=((catalog_sales.cs_item_sk = catalog_returns.cr_item_sk) and (catalog_sales.cs_order_number = catalog_returns.cr_order_number)) otherCondition=() build RFs:RF2 cs_item_sk->[cr_item_sk];RF3 cs_order_number->[cr_order_number]
----------------------PhysicalProject[catalog_returns.cr_item_sk, catalog_returns.cr_order_number, catalog_returns.cr_refunded_cash]
------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF2 RF3
----------------------PhysicalProject[catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_warehouse_sk, catalog_sales.cs_sales_price, item.i_item_id, date_dim.d_date]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_warehouse_sk, catalog_sales.cs_sales_price, item.i_item_id]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((item.i_item_sk = catalog_sales.cs_item_sk)) otherCondition=() build RFs:RF0 i_item_sk->[cs_item_sk]
------------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_warehouse_sk, catalog_sales.cs_sales_price]
--------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0 RF1 RF4
------------------------------PhysicalProject[item.i_item_sk, item.i_item_id]
--------------------------------filter((item.i_current_price <= 1.49) and (item.i_current_price >= 0.99))
----------------------------------PhysicalOlapScan[item]
--------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_date]
----------------------------filter((date_dim.d_date <= '2001-06-01') and (date_dim.d_date >= '2001-04-02'))
------------------------------PhysicalOlapScan[date_dim]
------------------PhysicalProject[warehouse.w_warehouse_sk, warehouse.w_state]
--------------------PhysicalOlapScan[warehouse]

Hint log:
Used: leading(catalog_returns { catalog_sales item date_dim } warehouse )
UnUsed: 
SyntaxError:

