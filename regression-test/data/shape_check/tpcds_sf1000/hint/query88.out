-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_88 --
PhysicalResultSink
--NestedLoopJoin[CROSS_JOIN]
----NestedLoopJoin[CROSS_JOIN]
------NestedLoopJoin[CROSS_JOIN]
--------NestedLoopJoin[CROSS_JOIN]
----------NestedLoopJoin[CROSS_JOIN]
------------NestedLoopJoin[CROSS_JOIN]
--------------NestedLoopJoin[CROSS_JOIN]
----------------PhysicalProject[h8_30_to_9 AS `h8_30_to_9`]
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecGather]
----------------------hashAgg[LOCAL]
------------------------PhysicalProject[1 AS `1`]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF23 s_store_sk->[ss_store_sk]
----------------------------PhysicalProject[store_sales.ss_store_sk]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF22 hd_demo_sk->[ss_hdemo_sk]
--------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF21 t_time_sk->[ss_sold_time_sk]
------------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
--------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF21 RF22 RF23
------------------------------------PhysicalProject[time_dim.t_time_sk]
--------------------------------------filter((time_dim.t_hour = 8) and (time_dim.t_minute >= 30))
----------------------------------------PhysicalOlapScan[time_dim]
--------------------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
------------------------------------PhysicalOlapScan[household_demographics]
----------------------------PhysicalProject[store.s_store_sk]
------------------------------filter((store.s_store_name = 'ese'))
--------------------------------PhysicalOlapScan[store]
----------------PhysicalProject[h9_to_9_30 AS `h9_to_9_30`]
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecGather]
----------------------hashAgg[LOCAL]
------------------------PhysicalProject[1 AS `1`]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF20 s_store_sk->[ss_store_sk]
----------------------------PhysicalProject[store_sales.ss_store_sk]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF19 hd_demo_sk->[ss_hdemo_sk]
--------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF18 t_time_sk->[ss_sold_time_sk]
------------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
--------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF18 RF19 RF20
------------------------------------PhysicalProject[time_dim.t_time_sk]
--------------------------------------filter((time_dim.t_hour = 9) and (time_dim.t_minute < 30))
----------------------------------------PhysicalOlapScan[time_dim]
--------------------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
------------------------------------PhysicalOlapScan[household_demographics]
----------------------------PhysicalProject[store.s_store_sk]
------------------------------filter((store.s_store_name = 'ese'))
--------------------------------PhysicalOlapScan[store]
--------------PhysicalProject[h9_30_to_10 AS `h9_30_to_10`]
----------------hashAgg[GLOBAL]
------------------PhysicalDistribute[DistributionSpecGather]
--------------------hashAgg[LOCAL]
----------------------PhysicalProject[1 AS `1`]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF17 s_store_sk->[ss_store_sk]
--------------------------PhysicalProject[store_sales.ss_store_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF16 hd_demo_sk->[ss_hdemo_sk]
------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF15 t_time_sk->[ss_sold_time_sk]
----------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF15 RF16 RF17
----------------------------------PhysicalProject[time_dim.t_time_sk]
------------------------------------filter((time_dim.t_hour = 9) and (time_dim.t_minute >= 30))
--------------------------------------PhysicalOlapScan[time_dim]
------------------------------PhysicalProject[household_demographics.hd_demo_sk]
--------------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
----------------------------------PhysicalOlapScan[household_demographics]
--------------------------PhysicalProject[store.s_store_sk]
----------------------------filter((store.s_store_name = 'ese'))
------------------------------PhysicalOlapScan[store]
------------PhysicalProject[h10_to_10_30 AS `h10_to_10_30`]
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecGather]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[1 AS `1`]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF14 s_store_sk->[ss_store_sk]
------------------------PhysicalProject[store_sales.ss_store_sk]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF13 hd_demo_sk->[ss_hdemo_sk]
----------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF12 t_time_sk->[ss_sold_time_sk]
--------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
----------------------------------PhysicalOlapScan[store_sales] apply RFs: RF12 RF13 RF14
--------------------------------PhysicalProject[time_dim.t_time_sk]
----------------------------------filter((time_dim.t_hour = 10) and (time_dim.t_minute < 30))
------------------------------------PhysicalOlapScan[time_dim]
----------------------------PhysicalProject[household_demographics.hd_demo_sk]
------------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
--------------------------------PhysicalOlapScan[household_demographics]
------------------------PhysicalProject[store.s_store_sk]
--------------------------filter((store.s_store_name = 'ese'))
----------------------------PhysicalOlapScan[store]
----------PhysicalProject[h10_30_to_11 AS `h10_30_to_11`]
------------hashAgg[GLOBAL]
--------------PhysicalDistribute[DistributionSpecGather]
----------------hashAgg[LOCAL]
------------------PhysicalProject[1 AS `1`]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF11 s_store_sk->[ss_store_sk]
----------------------PhysicalProject[store_sales.ss_store_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF10 hd_demo_sk->[ss_hdemo_sk]
--------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF9 t_time_sk->[ss_sold_time_sk]
------------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
--------------------------------PhysicalOlapScan[store_sales] apply RFs: RF9 RF10 RF11
------------------------------PhysicalProject[time_dim.t_time_sk]
--------------------------------filter((time_dim.t_hour = 10) and (time_dim.t_minute >= 30))
----------------------------------PhysicalOlapScan[time_dim]
--------------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
------------------------------PhysicalOlapScan[household_demographics]
----------------------PhysicalProject[store.s_store_sk]
------------------------filter((store.s_store_name = 'ese'))
--------------------------PhysicalOlapScan[store]
--------PhysicalProject[h11_to_11_30 AS `h11_to_11_30`]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecGather]
--------------hashAgg[LOCAL]
----------------PhysicalProject[1 AS `1`]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF8 s_store_sk->[ss_store_sk]
--------------------PhysicalProject[store_sales.ss_store_sk]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF7 hd_demo_sk->[ss_hdemo_sk]
------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF6 t_time_sk->[ss_sold_time_sk]
----------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
------------------------------PhysicalOlapScan[store_sales] apply RFs: RF6 RF7 RF8
----------------------------PhysicalProject[time_dim.t_time_sk]
------------------------------filter((time_dim.t_hour = 11) and (time_dim.t_minute < 30))
--------------------------------PhysicalOlapScan[time_dim]
------------------------PhysicalProject[household_demographics.hd_demo_sk]
--------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
----------------------------PhysicalOlapScan[household_demographics]
--------------------PhysicalProject[store.s_store_sk]
----------------------filter((store.s_store_name = 'ese'))
------------------------PhysicalOlapScan[store]
------PhysicalProject[h11_30_to_12 AS `h11_30_to_12`]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecGather]
------------hashAgg[LOCAL]
--------------PhysicalProject[1 AS `1`]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF5 s_store_sk->[ss_store_sk]
------------------PhysicalProject[store_sales.ss_store_sk]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF4 hd_demo_sk->[ss_hdemo_sk]
----------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF3 t_time_sk->[ss_sold_time_sk]
--------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
----------------------------PhysicalOlapScan[store_sales] apply RFs: RF3 RF4 RF5
--------------------------PhysicalProject[time_dim.t_time_sk]
----------------------------filter((time_dim.t_hour = 11) and (time_dim.t_minute >= 30))
------------------------------PhysicalOlapScan[time_dim]
----------------------PhysicalProject[household_demographics.hd_demo_sk]
------------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
--------------------------PhysicalOlapScan[household_demographics]
------------------PhysicalProject[store.s_store_sk]
--------------------filter((store.s_store_name = 'ese'))
----------------------PhysicalOlapScan[store]
----PhysicalProject[h12_to_12_30 AS `h12_to_12_30`]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecGather]
----------hashAgg[LOCAL]
------------PhysicalProject[1 AS `1`]
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ss_store_sk]
----------------PhysicalProject[store_sales.ss_store_sk]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF1 hd_demo_sk->[ss_hdemo_sk]
--------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_store_sk]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF0 t_time_sk->[ss_sold_time_sk]
------------------------PhysicalProject[store_sales.ss_hdemo_sk, store_sales.ss_sold_time_sk, store_sales.ss_store_sk]
--------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1 RF2
------------------------PhysicalProject[time_dim.t_time_sk]
--------------------------filter((time_dim.t_hour = 12) and (time_dim.t_minute < 30))
----------------------------PhysicalOlapScan[time_dim]
--------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------filter((household_demographics.hd_vehicle_count <= 5) and OR[AND[(household_demographics.hd_dep_count = 0),(household_demographics.hd_vehicle_count <= 2)],AND[(household_demographics.hd_dep_count = -1),(household_demographics.hd_vehicle_count <= 1)],(household_demographics.hd_dep_count = 3)] and hd_dep_count IN (-1, 0, 3))
------------------------PhysicalOlapScan[household_demographics]
----------------PhysicalProject[store.s_store_sk]
------------------filter((store.s_store_name = 'ese'))
--------------------PhysicalOlapScan[store]

Hint log:
Used: leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(store_sales time_dim household_demographics store ) leading(s1 s2 s3 s4 s5 s6 s7 s8 )
UnUsed: 
SyntaxError:

