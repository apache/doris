-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_16 --
PhysicalResultSink
--PhysicalLimit[GLOBAL]
----PhysicalLimit[LOCAL]
------hashAgg[DISTINCT_GLOBAL]
--------PhysicalDistribute[DistributionSpecGather]
----------hashAgg[DISTINCT_LOCAL]
------------hashAgg[GLOBAL]
--------------hashAgg[LOCAL]
----------------PhysicalProject[cs1.cs_ext_ship_cost, cs1.cs_net_profit, cs1.cs_order_number]
------------------hashJoin[RIGHT_SEMI_JOIN shuffleBucket] hashCondition=((cs1.cs_order_number = cs2.cs_order_number)) otherCondition=(( not (cs_warehouse_sk = cs_warehouse_sk))) build RFs:RF4 cs_order_number->[cs_order_number]
--------------------PhysicalProject[cs2.cs_order_number, cs2.cs_warehouse_sk]
----------------------PhysicalOlapScan[catalog_sales] apply RFs: RF4
--------------------hashJoin[RIGHT_ANTI_JOIN shuffle] hashCondition=((cs1.cs_order_number = cr1.cr_order_number)) otherCondition=() build RFs:RF3 cs_order_number->[cr_order_number]
----------------------PhysicalProject[cr1.cr_order_number]
------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF3
----------------------PhysicalProject[cs1.cs_ext_ship_cost, cs1.cs_net_profit, cs1.cs_order_number, cs1.cs_warehouse_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((cs1.cs_call_center_sk = call_center.cc_call_center_sk)) otherCondition=() build RFs:RF2 cc_call_center_sk->[cs_call_center_sk]
--------------------------PhysicalProject[cs1.cs_call_center_sk, cs1.cs_ext_ship_cost, cs1.cs_net_profit, cs1.cs_order_number, cs1.cs_warehouse_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((cs1.cs_ship_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[cs_ship_date_sk]
------------------------------PhysicalProject[cs1.cs_call_center_sk, cs1.cs_ext_ship_cost, cs1.cs_net_profit, cs1.cs_order_number, cs1.cs_ship_date_sk, cs1.cs_warehouse_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((cs1.cs_ship_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF0 ca_address_sk->[cs_ship_addr_sk]
----------------------------------PhysicalProject[cs1.cs_call_center_sk, cs1.cs_ext_ship_cost, cs1.cs_net_profit, cs1.cs_order_number, cs1.cs_ship_addr_sk, cs1.cs_ship_date_sk, cs1.cs_warehouse_sk]
------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0 RF1 RF2
----------------------------------PhysicalProject[customer_address.ca_address_sk]
------------------------------------filter((customer_address.ca_state = 'PA'))
--------------------------------------PhysicalOlapScan[customer_address]
------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------filter((date_dim.d_date <= '2002-05-31') and (date_dim.d_date >= '2002-04-01'))
----------------------------------PhysicalOlapScan[date_dim]
--------------------------PhysicalProject[call_center.cc_call_center_sk]
----------------------------filter((call_center.cc_county = 'Williamson County'))
------------------------------PhysicalOlapScan[call_center]

Hint log:
Used: leading(catalog_sales { cs1 customer_address date_dim call_center } )
UnUsed:
SyntaxError:

