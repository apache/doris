-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_79 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[customer.c_first_name, customer.c_last_name, ms.amt, ms.profit, ms.ss_ticket_number, substring(s_city, 1, 30) AS `substr(s_city,1,30)`]
----------hashJoin[INNER_JOIN broadcast] hashCondition=((ms.ss_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF3 c_customer_sk->[ss_customer_sk]
------------PhysicalProject[amt AS `amt`, profit AS `profit`, s_city AS `s_city`, ss_customer_sk AS `ss_customer_sk`, ss_ticket_number AS `ss_ticket_number`]
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecHash]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[store.s_city, store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_net_profit, store_sales.ss_ticket_number]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ss_store_sk]
------------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_net_profit, store_sales.ss_store_sk, store_sales.ss_ticket_number]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF1 hd_demo_sk->[ss_hdemo_sk]
----------------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_net_profit, store_sales.ss_store_sk, store_sales.ss_ticket_number]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[ss_sold_date_sk]
--------------------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_coupon_amt, store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_net_profit, store_sales.ss_sold_date_sk, store_sales.ss_store_sk, store_sales.ss_ticket_number]
----------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1 RF2 RF3
--------------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------------filter((date_dim.d_dow = 1) and d_year IN (2000, 2001, 2002))
------------------------------------PhysicalOlapScan[date_dim]
----------------------------PhysicalProject[household_demographics.hd_demo_sk]
------------------------------filter(OR[(household_demographics.hd_dep_count = 7),(household_demographics.hd_vehicle_count > -1)])
--------------------------------PhysicalOlapScan[household_demographics]
------------------------PhysicalProject[store.s_city, store.s_store_sk]
--------------------------filter((store.s_number_employees <= 295) and (store.s_number_employees >= 200))
----------------------------PhysicalOlapScan[store]
------------PhysicalProject[customer.c_customer_sk, customer.c_first_name, customer.c_last_name]
--------------PhysicalOlapScan[customer]

Hint log:
Used: leading(store_sales date_dim household_demographics store ) leading(ms customer )
UnUsed: 
SyntaxError:

