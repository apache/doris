-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_26 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[item.i_item_id, catalog_sales.cs_quantity, cast(cs_coupon_amt as DECIMALV3(9, 4)) AS `cast(cs_coupon_amt as DECIMALV3(9, 4))`, cast(cs_sales_price as DECIMALV3(9, 4)) AS `cast(cs_sales_price as DECIMALV3(9, 4))`, cast(cs_list_price as DECIMALV3(9, 4)) AS `cast(cs_list_price as DECIMALV3(9, 4))`]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF3 i_item_sk->[cs_item_sk]
------------------PhysicalProject[catalog_sales.cs_item_sk, catalog_sales.cs_quantity, catalog_sales.cs_list_price, catalog_sales.cs_sales_price, catalog_sales.cs_coupon_amt]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_promo_sk = promotion.p_promo_sk)) otherCondition=() build RFs:RF2 p_promo_sk->[cs_promo_sk]
----------------------PhysicalProject[catalog_sales.cs_item_sk, catalog_sales.cs_promo_sk, catalog_sales.cs_quantity, catalog_sales.cs_list_price, catalog_sales.cs_sales_price, catalog_sales.cs_coupon_amt]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_promo_sk, catalog_sales.cs_quantity, catalog_sales.cs_list_price, catalog_sales.cs_sales_price, catalog_sales.cs_coupon_amt]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_bill_cdemo_sk = customer_demographics.cd_demo_sk)) otherCondition=() build RFs:RF0 cd_demo_sk->[cs_bill_cdemo_sk]
------------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_bill_cdemo_sk, catalog_sales.cs_promo_sk, catalog_sales.cs_quantity, catalog_sales.cs_list_price, catalog_sales.cs_sales_price, catalog_sales.cs_coupon_amt]
--------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0 RF1 RF2 RF3
------------------------------PhysicalProject[customer_demographics.cd_demo_sk]
--------------------------------filter((customer_demographics.cd_education_status = 'Unknown') and (customer_demographics.cd_gender = 'M') and (customer_demographics.cd_marital_status = 'W'))
----------------------------------PhysicalOlapScan[customer_demographics]
--------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------filter((date_dim.d_year = 2002))
------------------------------PhysicalOlapScan[date_dim]
----------------------PhysicalProject[promotion.p_promo_sk]
------------------------filter(OR[(promotion.p_channel_email = 'N'),(promotion.p_channel_event = 'N')])
--------------------------PhysicalOlapScan[promotion]
------------------PhysicalProject[item.i_item_sk, item.i_item_id]
--------------------PhysicalOlapScan[item]

Hint log:
Used: leading(catalog_sales customer_demographics date_dim promotion item )
UnUsed: 
SyntaxError:

