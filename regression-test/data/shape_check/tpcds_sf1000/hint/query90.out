-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_90 --
PhysicalResultSink
--PhysicalTopN[GATHER_SORT]
----PhysicalProject[(cast(cast(amc as DECIMALV3(15, 4)) as DECIMALV3(23, 12)) / cast(pmc as DECIMALV3(15, 4))) AS `am_pm_ratio`]
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalProject[amc AS `amc`]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecGather]
--------------hashAgg[LOCAL]
----------------PhysicalProject[1 AS `1`]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_ship_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF5 hd_demo_sk->[ws_ship_hdemo_sk]
--------------------PhysicalProject[web_sales.ws_ship_hdemo_sk]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF4 t_time_sk->[ws_sold_time_sk]
------------------------PhysicalProject[web_sales.ws_ship_hdemo_sk, web_sales.ws_sold_time_sk]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_web_page_sk = web_page.wp_web_page_sk)) otherCondition=() build RFs:RF3 wp_web_page_sk->[ws_web_page_sk]
----------------------------PhysicalProject[web_sales.ws_ship_hdemo_sk, web_sales.ws_sold_time_sk, web_sales.ws_web_page_sk]
------------------------------PhysicalOlapScan[web_sales] apply RFs: RF3 RF4 RF5
----------------------------PhysicalProject[web_page.wp_web_page_sk]
------------------------------filter((web_page.wp_char_count <= 5200) and (web_page.wp_char_count >= 5000))
--------------------------------PhysicalOlapScan[web_page]
------------------------PhysicalProject[time_dim.t_time_sk]
--------------------------filter((time_dim.t_hour <= 13) and (time_dim.t_hour >= 12))
----------------------------PhysicalOlapScan[time_dim]
--------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------filter((household_demographics.hd_dep_count = 6))
------------------------PhysicalOlapScan[household_demographics]
--------PhysicalProject[pmc AS `pmc`]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecGather]
--------------hashAgg[LOCAL]
----------------PhysicalProject[1 AS `1`]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_ship_hdemo_sk = household_demographics.hd_demo_sk)) otherCondition=() build RFs:RF2 hd_demo_sk->[ws_ship_hdemo_sk]
--------------------PhysicalProject[web_sales.ws_ship_hdemo_sk]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF1 t_time_sk->[ws_sold_time_sk]
------------------------PhysicalProject[web_sales.ws_ship_hdemo_sk, web_sales.ws_sold_time_sk]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_web_page_sk = web_page.wp_web_page_sk)) otherCondition=() build RFs:RF0 wp_web_page_sk->[ws_web_page_sk]
----------------------------PhysicalProject[web_sales.ws_ship_hdemo_sk, web_sales.ws_sold_time_sk, web_sales.ws_web_page_sk]
------------------------------PhysicalOlapScan[web_sales] apply RFs: RF0 RF1 RF2
----------------------------PhysicalProject[web_page.wp_web_page_sk]
------------------------------filter((web_page.wp_char_count <= 5200) and (web_page.wp_char_count >= 5000))
--------------------------------PhysicalOlapScan[web_page]
------------------------PhysicalProject[time_dim.t_time_sk]
--------------------------filter((time_dim.t_hour <= 15) and (time_dim.t_hour >= 14))
----------------------------PhysicalOlapScan[time_dim]
--------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------filter((household_demographics.hd_dep_count = 6))
------------------------PhysicalOlapScan[household_demographics]

Hint log:
Used: leading(web_sales web_page time_dim household_demographics ) leading(web_sales web_page time_dim household_demographics ) leading(at pt )
UnUsed: 
SyntaxError:

