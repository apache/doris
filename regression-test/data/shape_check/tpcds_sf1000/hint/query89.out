-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_89 --
PhysicalResultSink
--PhysicalProject[avg_monthly_sales, d_moy, i_brand, i_category, i_class, s_company_name, s_store_name, sum_sales]
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject[(sum_sales - cast(avg_monthly_sales as DECIMALV3(38, 2))) AS `(sum_sales - cast(avg_monthly_sales as DECIMALV3(38, 2)))`, avg_monthly_sales AS `avg_monthly_sales`, d_moy AS `d_moy`, i_brand AS `i_brand`, i_category AS `i_category`, i_class AS `i_class`, s_company_name AS `s_company_name`, s_store_name AS `s_store_name`, sum_sales AS `sum_sales`]
------------filter((if(( not (avg_monthly_sales = 0.0000)), (cast(abs((sum_sales - cast(avg_monthly_sales as DECIMALV3(38, 2)))) as DECIMALV3(38, 10)) / avg_monthly_sales), NULL) > 0.100000))
--------------PhysicalWindow
----------------PhysicalQuickSort[LOCAL_SORT]
------------------PhysicalDistribute[DistributionSpecHash]
--------------------PhysicalProject[cast(sum_sales as DECIMALV3(38, 4)) AS `cast(sum_sales as DECIMALV3(38, 4))`, date_dim.d_moy, item.i_brand, item.i_category, item.i_class, store.s_company_name, store.s_store_name, sum_sales]
----------------------hashAgg[GLOBAL]
------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------hashAgg[LOCAL]
----------------------------PhysicalProject[date_dim.d_moy, item.i_brand, item.i_category, item.i_class, store.s_company_name, store.s_store_name, store_sales.ss_sales_price]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_store_sk = store.s_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ss_store_sk]
--------------------------------PhysicalProject[date_dim.d_moy, item.i_brand, item.i_category, item.i_class, store_sales.ss_sales_price, store_sales.ss_store_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ss_sold_date_sk]
------------------------------------PhysicalProject[item.i_brand, item.i_category, item.i_class, store_sales.ss_sales_price, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF0 i_item_sk->[ss_item_sk]
----------------------------------------PhysicalProject[store_sales.ss_item_sk, store_sales.ss_sales_price, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1 RF2
----------------------------------------PhysicalProject[item.i_brand, item.i_category, item.i_class, item.i_item_sk]
------------------------------------------filter(OR[AND[i_category IN ('Books', 'Children', 'Electronics'),i_class IN ('audio', 'history', 'school-uniforms')],AND[i_category IN ('Men', 'Shoes', 'Sports'),i_class IN ('pants', 'tennis', 'womens')]] and i_category IN ('Books', 'Children', 'Electronics', 'Men', 'Shoes', 'Sports') and i_class IN ('audio', 'history', 'pants', 'school-uniforms', 'tennis', 'womens'))
--------------------------------------------PhysicalOlapScan[item]
------------------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_moy]
--------------------------------------filter((date_dim.d_year = 2001))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------------------PhysicalProject[store.s_company_name, store.s_store_name, store.s_store_sk]
----------------------------------PhysicalOlapScan[store]

Hint log:
Used: leading(store_sales item date_dim store )
UnUsed: 
SyntaxError:

