-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_10 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[cnt1, cnt1 AS `cnt2`, cnt1 AS `cnt3`, cnt1 AS `cnt4`, cnt1 AS `cnt5`, cnt1 AS `cnt6`, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_education_status, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_purchase_estimate]
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject[customer_demographics.cd_credit_rating, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_education_status, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_purchase_estimate]
------------------filter(OR[ifnull($c$1, FALSE),ifnull($c$2, FALSE)])
--------------------hashJoin[LEFT_SEMI_JOIN bucketShuffle] hashCondition=((c.c_customer_sk = catalog_sales.cs_ship_customer_sk)) otherCondition=()
----------------------hashJoin[LEFT_SEMI_JOIN bucketShuffle] hashCondition=((c.c_customer_sk = web_sales.ws_bill_customer_sk)) otherCondition=()
------------------------hashJoin[LEFT_SEMI_JOIN shuffle] hashCondition=((c.c_customer_sk = store_sales.ss_customer_sk)) otherCondition=() build RFs:RF5 ss_customer_sk->[c_customer_sk]
--------------------------PhysicalProject[c.c_customer_sk, customer_demographics.cd_credit_rating, customer_demographics.cd_dep_college_count, customer_demographics.cd_dep_count, customer_demographics.cd_dep_employed_count, customer_demographics.cd_education_status, customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_purchase_estimate]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_demographics.cd_demo_sk = c.c_current_cdemo_sk)) otherCondition=() build RFs:RF4 c_current_cdemo_sk->[cd_demo_sk]
------------------------------PhysicalOlapScan[customer_demographics] apply RFs: RF4
------------------------------PhysicalProject[c.c_current_cdemo_sk, c.c_customer_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((c.c_current_addr_sk = ca.ca_address_sk)) otherCondition=() build RFs:RF3 ca_address_sk->[c_current_addr_sk]
----------------------------------PhysicalProject[c.c_current_addr_sk, c.c_current_cdemo_sk, c.c_customer_sk]
------------------------------------PhysicalOlapScan[customer] apply RFs: RF3 RF5
----------------------------------PhysicalProject[ca.ca_address_sk]
------------------------------------filter(ca_county IN ('Campbell County', 'Cleburne County', 'Escambia County', 'Fairfield County', 'Washtenaw County'))
--------------------------------------PhysicalOlapScan[customer_address]
--------------------------PhysicalProject[store_sales.ss_customer_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
------------------------------PhysicalProject[store_sales.ss_customer_sk, store_sales.ss_sold_date_sk]
--------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2
------------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------------filter((date_dim.d_moy <= 6) and (date_dim.d_moy >= 3) and (date_dim.d_year = 2001))
----------------------------------PhysicalOlapScan[date_dim]
------------------------PhysicalProject[web_sales.ws_bill_customer_sk]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ws_sold_date_sk]
----------------------------PhysicalProject[web_sales.ws_bill_customer_sk, web_sales.ws_sold_date_sk]
------------------------------PhysicalOlapScan[web_sales] apply RFs: RF1
----------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------filter((date_dim.d_moy <= 6) and (date_dim.d_moy >= 3) and (date_dim.d_year = 2001))
--------------------------------PhysicalOlapScan[date_dim]
----------------------PhysicalProject[catalog_sales.cs_ship_customer_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject[catalog_sales.cs_ship_customer_sk, catalog_sales.cs_sold_date_sk]
----------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0
--------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------filter((date_dim.d_moy <= 6) and (date_dim.d_moy >= 3) and (date_dim.d_year = 2001))
------------------------------PhysicalOlapScan[date_dim]

Hint log:
Used: leading(customer_demographics broadcast { c broadcast ca } ) 
UnUsed:
SyntaxError:

