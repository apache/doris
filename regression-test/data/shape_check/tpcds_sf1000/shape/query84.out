-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_84 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[c_customer_id AS `customer_id`, concat(concat(coalesce(c_last_name, ''), ','), coalesce(c_first_name, '')) AS `customername`]
----------hashJoin[INNER_JOIN broadcast] hashCondition=((store_returns.sr_cdemo_sk = customer_demographics.cd_demo_sk)) otherCondition=() build RFs:RF4 cd_demo_sk->[sr_cdemo_sk]
------------PhysicalProject[store_returns.sr_cdemo_sk]
--------------PhysicalOlapScan[store_returns] apply RFs: RF4
------------PhysicalProject[customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer_demographics.cd_demo_sk]
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_demographics.cd_demo_sk = customer.c_current_cdemo_sk)) otherCondition=() build RFs:RF3 c_current_cdemo_sk->[cd_demo_sk]
----------------PhysicalProject[customer_demographics.cd_demo_sk]
------------------PhysicalOlapScan[customer_demographics] apply RFs: RF3
----------------PhysicalProject[customer.c_current_cdemo_sk, customer.c_customer_id, customer.c_first_name, customer.c_last_name]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((household_demographics.hd_demo_sk = customer.c_current_hdemo_sk)) otherCondition=() build RFs:RF2 hd_demo_sk->[c_current_hdemo_sk]
--------------------PhysicalProject[customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_customer_id, customer.c_first_name, customer.c_last_name]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_current_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF1 ca_address_sk->[c_current_addr_sk]
------------------------PhysicalProject[customer.c_current_addr_sk, customer.c_current_cdemo_sk, customer.c_current_hdemo_sk, customer.c_customer_id, customer.c_first_name, customer.c_last_name]
--------------------------PhysicalOlapScan[customer] apply RFs: RF1 RF2
------------------------PhysicalProject[customer_address.ca_address_sk]
--------------------------filter((customer_address.ca_city = 'Woodland'))
----------------------------PhysicalOlapScan[customer_address]
--------------------PhysicalProject[household_demographics.hd_demo_sk]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((income_band.ib_income_band_sk = household_demographics.hd_income_band_sk)) otherCondition=() build RFs:RF0 ib_income_band_sk->[hd_income_band_sk]
------------------------PhysicalProject[household_demographics.hd_demo_sk, household_demographics.hd_income_band_sk]
--------------------------PhysicalOlapScan[household_demographics] apply RFs: RF0
------------------------PhysicalProject[income_band.ib_income_band_sk]
--------------------------filter((cast(ib_upper_bound as BIGINT) <= 110306) and (income_band.ib_lower_bound >= 60306))
----------------------------PhysicalOlapScan[income_band]

