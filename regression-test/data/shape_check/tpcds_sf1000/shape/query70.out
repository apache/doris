-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_70 --
PhysicalResultSink
--PhysicalProject[lochierarchy, rank_within_parent, store.s_county, store.s_state, total_sum]
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject[if(((GROUPING_PREFIX_s_state + GROUPING_PREFIX_s_county) = 0), s_state, NULL), lochierarchy, rank_within_parent AS `rank_within_parent`, store.s_county, store.s_state, total_sum]
------------PhysicalWindow
--------------PhysicalQuickSort[LOCAL_SORT]
----------------PhysicalDistribute[DistributionSpecHash]
------------------PhysicalProject[(GROUPING_PREFIX_s_state + GROUPING_PREFIX_s_county) AS `(GROUPING_PREFIX_s_state + GROUPING_PREFIX_s_county)`, (GROUPING_PREFIX_s_state + GROUPING_PREFIX_s_county) AS `lochierarchy`, if(((GROUPING_PREFIX_s_state + GROUPING_PREFIX_s_county) = 0), s_state, NULL) AS `if(((GROUPING_PREFIX_s_state + GROUPING_PREFIX_s_county) = 0), s_state, NULL)`, if((GROUPING_PREFIX_s_county = 0), s_state, NULL) AS `if((GROUPING_PREFIX_s_county = 0), s_state, NULL)`, store.s_county, store.s_state, total_sum]
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalRepeat
----------------------------PhysicalProject[store.s_county, store.s_state, store_sales.ss_net_profit]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store.s_store_sk = store_sales.ss_store_sk)) otherCondition=() build RFs:RF4 s_store_sk->[ss_store_sk]
--------------------------------PhysicalProject[store_sales.ss_net_profit, store_sales.ss_store_sk]
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((d1.d_date_sk = store_sales.ss_sold_date_sk)) otherCondition=() build RFs:RF3 d_date_sk->[ss_sold_date_sk]
------------------------------------PhysicalProject[store_sales.ss_net_profit, store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
--------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF3 RF4
------------------------------------PhysicalProject[d1.d_date_sk]
--------------------------------------filter((d1.d_month_seq <= 1231) and (d1.d_month_seq >= 1220))
----------------------------------------PhysicalOlapScan[date_dim]
--------------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((store.s_state = tmp1.s_state)) otherCondition=() build RFs:RF2 s_state->[s_state]
----------------------------------PhysicalProject[store.s_county, store.s_state, store.s_store_sk]
------------------------------------PhysicalOlapScan[store] apply RFs: RF2
----------------------------------PhysicalProject[s_state AS `s_state`]
------------------------------------hashAgg[GLOBAL]
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------hashAgg[LOCAL]
------------------------------------------PhysicalProject[store.s_state]
--------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store.s_store_sk = store_sales.ss_store_sk)) otherCondition=() build RFs:RF1 s_store_sk->[ss_store_sk]
----------------------------------------------PhysicalProject[store_sales.ss_store_sk]
------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((date_dim.d_date_sk = store_sales.ss_sold_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[ss_sold_date_sk]
--------------------------------------------------PhysicalProject[store_sales.ss_sold_date_sk, store_sales.ss_store_sk]
----------------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1
--------------------------------------------------PhysicalProject[date_dim.d_date_sk]
----------------------------------------------------filter((date_dim.d_month_seq <= 1231) and (date_dim.d_month_seq >= 1220))
------------------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------------------PhysicalProject[store.s_state, store.s_store_sk]
------------------------------------------------PhysicalOlapScan[store]

