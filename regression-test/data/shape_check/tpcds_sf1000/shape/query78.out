-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_78 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[ss.ss_customer_sk, round((cast(ss_qty as DOUBLE) / cast((coalesce(ws_qty, 0) + coalesce(cs_qty, 0)) as DOUBLE)), 2) AS `ratio`, ss_qty AS `store_qty`, ss_wc AS `store_wholesale_cost`, ss_sp AS `store_sales_price`, (coalesce(ws_qty, 0) + coalesce(cs_qty, 0)) AS `other_chan_qty`, (coalesce(ws_wc, 0.00) + coalesce(cs_wc, 0.00)) AS `other_chan_wholesale_cost`, (coalesce(ws_sp, 0.00) + coalesce(cs_sp, 0.00)) AS `other_chan_sales_price`]
----------filter(OR[(coalesce(ws_qty, 0) > 0),(coalesce(cs_qty, 0) > 0)])
------------hashJoin[LEFT_OUTER_JOIN colocated] hashCondition=((cs.cs_customer_sk = ss.ss_customer_sk) and (cs.cs_item_sk = ss.ss_item_sk) and (cs.cs_sold_year = ss.ss_sold_year)) otherCondition=()
--------------PhysicalProject[ss.ss_sold_year, ss.ss_item_sk, ss.ss_customer_sk, ss.ss_qty, ss.ss_wc, ss.ss_sp, ws.ws_qty, ws.ws_wc, ws.ws_sp]
----------------hashJoin[LEFT_OUTER_JOIN colocated] hashCondition=((ws.ws_customer_sk = ss.ss_customer_sk) and (ws.ws_item_sk = ss.ss_item_sk) and (ws.ws_sold_year = ss.ss_sold_year)) otherCondition=()
------------------PhysicalProject[d_year AS `ss_sold_year`, ss_item_sk AS `ss_item_sk`, ss_customer_sk AS `ss_customer_sk`, ss_qty AS `ss_qty`, ss_wc AS `ss_wc`, ss_sp AS `ss_sp`]
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalProject[date_dim.d_year, store_sales.ss_item_sk, store_sales.ss_customer_sk, store_sales.ss_quantity, store_sales.ss_wholesale_cost, store_sales.ss_sales_price]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
------------------------------PhysicalProject[store_sales.ss_sold_date_sk, store_sales.ss_item_sk, store_sales.ss_customer_sk, store_sales.ss_quantity, store_sales.ss_wholesale_cost, store_sales.ss_sales_price]
--------------------------------hashJoin[LEFT_ANTI_JOIN colocated] hashCondition=((store_returns.sr_ticket_number = store_sales.ss_ticket_number) and (store_sales.ss_item_sk = store_returns.sr_item_sk)) otherCondition=()
----------------------------------PhysicalProject[store_sales.ss_sold_date_sk, store_sales.ss_item_sk, store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_quantity, store_sales.ss_wholesale_cost, store_sales.ss_sales_price]
------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2
----------------------------------PhysicalProject[store_returns.sr_item_sk, store_returns.sr_ticket_number]
------------------------------------PhysicalOlapScan[store_returns]
------------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_year]
--------------------------------filter((date_dim.d_year = 1998))
----------------------------------PhysicalOlapScan[date_dim]
------------------PhysicalProject[d_year AS `ws_sold_year`, ws_item_sk AS `ws_item_sk`, ws_bill_customer_sk AS `ws_customer_sk`, ws_qty AS `ws_qty`, ws_wc AS `ws_wc`, ws_sp AS `ws_sp`]
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalProject[date_dim.d_year, web_sales.ws_item_sk, web_sales.ws_bill_customer_sk, web_sales.ws_wholesale_cost, web_sales.ws_sales_price, web_sales.ws_quantity]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ws_sold_date_sk]
------------------------------PhysicalProject[web_sales.ws_sold_date_sk, web_sales.ws_item_sk, web_sales.ws_bill_customer_sk, web_sales.ws_quantity, web_sales.ws_wholesale_cost, web_sales.ws_sales_price]
--------------------------------hashJoin[LEFT_ANTI_JOIN colocated] hashCondition=((web_returns.wr_order_number = web_sales.ws_order_number) and (web_sales.ws_item_sk = web_returns.wr_item_sk)) otherCondition=()
----------------------------------PhysicalProject[web_sales.ws_sold_date_sk, web_sales.ws_item_sk, web_sales.ws_order_number, web_sales.ws_bill_customer_sk, web_sales.ws_quantity, web_sales.ws_wholesale_cost, web_sales.ws_sales_price]
------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF1
----------------------------------PhysicalProject[web_returns.wr_item_sk, web_returns.wr_order_number]
------------------------------------PhysicalOlapScan[web_returns]
------------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_year]
--------------------------------filter((date_dim.d_year = 1998))
----------------------------------PhysicalOlapScan[date_dim]
--------------PhysicalProject[d_year AS `cs_sold_year`, cs_item_sk AS `cs_item_sk`, cs_bill_customer_sk AS `cs_customer_sk`, cs_qty AS `cs_qty`, cs_wc AS `cs_wc`, cs_sp AS `cs_sp`]
----------------hashAgg[GLOBAL]
------------------PhysicalDistribute[DistributionSpecHash]
--------------------hashAgg[LOCAL]
----------------------PhysicalProject[date_dim.d_year, catalog_sales.cs_item_sk, catalog_sales.cs_bill_customer_sk, catalog_sales.cs_quantity, catalog_sales.cs_wholesale_cost, catalog_sales.cs_sales_price]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[cs_sold_date_sk]
--------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_bill_customer_sk, catalog_sales.cs_quantity, catalog_sales.cs_wholesale_cost, catalog_sales.cs_sales_price]
----------------------------hashJoin[LEFT_ANTI_JOIN colocated] hashCondition=((catalog_returns.cr_order_number = catalog_sales.cs_order_number) and (catalog_sales.cs_item_sk = catalog_returns.cr_item_sk)) otherCondition=()
------------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_item_sk, catalog_sales.cs_order_number, catalog_sales.cs_bill_customer_sk, catalog_sales.cs_quantity, catalog_sales.cs_wholesale_cost, catalog_sales.cs_sales_price]
--------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0
------------------------------PhysicalProject[catalog_returns.cr_item_sk, catalog_returns.cr_order_number]
--------------------------------PhysicalOlapScan[catalog_returns]
--------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_year]
----------------------------filter((date_dim.d_year = 1998))
------------------------------PhysicalOlapScan[date_dim]

