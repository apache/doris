-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_81 --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----PhysicalProject[ca_state AS `ctr_state`, cr_returning_customer_sk AS `ctr_customer_sk`, customer_total_return.ctr_total_return]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[catalog_returns.cr_return_amt_inc_tax, catalog_returns.cr_returning_customer_sk, customer_address.ca_state]
--------------hashJoin[INNER_JOIN shuffle] hashCondition=((catalog_returns.cr_returning_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF1 ca_address_sk->[cr_returning_addr_sk]
----------------PhysicalProject[catalog_returns.cr_return_amt_inc_tax, catalog_returns.cr_returning_addr_sk, catalog_returns.cr_returning_customer_sk]
------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_returns.cr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[cr_returned_date_sk]
--------------------PhysicalProject[catalog_returns.cr_return_amt_inc_tax, catalog_returns.cr_returned_date_sk, catalog_returns.cr_returning_addr_sk, catalog_returns.cr_returning_customer_sk]
----------------------PhysicalOlapScan[catalog_returns] apply RFs: RF0 RF1
--------------------PhysicalProject[date_dim.d_date_sk]
----------------------filter((date_dim.d_year = 2001))
------------------------PhysicalOlapScan[date_dim]
----------------PhysicalProject[customer_address.ca_address_sk, customer_address.ca_state]
------------------PhysicalOlapScan[customer_address]
--PhysicalResultSink
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject[ctr1.ctr_total_return, customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_salutation, customer_address.ca_city, customer_address.ca_country, customer_address.ca_county, customer_address.ca_gmt_offset, customer_address.ca_location_type, customer_address.ca_state, customer_address.ca_street_name, customer_address.ca_street_number, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_zip]
------------hashJoin[INNER_JOIN broadcast] hashCondition=((ctr1.ctr_state = ctr2.ctr_state)) otherCondition=((cast(ctr_total_return as DOUBLE) > cast((avg(cast(ctr_total_return as DECIMALV3(38, 4))) * 1.2) as DOUBLE))) build RFs:RF4 ctr_state->[ctr_state]
--------------PhysicalProject[ctr1.ctr_state, ctr1.ctr_total_return, customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_salutation, customer_address.ca_city, customer_address.ca_country, customer_address.ca_county, customer_address.ca_gmt_offset, customer_address.ca_location_type, customer_address.ca_state, customer_address.ca_street_name, customer_address.ca_street_number, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_zip]
----------------hashJoin[INNER_JOIN shuffle] hashCondition=((ctr1.ctr_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF3 c_customer_sk->[ctr_customer_sk]
------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF3 RF4
------------------PhysicalProject[customer.c_customer_id, customer.c_customer_sk, customer.c_first_name, customer.c_last_name, customer.c_salutation, customer_address.ca_city, customer_address.ca_country, customer_address.ca_county, customer_address.ca_gmt_offset, customer_address.ca_location_type, customer_address.ca_state, customer_address.ca_street_name, customer_address.ca_street_number, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_zip]
--------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_address.ca_address_sk = customer.c_current_addr_sk)) otherCondition=() build RFs:RF2 ca_address_sk->[c_current_addr_sk]
----------------------PhysicalProject[customer.c_current_addr_sk, customer.c_customer_id, customer.c_customer_sk, customer.c_first_name, customer.c_last_name, customer.c_salutation]
------------------------PhysicalOlapScan[customer] apply RFs: RF2
----------------------PhysicalProject[customer_address.ca_address_sk, customer_address.ca_city, customer_address.ca_country, customer_address.ca_county, customer_address.ca_gmt_offset, customer_address.ca_location_type, customer_address.ca_state, customer_address.ca_street_name, customer_address.ca_street_number, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_zip]
------------------------filter((customer_address.ca_state = 'TN'))
--------------------------PhysicalOlapScan[customer_address]
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecHash]
------------------hashAgg[LOCAL]
--------------------PhysicalDistribute[DistributionSpecExecutionAny]
----------------------PhysicalCteConsumer ( cteId=CTEId#0 )

