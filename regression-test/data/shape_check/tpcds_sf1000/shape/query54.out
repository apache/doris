-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_54 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject
----------hashAgg[GLOBAL]
------------PhysicalDistribute[DistributionSpecHash]
--------------hashAgg[LOCAL]
----------------PhysicalProject
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecHash]
----------------------hashAgg[LOCAL]
------------------------PhysicalProject
--------------------------NestedLoopJoin[INNER_JOIN](cast(d_month_seq as BIGINT) <= d_month_seq+3) build RFs:RF17 d_month_seq+3->[cast(d_month_seq as BIGINT)]
----------------------------PhysicalProject
------------------------------NestedLoopJoin[INNER_JOIN](cast(d_month_seq as BIGINT) >= d_month_seq+1) build RFs:RF16 d_month_seq+1->[cast(d_month_seq as BIGINT)]
--------------------------------PhysicalProject
----------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF14 d_date_sk->[ss_sold_date_sk];RF15 d_date_sk->[ss_sold_date_sk]
------------------------------------PhysicalProject
--------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((my_customers.c_customer_sk = store_sales.ss_customer_sk)) otherCondition=() build RFs:RF12 c_customer_sk->[ss_customer_sk];RF13 c_customer_sk->[ss_customer_sk]
----------------------------------------PhysicalProject
------------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF12 RF13 RF14 RF15
----------------------------------------PhysicalProject
------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer_address.ca_county = store.s_county) and (customer_address.ca_state = store.s_state)) otherCondition=() build RFs:RF8 s_county->[ca_county];RF9 s_county->[ca_county];RF10 s_state->[ca_state];RF11 s_state->[ca_state]
--------------------------------------------PhysicalProject
----------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((my_customers.c_current_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF6 c_current_addr_sk->[ca_address_sk];RF7 c_current_addr_sk->[ca_address_sk]
------------------------------------------------PhysicalProject
--------------------------------------------------PhysicalOlapScan[customer_address] apply RFs: RF6 RF7 RF8 RF9 RF10 RF11
------------------------------------------------PhysicalProject
--------------------------------------------------hashAgg[GLOBAL]
----------------------------------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------------------------------hashAgg[LOCAL]
--------------------------------------------------------PhysicalProject
----------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((customer.c_customer_sk = cs_or_ws_sales.customer_sk)) otherCondition=() build RFs:RF4 customer_sk->[c_customer_sk];RF5 customer_sk->[c_customer_sk]
------------------------------------------------------------PhysicalProject
--------------------------------------------------------------PhysicalOlapScan[customer] apply RFs: RF4 RF5
------------------------------------------------------------PhysicalProject
--------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((cs_or_ws_sales.sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[cs_sold_date_sk,ws_sold_date_sk];RF3 d_date_sk->[cs_sold_date_sk,ws_sold_date_sk]
----------------------------------------------------------------PhysicalProject
------------------------------------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((cs_or_ws_sales.item_sk = item.i_item_sk)) otherCondition=() build RFs:RF0 i_item_sk->[cs_item_sk,ws_item_sk];RF1 i_item_sk->[cs_item_sk,ws_item_sk]
--------------------------------------------------------------------PhysicalUnion
----------------------------------------------------------------------PhysicalDistribute[DistributionSpecExecutionAny]
------------------------------------------------------------------------PhysicalProject
--------------------------------------------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF0 RF1 RF2 RF3
----------------------------------------------------------------------PhysicalDistribute[DistributionSpecExecutionAny]
------------------------------------------------------------------------PhysicalProject
--------------------------------------------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF0 RF1 RF2 RF3
--------------------------------------------------------------------PhysicalProject
----------------------------------------------------------------------filter((item.i_category = 'Music') and (item.i_class = 'country'))
------------------------------------------------------------------------PhysicalOlapScan[item]
----------------------------------------------------------------PhysicalProject
------------------------------------------------------------------filter((date_dim.d_moy = 1) and (date_dim.d_year = 1999))
--------------------------------------------------------------------PhysicalOlapScan[date_dim]
--------------------------------------------PhysicalProject
----------------------------------------------PhysicalOlapScan[store]
------------------------------------PhysicalProject
--------------------------------------PhysicalOlapScan[date_dim] apply RFs: RF16 RF17
--------------------------------PhysicalAssertNumRows
----------------------------------PhysicalDistribute[DistributionSpecGather]
------------------------------------hashAgg[GLOBAL]
--------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------hashAgg[LOCAL]
------------------------------------------PhysicalProject
--------------------------------------------filter((date_dim.d_moy = 1) and (date_dim.d_year = 1999))
----------------------------------------------PhysicalOlapScan[date_dim]
----------------------------PhysicalAssertNumRows
------------------------------PhysicalDistribute[DistributionSpecGather]
--------------------------------hashAgg[GLOBAL]
----------------------------------PhysicalDistribute[DistributionSpecHash]
------------------------------------hashAgg[LOCAL]
--------------------------------------PhysicalProject
----------------------------------------filter((date_dim.d_moy = 1) and (date_dim.d_year = 1999))
------------------------------------------PhysicalOlapScan[date_dim]

