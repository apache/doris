-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_6 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[ca_state AS `state`, cnt]
----------filter((cnt >= 10))
------------hashAgg[GLOBAL]
--------------PhysicalDistribute[DistributionSpecHash]
----------------hashAgg[LOCAL]
------------------PhysicalProject[a.ca_state]
--------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((a.ca_address_sk = c.c_current_addr_sk)) otherCondition=() build RFs:RF5 c_current_addr_sk->[ca_address_sk]
----------------------PhysicalProject[a.ca_address_sk, a.ca_state]
------------------------PhysicalOlapScan[customer_address] apply RFs: RF5
----------------------PhysicalProject[c.c_current_addr_sk]
------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((c.c_customer_sk = s.ss_customer_sk)) otherCondition=() build RFs:RF4 ss_customer_sk->[c_customer_sk]
--------------------------PhysicalProject[c.c_current_addr_sk, c.c_customer_sk]
----------------------------PhysicalOlapScan[customer] apply RFs: RF4
--------------------------PhysicalProject[s.ss_customer_sk]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((s.ss_item_sk = i.i_item_sk)) otherCondition=() build RFs:RF3 i_item_sk->[ss_item_sk]
------------------------------PhysicalProject[s.ss_customer_sk, s.ss_item_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((s.ss_sold_date_sk = d.d_date_sk)) otherCondition=() build RFs:RF2 d_date_sk->[ss_sold_date_sk]
----------------------------------PhysicalProject[s.ss_customer_sk, s.ss_item_sk, s.ss_sold_date_sk]
------------------------------------PhysicalOlapScan[store_sales] apply RFs: RF2 RF3
----------------------------------PhysicalProject[d.d_date_sk]
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((d.d_month_seq = date_dim.d_month_seq)) otherCondition=() build RFs:RF1 d_month_seq->[d_month_seq]
--------------------------------------PhysicalProject[d.d_date_sk, d.d_month_seq]
----------------------------------------PhysicalOlapScan[date_dim] apply RFs: RF1
--------------------------------------PhysicalAssertNumRows
----------------------------------------PhysicalDistribute[DistributionSpecGather]
------------------------------------------hashAgg[GLOBAL]
--------------------------------------------PhysicalDistribute[DistributionSpecHash]
----------------------------------------------hashAgg[LOCAL]
------------------------------------------------PhysicalProject[date_dim.d_month_seq]
--------------------------------------------------filter((date_dim.d_moy = 3) and (date_dim.d_year = 2002))
----------------------------------------------------PhysicalOlapScan[date_dim]
------------------------------PhysicalProject[i.i_item_sk]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((j.i_category = i.i_category)) otherCondition=((cast(i_current_price as DECIMALV3(38, 5)) > (1.2 * avg(cast(i_current_price as DECIMALV3(9, 4)))))) build RFs:RF0 i_category->[i_category]
----------------------------------PhysicalProject[i.i_category, i.i_current_price, i.i_item_sk]
------------------------------------PhysicalOlapScan[item] apply RFs: RF0
----------------------------------hashAgg[GLOBAL]
------------------------------------PhysicalDistribute[DistributionSpecHash]
--------------------------------------hashAgg[LOCAL]
----------------------------------------PhysicalProject[cast(i_current_price as DECIMALV3(9, 4)) AS `cast(i_current_price as DECIMALV3(9, 4))`, j.i_category]
------------------------------------------PhysicalOlapScan[item]

