-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_31 --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----hashAgg[GLOBAL]
------PhysicalDistribute[DistributionSpecHash]
--------hashAgg[LOCAL]
----------PhysicalProject[customer_address.ca_county, date_dim.d_qoy, date_dim.d_year, store_sales.ss_ext_sales_price]
------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_sales.ss_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ss_sold_date_sk]
--------------PhysicalProject[customer_address.ca_county, store_sales.ss_ext_sales_price, store_sales.ss_sold_date_sk]
----------------hashJoin[INNER_JOIN shuffle] hashCondition=((store_sales.ss_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF0 ca_address_sk->[ss_addr_sk]
------------------PhysicalProject[store_sales.ss_addr_sk, store_sales.ss_ext_sales_price, store_sales.ss_sold_date_sk]
--------------------PhysicalOlapScan[store_sales] apply RFs: RF0 RF1
------------------PhysicalProject[customer_address.ca_address_sk, customer_address.ca_county]
--------------------PhysicalOlapScan[customer_address]
--------------PhysicalProject[date_dim.d_date_sk, date_dim.d_qoy, date_dim.d_year]
----------------filter((ss.d_year = 1999) and d_qoy IN (1, 2, 3))
------------------PhysicalOlapScan[date_dim]
--PhysicalCteAnchor ( cteId=CTEId#1 )
----PhysicalCteProducer ( cteId=CTEId#1 )
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[customer_address.ca_county, date_dim.d_qoy, date_dim.d_year, web_sales.ws_ext_sales_price]
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF3 d_date_sk->[ws_sold_date_sk]
----------------PhysicalProject[customer_address.ca_county, web_sales.ws_ext_sales_price, web_sales.ws_sold_date_sk]
------------------hashJoin[INNER_JOIN shuffle] hashCondition=((web_sales.ws_bill_addr_sk = customer_address.ca_address_sk)) otherCondition=() build RFs:RF2 ca_address_sk->[ws_bill_addr_sk]
--------------------PhysicalProject[web_sales.ws_bill_addr_sk, web_sales.ws_ext_sales_price, web_sales.ws_sold_date_sk]
----------------------PhysicalOlapScan[web_sales] apply RFs: RF2 RF3
--------------------PhysicalProject[customer_address.ca_address_sk, customer_address.ca_county]
----------------------PhysicalOlapScan[customer_address]
----------------PhysicalProject[date_dim.d_date_sk, date_dim.d_qoy, date_dim.d_year]
------------------filter((ws.d_year = 1999) and d_qoy IN (1, 2, 3))
--------------------PhysicalOlapScan[date_dim]
----PhysicalResultSink
------PhysicalProject[(cast(store_sales as DECIMALV3(38, 8)) / store_sales) AS `store_q1_q2_increase`, (cast(store_sales as DECIMALV3(38, 8)) / store_sales) AS `store_q2_q3_increase`, (cast(web_sales as DECIMALV3(38, 8)) / web_sales) AS `web_q1_q2_increase`, (cast(web_sales as DECIMALV3(38, 8)) / web_sales) AS `web_q2_q3_increase`, ss1.ca_county, ss1.d_year]
--------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((ws1.ca_county = ws3.ca_county)) otherCondition=((if((web_sales > 0.00), (cast(web_sales as DECIMALV3(38, 8)) / web_sales), NULL) > if((store_sales > 0.00), (cast(store_sales as DECIMALV3(38, 8)) / store_sales), NULL))) build RFs:RF8 ca_county->[ca_county,ca_county,ca_county,ca_county]
----------PhysicalProject[ss1.ca_county, ss1.d_year, ss1.store_sales, ss2.store_sales, ss3.store_sales, ws1.ca_county, ws1.web_sales, ws2.web_sales]
------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((ws1.ca_county = ws2.ca_county)) otherCondition=((if((web_sales > 0.00), (cast(web_sales as DECIMALV3(38, 8)) / web_sales), NULL) > if((store_sales > 0.00), (cast(store_sales as DECIMALV3(38, 8)) / store_sales), NULL))) build RFs:RF7 ca_county->[ca_county,ca_county,ca_county]
--------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((ss1.ca_county = ws1.ca_county)) otherCondition=() build RFs:RF6 ca_county->[ca_county,ca_county]
----------------PhysicalProject[ss1.ca_county, ss1.d_year, ss1.store_sales, ss2.store_sales, ss3.store_sales]
------------------hashJoin[INNER_JOIN bucketShuffle] hashCondition=((ss2.ca_county = ss3.ca_county)) otherCondition=() build RFs:RF5 ca_county->[ca_county,ca_county]
--------------------hashJoin[INNER_JOIN shuffle] hashCondition=((ss1.ca_county = ss2.ca_county)) otherCondition=() build RFs:RF4 ca_county->[ca_county]
----------------------PhysicalProject[ss1.ca_county, ss1.d_year, ss1.store_sales]
------------------------filter((ss1.d_qoy = 1) and (ss1.d_year = 1999))
--------------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF4 RF5 RF6 RF7 RF8
----------------------PhysicalProject[ss2.ca_county, ss2.store_sales]
------------------------filter((ss2.d_qoy = 2) and (ss2.d_year = 1999))
--------------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF5 RF6 RF7 RF8
--------------------PhysicalProject[ss3.ca_county, ss3.store_sales]
----------------------filter((ss3.d_qoy = 3) and (ss3.d_year = 1999))
------------------------PhysicalCteConsumer ( cteId=CTEId#0 )
----------------PhysicalProject[ws1.ca_county, ws1.web_sales]
------------------filter((ws1.d_qoy = 1) and (ws1.d_year = 1999))
--------------------PhysicalCteConsumer ( cteId=CTEId#1 ) apply RFs: RF7 RF8
--------------PhysicalProject[ws2.ca_county, ws2.web_sales]
----------------filter((ws2.d_qoy = 2) and (ws2.d_year = 1999))
------------------PhysicalCteConsumer ( cteId=CTEId#1 ) apply RFs: RF8
----------PhysicalProject[ws3.ca_county, ws3.web_sales]
------------filter((ws3.d_qoy = 3) and (ws3.d_year = 1999))
--------------PhysicalCteConsumer ( cteId=CTEId#1 )

