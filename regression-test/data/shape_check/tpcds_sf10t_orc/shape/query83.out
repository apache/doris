-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_83 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------PhysicalProject[((cast(cr_item_qty as DOUBLE) / cast(((sr_item_qty + cr_item_qty) + wr_item_qty) as DOUBLE)) / 0.03) AS `cr_dev`, ((cast(sr_item_qty as DOUBLE) / cast(((sr_item_qty + cr_item_qty) + wr_item_qty) as DOUBLE)) / 0.03) AS `sr_dev`, ((cast(wr_item_qty as DOUBLE) / cast(((sr_item_qty + cr_item_qty) + wr_item_qty) as DOUBLE)) / 0.03) AS `wr_dev`, (cast(((sr_item_qty + cr_item_qty) + wr_item_qty) as DECIMALV3(25, 5)) / 3.0) AS `average`, cr_items.cr_item_qty, sr_items.item_id, sr_items.sr_item_qty, wr_items.wr_item_qty]
----------hashJoin[INNER_JOIN colocated] hashCondition=((sr_items.item_id = wr_items.item_id)) otherCondition=() build RFs:RF13 item_id->[i_item_id,i_item_id]
------------PhysicalProject[cr_items.cr_item_qty, sr_items.item_id, sr_items.sr_item_qty]
--------------hashJoin[INNER_JOIN colocated] hashCondition=((sr_items.item_id = cr_items.item_id)) otherCondition=() build RFs:RF12 item_id->[i_item_id]
----------------PhysicalProject[i_item_id AS `item_id`, sr_item_qty AS `sr_item_qty`]
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecHash]
----------------------hashAgg[LOCAL]
------------------------PhysicalProject[item.i_item_id, store_returns.sr_return_quantity]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_returns.sr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF11 d_date_sk->[sr_returned_date_sk]
----------------------------PhysicalProject[item.i_item_id, store_returns.sr_return_quantity, store_returns.sr_returned_date_sk]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_returns.sr_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF10 i_item_sk->[sr_item_sk]
--------------------------------PhysicalProject[store_returns.sr_item_sk, store_returns.sr_return_quantity, store_returns.sr_returned_date_sk]
----------------------------------PhysicalOlapScan[store_returns] apply RFs: RF10 RF11
--------------------------------PhysicalProject[item.i_item_id, item.i_item_sk]
----------------------------------PhysicalOlapScan[item] apply RFs: RF12 RF13
----------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((date_dim.d_date = date_dim.d_date)) otherCondition=() build RFs:RF9 d_date->[d_date]
--------------------------------PhysicalProject[date_dim.d_date, date_dim.d_date_sk]
----------------------------------PhysicalOlapScan[date_dim] apply RFs: RF9
--------------------------------PhysicalProject[date_dim.d_date]
----------------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((date_dim.d_week_seq = date_dim.d_week_seq)) otherCondition=() build RFs:RF8 d_week_seq->[d_week_seq]
------------------------------------PhysicalProject[date_dim.d_date, date_dim.d_week_seq]
--------------------------------------PhysicalOlapScan[date_dim] apply RFs: RF8
------------------------------------PhysicalProject[date_dim.d_week_seq]
--------------------------------------filter(d_date IN ('2000-06-17', '2000-08-22', '2000-11-17'))
----------------------------------------PhysicalOlapScan[date_dim]
----------------PhysicalProject[cr_item_qty AS `cr_item_qty`, i_item_id AS `item_id`]
------------------hashAgg[GLOBAL]
--------------------PhysicalDistribute[DistributionSpecHash]
----------------------hashAgg[LOCAL]
------------------------PhysicalProject[catalog_returns.cr_return_quantity, item.i_item_id]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_returns.cr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF7 d_date_sk->[cr_returned_date_sk]
----------------------------PhysicalProject[catalog_returns.cr_return_quantity, catalog_returns.cr_returned_date_sk, item.i_item_id]
------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_returns.cr_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF6 i_item_sk->[cr_item_sk]
--------------------------------PhysicalProject[catalog_returns.cr_item_sk, catalog_returns.cr_return_quantity, catalog_returns.cr_returned_date_sk]
----------------------------------PhysicalOlapScan[catalog_returns] apply RFs: RF6 RF7
--------------------------------PhysicalProject[item.i_item_id, item.i_item_sk]
----------------------------------PhysicalOlapScan[item] apply RFs: RF13
----------------------------PhysicalProject[date_dim.d_date_sk]
------------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((date_dim.d_date = date_dim.d_date)) otherCondition=() build RFs:RF5 d_date->[d_date]
--------------------------------PhysicalProject[date_dim.d_date, date_dim.d_date_sk]
----------------------------------PhysicalOlapScan[date_dim] apply RFs: RF5
--------------------------------PhysicalProject[date_dim.d_date]
----------------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((date_dim.d_week_seq = date_dim.d_week_seq)) otherCondition=() build RFs:RF4 d_week_seq->[d_week_seq]
------------------------------------PhysicalProject[date_dim.d_date, date_dim.d_week_seq]
--------------------------------------PhysicalOlapScan[date_dim] apply RFs: RF4
------------------------------------PhysicalProject[date_dim.d_week_seq]
--------------------------------------filter(d_date IN ('2000-06-17', '2000-08-22', '2000-11-17'))
----------------------------------------PhysicalOlapScan[date_dim]
------------PhysicalProject[i_item_id AS `item_id`, wr_item_qty AS `wr_item_qty`]
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecHash]
------------------hashAgg[LOCAL]
--------------------PhysicalProject[item.i_item_id, web_returns.wr_return_quantity]
----------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_returns.wr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF3 d_date_sk->[wr_returned_date_sk]
------------------------PhysicalProject[item.i_item_id, web_returns.wr_return_quantity, web_returns.wr_returned_date_sk]
--------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_returns.wr_item_sk = item.i_item_sk)) otherCondition=() build RFs:RF2 i_item_sk->[wr_item_sk]
----------------------------PhysicalProject[web_returns.wr_item_sk, web_returns.wr_return_quantity, web_returns.wr_returned_date_sk]
------------------------------PhysicalOlapScan[web_returns] apply RFs: RF2 RF3
----------------------------PhysicalProject[item.i_item_id, item.i_item_sk]
------------------------------PhysicalOlapScan[item]
------------------------PhysicalProject[date_dim.d_date_sk]
--------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((date_dim.d_date = date_dim.d_date)) otherCondition=() build RFs:RF1 d_date->[d_date]
----------------------------PhysicalProject[date_dim.d_date, date_dim.d_date_sk]
------------------------------PhysicalOlapScan[date_dim] apply RFs: RF1
----------------------------PhysicalProject[date_dim.d_date]
------------------------------hashJoin[LEFT_SEMI_JOIN broadcast] hashCondition=((date_dim.d_week_seq = date_dim.d_week_seq)) otherCondition=() build RFs:RF0 d_week_seq->[d_week_seq]
--------------------------------PhysicalProject[date_dim.d_date, date_dim.d_week_seq]
----------------------------------PhysicalOlapScan[date_dim] apply RFs: RF0
--------------------------------PhysicalProject[date_dim.d_week_seq]
----------------------------------filter(d_date IN ('2000-06-17', '2000-08-22', '2000-11-17'))
------------------------------------PhysicalOlapScan[date_dim]

