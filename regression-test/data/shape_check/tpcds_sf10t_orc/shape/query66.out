-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_66 --
PhysicalResultSink
--PhysicalTopN[MERGE_SORT]
----PhysicalDistribute[DistributionSpecGather]
------PhysicalTopN[LOCAL_SORT]
--------hashAgg[GLOBAL]
----------PhysicalDistribute[DistributionSpecHash]
------------hashAgg[LOCAL]
--------------PhysicalProject[x.jan_net, x.feb_net, x.mar_net, x.apr_net, x.may_net, x.jun_net, x.jul_net, x.aug_net, x.sep_net, x.oct_net, x.nov_net, x.dec_net, x.w_warehouse_name, x.w_warehouse_sq_ft, x.w_city, x.w_county, x.w_state, x.w_country, x.ship_carriers, x.year, x.jan_sales, x.feb_sales, x.mar_sales, x.apr_sales, x.may_sales, x.jun_sales, x.jul_sales, x.aug_sales, x.sep_sales, x.oct_sales, x.nov_sales, x.dec_sales, (cast(jan_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(jan_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(may_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(may_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(apr_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(apr_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(mar_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(mar_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(feb_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(feb_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(sep_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(sep_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(aug_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(aug_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(jul_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(jul_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(jun_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(jun_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(dec_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(dec_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(nov_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(nov_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`, (cast(oct_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0))) AS `(cast(oct_sales as DECIMALV3(38, 6)) / cast(w_warehouse_sq_ft as DECIMALV3(10, 0)))`]
----------------PhysicalUnion
------------------PhysicalProject[warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, 'MSC , GERMA' AS `ship_carriers`, d_year AS `year`, jan_net, feb_net, mar_net, apr_net, may_net, jun_net, jul_net, aug_net, sep_net, oct_net, nov_net, dec_net, jan_sales, feb_sales, mar_sales, apr_sales, may_sales, jun_sales, jul_sales, aug_sales, sep_sales, oct_sales, nov_sales, dec_sales]
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalProject[warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, date_dim.d_year, if((d_moy = 2), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 2), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 3), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 3), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 11), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 11), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 1), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 1), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 12), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 12), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 6), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 6), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 7), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 7), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 4), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 4), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 5), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 5), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 5), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 5), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 6), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 6), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 3), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 3), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 4), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 4), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 9), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 9), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 10), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 10), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 7), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 7), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 8), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 8), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 1), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 1), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 2), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 2), (ws_net_paid_inc_ship_tax * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 10), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 10), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 11), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 11), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 8), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 8), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 9), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 9), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 12), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 12), (ws_sales_price * cast(ws_quantity as DECIMALV3(10, 0))), 0.00)`]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_ship_mode_sk = ship_mode.sm_ship_mode_sk)) otherCondition=() build RFs:RF3 sm_ship_mode_sk->[ws_ship_mode_sk]
------------------------------PhysicalProject[web_sales.ws_ship_mode_sk, web_sales.ws_quantity, web_sales.ws_sales_price, web_sales.ws_net_paid_inc_ship_tax, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, date_dim.d_year, date_dim.d_moy]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF2 t_time_sk->[ws_sold_time_sk]
----------------------------------PhysicalProject[web_sales.ws_sold_time_sk, web_sales.ws_ship_mode_sk, web_sales.ws_quantity, web_sales.ws_sales_price, web_sales.ws_net_paid_inc_ship_tax, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, date_dim.d_year, date_dim.d_moy]
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF1 d_date_sk->[ws_sold_date_sk]
--------------------------------------PhysicalProject[web_sales.ws_sold_date_sk, web_sales.ws_sold_time_sk, web_sales.ws_ship_mode_sk, web_sales.ws_quantity, web_sales.ws_sales_price, web_sales.ws_net_paid_inc_ship_tax, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country]
----------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((web_sales.ws_warehouse_sk = warehouse.w_warehouse_sk)) otherCondition=() build RFs:RF0 w_warehouse_sk->[ws_warehouse_sk]
------------------------------------------PhysicalProject[web_sales.ws_sold_date_sk, web_sales.ws_sold_time_sk, web_sales.ws_ship_mode_sk, web_sales.ws_warehouse_sk, web_sales.ws_quantity, web_sales.ws_sales_price, web_sales.ws_net_paid_inc_ship_tax]
--------------------------------------------PhysicalOlapScan[web_sales] apply RFs: RF0 RF1 RF2 RF3
------------------------------------------PhysicalProject[warehouse.w_warehouse_sk, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country]
--------------------------------------------PhysicalOlapScan[warehouse]
--------------------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_year, date_dim.d_moy]
----------------------------------------filter((date_dim.d_year = 2001))
------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------PhysicalProject[time_dim.t_time_sk]
------------------------------------filter((time_dim.t_time <= 38253) and (time_dim.t_time >= 9453))
--------------------------------------PhysicalOlapScan[time_dim]
------------------------------PhysicalProject[ship_mode.sm_ship_mode_sk]
--------------------------------filter(sm_carrier IN ('GERMA', 'MSC'))
----------------------------------PhysicalOlapScan[ship_mode]
------------------PhysicalProject[warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, 'MSC , GERMA' AS `ship_carriers`, d_year AS `year`, jan_net, feb_net, mar_net, apr_net, may_net, jun_net, jul_net, aug_net, sep_net, oct_net, nov_net, dec_net, jan_sales, feb_sales, mar_sales, apr_sales, may_sales, jun_sales, jul_sales, aug_sales, sep_sales, oct_sales, nov_sales, dec_sales]
--------------------hashAgg[GLOBAL]
----------------------PhysicalDistribute[DistributionSpecHash]
------------------------hashAgg[LOCAL]
--------------------------PhysicalProject[warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, date_dim.d_year, if((d_moy = 4), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 4), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 10), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 10), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 5), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 5), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 11), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 11), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 6), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 6), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 12), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 12), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 7), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 7), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 6), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 6), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 1), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 1), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 7), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 7), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 2), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 2), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 8), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 8), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 3), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 3), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 9), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 9), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 2), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 2), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 3), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 3), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 4), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 4), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 5), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 5), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 1), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 1), (cs_net_paid_inc_ship * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 12), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 12), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 8), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 8), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 9), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 9), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 10), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 10), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`, if((d_moy = 11), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00) AS `if((d_moy = 11), (cs_ext_list_price * cast(cs_quantity as DECIMALV3(10, 0))), 0.00)`]
----------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_ship_mode_sk = ship_mode.sm_ship_mode_sk)) otherCondition=() build RFs:RF7 sm_ship_mode_sk->[cs_ship_mode_sk]
------------------------------PhysicalProject[catalog_sales.cs_ship_mode_sk, catalog_sales.cs_quantity, catalog_sales.cs_ext_list_price, catalog_sales.cs_net_paid_inc_ship, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, date_dim.d_year, date_dim.d_moy]
--------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_time_sk = time_dim.t_time_sk)) otherCondition=() build RFs:RF6 t_time_sk->[cs_sold_time_sk]
----------------------------------PhysicalProject[catalog_sales.cs_sold_time_sk, catalog_sales.cs_ship_mode_sk, catalog_sales.cs_quantity, catalog_sales.cs_ext_list_price, catalog_sales.cs_net_paid_inc_ship, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, date_dim.d_year, date_dim.d_moy]
------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_sold_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF5 d_date_sk->[cs_sold_date_sk]
--------------------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_sold_time_sk, catalog_sales.cs_ship_mode_sk, catalog_sales.cs_quantity, catalog_sales.cs_ext_list_price, catalog_sales.cs_net_paid_inc_ship, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country]
----------------------------------------hashJoin[INNER_JOIN broadcast] hashCondition=((catalog_sales.cs_warehouse_sk = warehouse.w_warehouse_sk)) otherCondition=() build RFs:RF4 w_warehouse_sk->[cs_warehouse_sk]
------------------------------------------PhysicalProject[catalog_sales.cs_sold_date_sk, catalog_sales.cs_sold_time_sk, catalog_sales.cs_ship_mode_sk, catalog_sales.cs_warehouse_sk, catalog_sales.cs_quantity, catalog_sales.cs_ext_list_price, catalog_sales.cs_net_paid_inc_ship]
--------------------------------------------PhysicalOlapScan[catalog_sales] apply RFs: RF4 RF5 RF6 RF7
------------------------------------------PhysicalProject[warehouse.w_warehouse_sk, warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country]
--------------------------------------------PhysicalOlapScan[warehouse]
--------------------------------------PhysicalProject[date_dim.d_date_sk, date_dim.d_year, date_dim.d_moy]
----------------------------------------filter((date_dim.d_year = 2001))
------------------------------------------PhysicalOlapScan[date_dim]
----------------------------------PhysicalProject[time_dim.t_time_sk]
------------------------------------filter((time_dim.t_time <= 38253) and (time_dim.t_time >= 9453))
--------------------------------------PhysicalOlapScan[time_dim]
------------------------------PhysicalProject[ship_mode.sm_ship_mode_sk]
--------------------------------filter(sm_carrier IN ('GERMA', 'MSC'))
----------------------------------PhysicalOlapScan[ship_mode]

