-- This file is automatically generated. You should know what you did if you want to edit this
-- !ds_shape_1 --
PhysicalCteAnchor ( cteId=CTEId#0 )
--PhysicalCteProducer ( cteId=CTEId#0 )
----PhysicalProject[customer_total_return.ctr_total_return, sr_customer_sk AS `ctr_customer_sk`, sr_store_sk AS `ctr_store_sk`]
------hashAgg[GLOBAL]
--------PhysicalDistribute[DistributionSpecHash]
----------hashAgg[LOCAL]
------------PhysicalProject[store_returns.SR_FEE, store_returns.sr_customer_sk, store_returns.sr_store_sk]
--------------hashJoin[INNER_JOIN broadcast] hashCondition=((store_returns.sr_returned_date_sk = date_dim.d_date_sk)) otherCondition=() build RFs:RF0 d_date_sk->[sr_returned_date_sk]
----------------PhysicalProject[store_returns.sr_customer_sk, store_returns.sr_fee, store_returns.sr_returned_date_sk, store_returns.sr_store_sk]
------------------PhysicalOlapScan[store_returns] apply RFs: RF0
----------------PhysicalProject[date_dim.d_date_sk]
------------------filter((date_dim.d_year = 2000))
--------------------PhysicalOlapScan[date_dim]
--PhysicalResultSink
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute[DistributionSpecGather]
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject[customer.c_customer_id]
------------hashJoin[INNER_JOIN shuffleBucket] hashCondition=((ctr1.ctr_store_sk = ctr2.ctr_store_sk)) otherCondition=((cast(ctr_total_return as DOUBLE) > cast((avg(cast(ctr_total_return as DECIMALV3(38, 4))) * 1.2) as DOUBLE))) build RFs:RF3 ctr_store_sk->[ctr_store_sk,s_store_sk]
--------------PhysicalProject[ctr1.ctr_store_sk, ctr1.ctr_total_return, customer.c_customer_id]
----------------hashJoin[INNER_JOIN broadcast] hashCondition=((store.s_store_sk = ctr1.ctr_store_sk)) otherCondition=() build RFs:RF2 s_store_sk->[ctr_store_sk]
------------------PhysicalProject[customer.c_customer_id, customer_total_return.ctr_store_sk, customer_total_return.ctr_total_return]
--------------------hashJoin[INNER_JOIN shuffle] hashCondition=((ctr1.ctr_customer_sk = customer.c_customer_sk)) otherCondition=() build RFs:RF1 c_customer_sk->[ctr_customer_sk]
----------------------PhysicalCteConsumer ( cteId=CTEId#0 ) apply RFs: RF1 RF2 RF3
----------------------PhysicalProject[customer.c_customer_id, customer.c_customer_sk]
------------------------PhysicalOlapScan[customer]
------------------PhysicalProject[store.s_store_sk]
--------------------filter((store.s_state = 'NM'))
----------------------PhysicalOlapScan[store] apply RFs: RF3
--------------hashAgg[GLOBAL]
----------------PhysicalDistribute[DistributionSpecHash]
------------------hashAgg[LOCAL]
--------------------PhysicalDistribute[DistributionSpecExecutionAny]
----------------------PhysicalCteConsumer ( cteId=CTEId#0 )

