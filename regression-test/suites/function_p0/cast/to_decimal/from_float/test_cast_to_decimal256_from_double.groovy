// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.


suite("test_cast_to_decimal256_from_double") {

    // This test case is generated from the correspoinding be UT test case,
    // update this case if the correspoinding be UT test case is updated,
    // e.g.: ../run-be-ut.sh --run --filter=FunctionCastToDecimalTest.* --gen_regression_case
    sql "set enable_decimal256 = true;"
    sql "drop table if exists test_cast_to_decimal256_76_0_from_double;"
    sql "create table test_cast_to_decimal256_76_0_from_double(f1 int, f2 double) properties('replication_num'='1');"
    sql """insert into test_cast_to_decimal256_76_0_from_double values (0, "0.03"),(1, "1.03"),(2, "9.03"),(3, "0.09"),(4, "1.09"),(5, "9.09"),(6, "-0.03"),(7, "-1.03"),(8, "-9.03"),(9, "-0.09"),
      (10, "-1.09"),(11, "-9.09");
    """

    sql "set enable_strict_cast=true;"
    qt_sql_0_strict 'select f1, cast(f2 as decimalv3(76, 0)) from test_cast_to_decimal256_76_0_from_double order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_0_non_strict 'select f1, cast(f2 as decimalv3(76, 0)) from test_cast_to_decimal256_76_0_from_double order by 1;'

    sql "drop table if exists test_cast_to_decimal256_76_38_from_double;"
    sql "create table test_cast_to_decimal256_76_38_from_double(f1 int, f2 double) properties('replication_num'='1');"
    sql """insert into test_cast_to_decimal256_76_38_from_double values (12, "0.000000000000000000000000000000000000003"),(13, "0.000000000000000000000000000000000000013"),(14, "0.000000000000000000000000000000000000093"),(15, "0.099999999999999999999999999999999999993"),(16, "0.900000000000000000000000000000000000003"),(17, "0.900000000000000000000000000000000000013"),(18, "0.999999999999999999999999999999999999983"),(19, "0.999999999999999999999999999999999999993"),(20, "1.000000000000000000000000000000000000003"),(21, "1.000000000000000000000000000000000000013"),
      (22, "1.000000000000000000000000000000000000093"),(23, "1.099999999999999999999999999999999999993"),(24, "0.000000000000000000000000000000000000009"),(25, "0.000000000000000000000000000000000000019"),(26, "0.000000000000000000000000000000000000099"),(27, "0.099999999999999999999999999999999999999"),(28, "0.900000000000000000000000000000000000009"),(29, "0.900000000000000000000000000000000000019"),(30, "0.999999999999999999999999999999999999989"),(31, "0.999999999999999999999999999999999999999"),
      (32, "1.000000000000000000000000000000000000009"),(33, "1.000000000000000000000000000000000000019"),(34, "1.000000000000000000000000000000000000099"),(35, "1.099999999999999999999999999999999999999"),(36, "-0.000000000000000000000000000000000000003"),(37, "-0.000000000000000000000000000000000000013"),(38, "-0.000000000000000000000000000000000000093"),(39, "-0.099999999999999999999999999999999999993"),(40, "-0.900000000000000000000000000000000000003"),(41, "-0.900000000000000000000000000000000000013"),
      (42, "-0.999999999999999999999999999999999999983"),(43, "-0.999999999999999999999999999999999999993"),(44, "-1.000000000000000000000000000000000000003"),(45, "-1.000000000000000000000000000000000000013"),(46, "-1.000000000000000000000000000000000000093"),(47, "-1.099999999999999999999999999999999999993"),(48, "-0.000000000000000000000000000000000000009"),(49, "-0.000000000000000000000000000000000000019"),(50, "-0.000000000000000000000000000000000000099"),(51, "-0.099999999999999999999999999999999999999"),
      (52, "-0.900000000000000000000000000000000000009"),(53, "-0.900000000000000000000000000000000000019"),(54, "-0.999999999999999999999999999999999999989"),(55, "-0.999999999999999999999999999999999999999"),(56, "-1.000000000000000000000000000000000000009"),(57, "-1.000000000000000000000000000000000000019"),(58, "-1.000000000000000000000000000000000000099"),(59, "-1.099999999999999999999999999999999999999");
    """

    sql "set enable_strict_cast=true;"
    qt_sql_1_strict 'select f1, cast(f2 as decimalv3(76, 38)) from test_cast_to_decimal256_76_38_from_double order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_1_non_strict 'select f1, cast(f2 as decimalv3(76, 38)) from test_cast_to_decimal256_76_38_from_double order by 1;'

    sql "drop table if exists test_cast_to_decimal256_76_75_from_double;"
    sql "create table test_cast_to_decimal256_76_75_from_double(f1 int, f2 double) properties('replication_num'='1');"
    sql """insert into test_cast_to_decimal256_76_75_from_double values
      (70, "-0.0000000000000000000000000000000000000000000000000000000000000000000000000019"),(71, "-0.0000000000000000000000000000000000000000000000000000000000000000000000000099");
    """

    sql "set enable_strict_cast=true;"
    qt_sql_2_strict 'select f1, cast(f2 as decimalv3(76, 75)) from test_cast_to_decimal256_76_75_from_double order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_2_non_strict 'select f1, cast(f2 as decimalv3(76, 75)) from test_cast_to_decimal256_76_75_from_double order by 1;'

}