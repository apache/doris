// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.


suite("test_cast_to_int_from_decimal32_9_8") {

    // This test case is generated from the correspoinding be UT test case,
    // update this case if the correspoinding be UT test case is updated,
    // e.g.: ../run-be-ut.sh --run --filter=FunctionCastToDecimalTest.* --gen_regression_case
    sql "drop table if exists test_cast_to_int_from_decimal32_9_8_0_nullable;"
    sql "create table test_cast_to_int_from_decimal32_9_8_0_nullable(f1 int, f2 decimalv3(9, 8)) properties('replication_num'='1');"
    sql """insert into test_cast_to_int_from_decimal32_9_8_0_nullable values (0, "0.00000000"),(1, "0.00000000"),(2, "0.00000001"),(3, "-0.00000001"),(4, "0.00000009"),(5, "-0.00000009"),(6, "0.99999999"),(7, "-0.99999999"),(8, "0.99999998"),(9, "-0.99999998"),(10, "0.09999999"),(11, "-0.09999999"),(12, "0.90000000"),(13, "-0.90000000"),(14, "0.90000001"),(15, "-0.90000001"),(16, "1.00000000"),(17, "-1.00000000"),(18, "1.00000001"),(19, "-1.00000001"),
      (20, "1.00000009"),(21, "-1.00000009"),(22, "1.99999999"),(23, "-1.99999999"),(24, "1.99999998"),(25, "-1.99999998"),(26, "1.09999999"),(27, "-1.09999999"),(28, "1.90000000"),(29, "-1.90000000"),(30, "1.90000001"),(31, "-1.90000001"),(32, "9.00000000"),(33, "-9.00000000"),(34, "9.00000001"),(35, "-9.00000001"),(36, "9.00000009"),(37, "-9.00000009"),(38, "9.99999999"),(39, "-9.99999999"),
      (40, "9.99999998"),(41, "-9.99999998"),(42, "9.09999999"),(43, "-9.09999999"),(44, "9.90000000"),(45, "-9.90000000"),(46, "9.90000001"),(47, "-9.90000001"),(48, "9.00000000"),(49, "-9.00000000"),(50, "9.00000001"),(51, "-9.00000001"),(52, "9.00000009"),(53, "-9.00000009"),(54, "9.99999999"),(55, "-9.99999999"),(56, "9.99999998"),(57, "-9.99999998"),(58, "9.09999999"),(59, "-9.09999999"),
      (60, "9.90000000"),(61, "-9.90000000"),(62, "9.90000001"),(63, "-9.90000001"),(64, "8.00000000"),(65, "-8.00000000"),(66, "8.00000001"),(67, "-8.00000001"),(68, "8.00000009"),(69, "-8.00000009"),(70, "8.99999999"),(71, "-8.99999999"),(72, "8.99999998"),(73, "-8.99999998"),(74, "8.09999999"),(75, "-8.09999999"),(76, "8.90000000"),(77, "-8.90000000"),(78, "8.90000001"),(79, "-8.90000001"),
      (80, "0.00000000"),(81, "0.00000000"),(82, "0.00000001"),(83, "-0.00000001"),(84, "0.00000009"),(85, "-0.00000009"),(86, "0.99999999"),(87, "-0.99999999"),(88, "0.99999998"),(89, "-0.99999998"),(90, "0.09999999"),(91, "-0.09999999"),(92, "0.90000000"),(93, "-0.90000000"),(94, "0.90000001"),(95, "-0.90000001"),(96, "9.00000000"),(97, "-9.00000000"),(98, "9.00000001"),(99, "-9.00000001"),
      (100, "9.00000009"),(101, "-9.00000009"),(102, "9.99999999"),(103, "-9.99999999"),(104, "9.99999998"),(105, "-9.99999998"),(106, "9.09999999"),(107, "-9.09999999"),(108, "9.90000000"),(109, "-9.90000000"),(110, "9.90000001"),(111, "-9.90000001"),(112, "8.00000000"),(113, "-8.00000000"),(114, "8.00000001"),(115, "-8.00000001"),(116, "8.00000009"),(117, "-8.00000009"),(118, "8.99999999"),(119, "-8.99999999"),
      (120, "8.99999998"),(121, "-8.99999998"),(122, "8.09999999"),(123, "-8.09999999"),(124, "8.90000000"),(125, "-8.90000000"),(126, "8.90000001"),(127, "-8.90000001")
      ,(128, null);
    """

    sql "set enable_strict_cast=true;"
    qt_sql_0_strict 'select f1, cast(f2 as int) from test_cast_to_int_from_decimal32_9_8_0_nullable order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_0_non_strict 'select f1, cast(f2 as int) from test_cast_to_int_from_decimal32_9_8_0_nullable order by 1;'

    sql "drop table if exists test_cast_to_int_from_decimal32_9_8_0_not_nullable;"
    sql "create table test_cast_to_int_from_decimal32_9_8_0_not_nullable(f1 int, f2 decimalv3(9, 8)) properties('replication_num'='1');"
    sql """insert into test_cast_to_int_from_decimal32_9_8_0_not_nullable values (0, "0.00000000"),(1, "0.00000000"),(2, "0.00000001"),(3, "-0.00000001"),(4, "0.00000009"),(5, "-0.00000009"),(6, "0.99999999"),(7, "-0.99999999"),(8, "0.99999998"),(9, "-0.99999998"),(10, "0.09999999"),(11, "-0.09999999"),(12, "0.90000000"),(13, "-0.90000000"),(14, "0.90000001"),(15, "-0.90000001"),(16, "1.00000000"),(17, "-1.00000000"),(18, "1.00000001"),(19, "-1.00000001"),
      (20, "1.00000009"),(21, "-1.00000009"),(22, "1.99999999"),(23, "-1.99999999"),(24, "1.99999998"),(25, "-1.99999998"),(26, "1.09999999"),(27, "-1.09999999"),(28, "1.90000000"),(29, "-1.90000000"),(30, "1.90000001"),(31, "-1.90000001"),(32, "9.00000000"),(33, "-9.00000000"),(34, "9.00000001"),(35, "-9.00000001"),(36, "9.00000009"),(37, "-9.00000009"),(38, "9.99999999"),(39, "-9.99999999"),
      (40, "9.99999998"),(41, "-9.99999998"),(42, "9.09999999"),(43, "-9.09999999"),(44, "9.90000000"),(45, "-9.90000000"),(46, "9.90000001"),(47, "-9.90000001"),(48, "9.00000000"),(49, "-9.00000000"),(50, "9.00000001"),(51, "-9.00000001"),(52, "9.00000009"),(53, "-9.00000009"),(54, "9.99999999"),(55, "-9.99999999"),(56, "9.99999998"),(57, "-9.99999998"),(58, "9.09999999"),(59, "-9.09999999"),
      (60, "9.90000000"),(61, "-9.90000000"),(62, "9.90000001"),(63, "-9.90000001"),(64, "8.00000000"),(65, "-8.00000000"),(66, "8.00000001"),(67, "-8.00000001"),(68, "8.00000009"),(69, "-8.00000009"),(70, "8.99999999"),(71, "-8.99999999"),(72, "8.99999998"),(73, "-8.99999998"),(74, "8.09999999"),(75, "-8.09999999"),(76, "8.90000000"),(77, "-8.90000000"),(78, "8.90000001"),(79, "-8.90000001"),
      (80, "0.00000000"),(81, "0.00000000"),(82, "0.00000001"),(83, "-0.00000001"),(84, "0.00000009"),(85, "-0.00000009"),(86, "0.99999999"),(87, "-0.99999999"),(88, "0.99999998"),(89, "-0.99999998"),(90, "0.09999999"),(91, "-0.09999999"),(92, "0.90000000"),(93, "-0.90000000"),(94, "0.90000001"),(95, "-0.90000001"),(96, "9.00000000"),(97, "-9.00000000"),(98, "9.00000001"),(99, "-9.00000001"),
      (100, "9.00000009"),(101, "-9.00000009"),(102, "9.99999999"),(103, "-9.99999999"),(104, "9.99999998"),(105, "-9.99999998"),(106, "9.09999999"),(107, "-9.09999999"),(108, "9.90000000"),(109, "-9.90000000"),(110, "9.90000001"),(111, "-9.90000001"),(112, "8.00000000"),(113, "-8.00000000"),(114, "8.00000001"),(115, "-8.00000001"),(116, "8.00000009"),(117, "-8.00000009"),(118, "8.99999999"),(119, "-8.99999999"),
      (120, "8.99999998"),(121, "-8.99999998"),(122, "8.09999999"),(123, "-8.09999999"),(124, "8.90000000"),(125, "-8.90000000"),(126, "8.90000001"),(127, "-8.90000001");
    """

    sql "set enable_strict_cast=true;"
    qt_sql_0_strict 'select f1, cast(f2 as int) from test_cast_to_int_from_decimal32_9_8_0_not_nullable order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_0_non_strict 'select f1, cast(f2 as int) from test_cast_to_int_from_decimal32_9_8_0_not_nullable order by 1;'

}