// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.


suite("test_cast_to_bigint_from_decimalv2_20_6") {

    // This test case is generated from the correspoinding be UT test case,
    // update this case if the correspoinding be UT test case is updated,
    // e.g.: ../run-be-ut.sh --run --filter=FunctionCastToDecimalTest.* --gen_regression_case
    sql "drop table if exists test_cast_to_bigint_from_decimalv2_20_6_0_nullable;"
    sql "create table test_cast_to_bigint_from_decimalv2_20_6_0_nullable(f1 int, f2 decimalv2(20, 6)) properties('replication_num'='1');"
    sql """insert into test_cast_to_bigint_from_decimalv2_20_6_0_nullable values (0, "0.000000"),(1, "0.000000"),(2, "0.000001"),(3, "-0.000001"),(4, "0.000009"),(5, "-0.000009"),(6, "0.999999"),(7, "-0.999999"),(8, "0.999998"),(9, "-0.999998"),(10, "0.099999"),(11, "-0.099999"),(12, "0.900000"),(13, "-0.900000"),(14, "0.900001"),(15, "-0.900001"),(16, "1000.000000"),(17, "-1000.000000"),(18, "1000.000001"),(19, "-1000.000001"),
      (20, "1000.000009"),(21, "-1000.000009"),(22, "1000.999999"),(23, "-1000.999999"),(24, "1000.999998"),(25, "-1000.999998"),(26, "1000.099999"),(27, "-1000.099999"),(28, "1000.900000"),(29, "-1000.900000"),(30, "1000.900001"),(31, "-1000.900001"),(32, "9000.000000"),(33, "-9000.000000"),(34, "9000.000001"),(35, "-9000.000001"),(36, "9000.000009"),(37, "-9000.000009"),(38, "9000.999999"),(39, "-9000.999999"),
      (40, "9000.999998"),(41, "-9000.999998"),(42, "9000.099999"),(43, "-9000.099999"),(44, "9000.900000"),(45, "-9000.900000"),(46, "9000.900001"),(47, "-9000.900001"),(48, "99999999999999000.000000"),(49, "-99999999999999000.000000"),(50, "99999999999999000.000001"),(51, "-99999999999999000.000001"),(52, "99999999999999000.000009"),(53, "-99999999999999000.000009"),(54, "99999999999999000.999999"),(55, "-99999999999999000.999999"),(56, "99999999999999000.999998"),(57, "-99999999999999000.999998"),(58, "99999999999999000.099999"),(59, "-99999999999999000.099999"),
      (60, "99999999999999000.900000"),(61, "-99999999999999000.900000"),(62, "99999999999999000.900001"),(63, "-99999999999999000.900001"),(64, "99999999999998000.000000"),(65, "-99999999999998000.000000"),(66, "99999999999998000.000001"),(67, "-99999999999998000.000001"),(68, "99999999999998000.000009"),(69, "-99999999999998000.000009"),(70, "99999999999998000.999999"),(71, "-99999999999998000.999999"),(72, "99999999999998000.999998"),(73, "-99999999999998000.999998"),(74, "99999999999998000.099999"),(75, "-99999999999998000.099999"),(76, "99999999999998000.900000"),(77, "-99999999999998000.900000"),(78, "99999999999998000.900001"),(79, "-99999999999998000.900001"),
      (80, "9999999999999000.000000"),(81, "-9999999999999000.000000"),(82, "9999999999999000.000001"),(83, "-9999999999999000.000001"),(84, "9999999999999000.000009"),(85, "-9999999999999000.000009"),(86, "9999999999999000.999999"),(87, "-9999999999999000.999999"),(88, "9999999999999000.999998"),(89, "-9999999999999000.999998"),(90, "9999999999999000.099999"),(91, "-9999999999999000.099999"),(92, "9999999999999000.900000"),(93, "-9999999999999000.900000"),(94, "9999999999999000.900001"),(95, "-9999999999999000.900001"),(96, "90000000000000000.000000"),(97, "-90000000000000000.000000"),(98, "90000000000000000.000001"),(99, "-90000000000000000.000001"),
      (100, "90000000000000000.000009"),(101, "-90000000000000000.000009"),(102, "90000000000000000.999999"),(103, "-90000000000000000.999999"),(104, "90000000000000000.999998"),(105, "-90000000000000000.999998"),(106, "90000000000000000.099999"),(107, "-90000000000000000.099999"),(108, "90000000000000000.900000"),(109, "-90000000000000000.900000"),(110, "90000000000000000.900001"),(111, "-90000000000000000.900001"),(112, "90000000000001000.000000"),(113, "-90000000000001000.000000"),(114, "90000000000001000.000001"),(115, "-90000000000001000.000001"),(116, "90000000000001000.000009"),(117, "-90000000000001000.000009"),(118, "90000000000001000.999999"),(119, "-90000000000001000.999999"),
      (120, "90000000000001000.999998"),(121, "-90000000000001000.999998"),(122, "90000000000001000.099999"),(123, "-90000000000001000.099999"),(124, "90000000000001000.900000"),(125, "-90000000000001000.900000"),(126, "90000000000001000.900001"),(127, "-90000000000001000.900001")
      ,(128, null);
    """

    sql "set enable_strict_cast=true;"
    qt_sql_0_strict 'select f1, cast(f2 as bigint) from test_cast_to_bigint_from_decimalv2_20_6_0_nullable order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_0_non_strict 'select f1, cast(f2 as bigint) from test_cast_to_bigint_from_decimalv2_20_6_0_nullable order by 1;'

    sql "drop table if exists test_cast_to_bigint_from_decimalv2_20_6_0_not_nullable;"
    sql "create table test_cast_to_bigint_from_decimalv2_20_6_0_not_nullable(f1 int, f2 decimalv2(20, 6)) properties('replication_num'='1');"
    sql """insert into test_cast_to_bigint_from_decimalv2_20_6_0_not_nullable values (0, "0.000000"),(1, "0.000000"),(2, "0.000001"),(3, "-0.000001"),(4, "0.000009"),(5, "-0.000009"),(6, "0.999999"),(7, "-0.999999"),(8, "0.999998"),(9, "-0.999998"),(10, "0.099999"),(11, "-0.099999"),(12, "0.900000"),(13, "-0.900000"),(14, "0.900001"),(15, "-0.900001"),(16, "1000.000000"),(17, "-1000.000000"),(18, "1000.000001"),(19, "-1000.000001"),
      (20, "1000.000009"),(21, "-1000.000009"),(22, "1000.999999"),(23, "-1000.999999"),(24, "1000.999998"),(25, "-1000.999998"),(26, "1000.099999"),(27, "-1000.099999"),(28, "1000.900000"),(29, "-1000.900000"),(30, "1000.900001"),(31, "-1000.900001"),(32, "9000.000000"),(33, "-9000.000000"),(34, "9000.000001"),(35, "-9000.000001"),(36, "9000.000009"),(37, "-9000.000009"),(38, "9000.999999"),(39, "-9000.999999"),
      (40, "9000.999998"),(41, "-9000.999998"),(42, "9000.099999"),(43, "-9000.099999"),(44, "9000.900000"),(45, "-9000.900000"),(46, "9000.900001"),(47, "-9000.900001"),(48, "99999999999999000.000000"),(49, "-99999999999999000.000000"),(50, "99999999999999000.000001"),(51, "-99999999999999000.000001"),(52, "99999999999999000.000009"),(53, "-99999999999999000.000009"),(54, "99999999999999000.999999"),(55, "-99999999999999000.999999"),(56, "99999999999999000.999998"),(57, "-99999999999999000.999998"),(58, "99999999999999000.099999"),(59, "-99999999999999000.099999"),
      (60, "99999999999999000.900000"),(61, "-99999999999999000.900000"),(62, "99999999999999000.900001"),(63, "-99999999999999000.900001"),(64, "99999999999998000.000000"),(65, "-99999999999998000.000000"),(66, "99999999999998000.000001"),(67, "-99999999999998000.000001"),(68, "99999999999998000.000009"),(69, "-99999999999998000.000009"),(70, "99999999999998000.999999"),(71, "-99999999999998000.999999"),(72, "99999999999998000.999998"),(73, "-99999999999998000.999998"),(74, "99999999999998000.099999"),(75, "-99999999999998000.099999"),(76, "99999999999998000.900000"),(77, "-99999999999998000.900000"),(78, "99999999999998000.900001"),(79, "-99999999999998000.900001"),
      (80, "9999999999999000.000000"),(81, "-9999999999999000.000000"),(82, "9999999999999000.000001"),(83, "-9999999999999000.000001"),(84, "9999999999999000.000009"),(85, "-9999999999999000.000009"),(86, "9999999999999000.999999"),(87, "-9999999999999000.999999"),(88, "9999999999999000.999998"),(89, "-9999999999999000.999998"),(90, "9999999999999000.099999"),(91, "-9999999999999000.099999"),(92, "9999999999999000.900000"),(93, "-9999999999999000.900000"),(94, "9999999999999000.900001"),(95, "-9999999999999000.900001"),(96, "90000000000000000.000000"),(97, "-90000000000000000.000000"),(98, "90000000000000000.000001"),(99, "-90000000000000000.000001"),
      (100, "90000000000000000.000009"),(101, "-90000000000000000.000009"),(102, "90000000000000000.999999"),(103, "-90000000000000000.999999"),(104, "90000000000000000.999998"),(105, "-90000000000000000.999998"),(106, "90000000000000000.099999"),(107, "-90000000000000000.099999"),(108, "90000000000000000.900000"),(109, "-90000000000000000.900000"),(110, "90000000000000000.900001"),(111, "-90000000000000000.900001"),(112, "90000000000001000.000000"),(113, "-90000000000001000.000000"),(114, "90000000000001000.000001"),(115, "-90000000000001000.000001"),(116, "90000000000001000.000009"),(117, "-90000000000001000.000009"),(118, "90000000000001000.999999"),(119, "-90000000000001000.999999"),
      (120, "90000000000001000.999998"),(121, "-90000000000001000.999998"),(122, "90000000000001000.099999"),(123, "-90000000000001000.099999"),(124, "90000000000001000.900000"),(125, "-90000000000001000.900000"),(126, "90000000000001000.900001"),(127, "-90000000000001000.900001");
    """

    sql "set enable_strict_cast=true;"
    qt_sql_0_strict 'select f1, cast(f2 as bigint) from test_cast_to_bigint_from_decimalv2_20_6_0_not_nullable order by 1;'

    sql "set enable_strict_cast=false;"
    qt_sql_0_non_strict 'select f1, cast(f2 as bigint) from test_cast_to_bigint_from_decimalv2_20_6_0_not_nullable order by 1;'

}