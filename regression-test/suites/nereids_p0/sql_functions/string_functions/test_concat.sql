drop table if exists test_string_function_concat;

create table test_string_function_concat (
    id int,
    c1 varchar(65533),
    c2 varchar(65533),
    c3 varchar(65533)
) PROPERTIES ('replication_num' = '1');


insert into test_string_function_concat values
(0, "X", char(0), "Y"),
(1, "X", char(1), "Y"),
(2, "X", char(2), "Y"),
(3, "X", char(3), "Y"),
(4, "X", char(4), "Y"),
(5, "X", char(5), "Y"),
(6, "X", char(6), "Y"),
(7, "X", char(7), "Y"),
(8, "X", char(8), "Y"),
(9, "X", char(9), "Y"),
(10, "X", char(10), "Y"),
(11, "X", char(11), "Y"),
(12, "X", char(12), "Y"),
(13, "X", char(13), "Y"),
(14, "X", char(14), "Y"),
(15, "X", char(15), "Y"),
(16, "X", char(16), "Y"),
(17, "X", char(17), "Y"),
(18, "X", char(18), "Y"),
(19, "X", char(19), "Y"),
(20, "X", char(20), "Y"),
(21, "X", char(21), "Y"),
(22, "X", char(22), "Y"),
(23, "X", char(23), "Y"),
(24, "X", char(24), "Y"),
(25, "X", char(25), "Y"),
(26, "X", char(26), "Y"),
(27, "X", char(27), "Y"),
(28, "X", char(28), "Y"),
(29, "X", char(29), "Y"),
(30, "X", char(30), "Y"),
(31, "X", char(31), "Y"),
(32, "X", char(32), "Y"),
(33, "X", char(33), "Y"),
(34, "X", char(34), "Y"),
(35, "X", char(35), "Y"),
(36, "X", char(36), "Y"),
(37, "X", char(37), "Y"),
(38, "X", char(38), "Y"),
(39, "X", char(39), "Y"),
(40, "X", char(40), "Y"),
(41, "X", char(41), "Y"),
(42, "X", char(42), "Y"),
(43, "X", char(43), "Y"),
(44, "X", char(44), "Y"),
(45, "X", char(45), "Y"),
(46, "X", char(46), "Y"),
(47, "X", char(47), "Y"),
(48, "X", char(48), "Y"),
(49, "X", char(49), "Y"),
(50, "X", char(50), "Y"),
(51, "X", char(51), "Y"),
(52, "X", char(52), "Y"),
(53, "X", char(53), "Y"),
(54, "X", char(54), "Y"),
(55, "X", char(55), "Y"),
(56, "X", char(56), "Y"),
(57, "X", char(57), "Y"),
(58, "X", char(58), "Y"),
(59, "X", char(59), "Y"),
(60, "X", char(60), "Y"),
(61, "X", char(61), "Y"),
(62, "X", char(62), "Y"),
(63, "X", char(63), "Y"),
(64, "X", char(64), "Y"),
(65, "X", char(65), "Y"),
(66, "X", char(66), "Y"),
(67, "X", char(67), "Y"),
(68, "X", char(68), "Y"),
(69, "X", char(69), "Y"),
(70, "X", char(70), "Y"),
(71, "X", char(71), "Y"),
(72, "X", char(72), "Y"),
(73, "X", char(73), "Y"),
(74, "X", char(74), "Y"),
(75, "X", char(75), "Y"),
(76, "X", char(76), "Y"),
(77, "X", char(77), "Y"),
(78, "X", char(78), "Y"),
(79, "X", char(79), "Y"),
(80, "X", char(80), "Y"),
(81, "X", char(81), "Y"),
(82, "X", char(82), "Y"),
(83, "X", char(83), "Y"),
(84, "X", char(84), "Y"),
(85, "X", char(85), "Y"),
(86, "X", char(86), "Y"),
(87, "X", char(87), "Y"),
(88, "X", char(88), "Y"),
(89, "X", char(89), "Y"),
(90, "X", char(90), "Y"),
(91, "X", char(91), "Y"),
(92, "X", char(92), "Y"),
(93, "X", char(93), "Y"),
(94, "X", char(94), "Y"),
(95, "X", char(95), "Y"),
(96, "X", char(96), "Y"),
(97, "X", char(97), "Y"),
(98, "X", char(98), "Y"),
(99, "X", char(99), "Y"),
(100, "X", char(100), "Y"),
(101, "X", char(101), "Y"),
(102, "X", char(102), "Y"),
(103, "X", char(103), "Y"),
(104, "X", char(104), "Y"),
(105, "X", char(105), "Y"),
(106, "X", char(106), "Y"),
(107, "X", char(107), "Y"),
(108, "X", char(108), "Y"),
(109, "X", char(109), "Y"),
(110, "X", char(110), "Y"),
(111, "X", char(111), "Y"),
(112, "X", char(112), "Y"),
(113, "X", char(113), "Y"),
(114, "X", char(114), "Y"),
(115, "X", char(115), "Y"),
(116, "X", char(116), "Y"),
(117, "X", char(117), "Y"),
(118, "X", char(118), "Y"),
(119, "X", char(119), "Y"),
(120, "X", char(120), "Y"),
(121, "X", char(121), "Y"),
(122, "X", char(122), "Y"),
(123, "X", char(123), "Y"),
(124, "X", char(124), "Y"),
(125, "X", char(125), "Y"),
(126, "X", char(126), "Y"),
(127, "X", char(127), "Y"),
(128, "X", char(128), "Y"),
(129, "X", char(129), "Y"),
(130, "X", char(130), "Y"),
(131, "X", char(131), "Y"),
(132, "X", char(132), "Y"),
(133, "X", char(133), "Y"),
(134, "X", char(134), "Y"),
(135, "X", char(135), "Y"),
(136, "X", char(136), "Y"),
(137, "X", char(137), "Y"),
(138, "X", char(138), "Y"),
(139, "X", char(139), "Y"),
(140, "X", char(140), "Y"),
(141, "X", char(141), "Y"),
(142, "X", char(142), "Y"),
(143, "X", char(143), "Y"),
(144, "X", char(144), "Y"),
(145, "X", char(145), "Y"),
(146, "X", char(146), "Y"),
(147, "X", char(147), "Y"),
(148, "X", char(148), "Y"),
(149, "X", char(149), "Y"),
(150, "X", char(150), "Y"),
(151, "X", char(151), "Y"),
(152, "X", char(152), "Y"),
(153, "X", char(153), "Y"),
(154, "X", char(154), "Y"),
(155, "X", char(155), "Y"),
(156, "X", char(156), "Y"),
(157, "X", char(157), "Y"),
(158, "X", char(158), "Y"),
(159, "X", char(159), "Y"),
(160, "X", char(160), "Y"),
(161, "X", char(161), "Y"),
(162, "X", char(162), "Y"),
(163, "X", char(163), "Y"),
(164, "X", char(164), "Y"),
(165, "X", char(165), "Y"),
(166, "X", char(166), "Y"),
(167, "X", char(167), "Y"),
(168, "X", char(168), "Y"),
(169, "X", char(169), "Y"),
(170, "X", char(170), "Y"),
(171, "X", char(171), "Y"),
(172, "X", char(172), "Y"),
(173, "X", char(173), "Y"),
(174, "X", char(174), "Y"),
(175, "X", char(175), "Y"),
(176, "X", char(176), "Y"),
(177, "X", char(177), "Y"),
(178, "X", char(178), "Y"),
(179, "X", char(179), "Y"),
(180, "X", char(180), "Y"),
(181, "X", char(181), "Y"),
(182, "X", char(182), "Y"),
(183, "X", char(183), "Y"),
(184, "X", char(184), "Y"),
(185, "X", char(185), "Y"),
(186, "X", char(186), "Y"),
(187, "X", char(187), "Y"),
(188, "X", char(188), "Y"),
(189, "X", char(189), "Y"),
(190, "X", char(190), "Y"),
(191, "X", char(191), "Y"),
(192, "X", char(192), "Y"),
(193, "X", char(193), "Y"),
(194, "X", char(194), "Y"),
(195, "X", char(195), "Y"),
(196, "X", char(196), "Y"),
(197, "X", char(197), "Y"),
(198, "X", char(198), "Y"),
(199, "X", char(199), "Y"),
(200, "X", char(200), "Y"),
(201, "X", char(201), "Y"),
(202, "X", char(202), "Y"),
(203, "X", char(203), "Y"),
(204, "X", char(204), "Y"),
(205, "X", char(205), "Y"),
(206, "X", char(206), "Y"),
(207, "X", char(207), "Y"),
(208, "X", char(208), "Y"),
(209, "X", char(209), "Y"),
(210, "X", char(210), "Y"),
(211, "X", char(211), "Y"),
(212, "X", char(212), "Y"),
(213, "X", char(213), "Y"),
(214, "X", char(214), "Y"),
(215, "X", char(215), "Y"),
(216, "X", char(216), "Y"),
(217, "X", char(217), "Y"),
(218, "X", char(218), "Y"),
(219, "X", char(219), "Y"),
(220, "X", char(220), "Y"),
(221, "X", char(221), "Y"),
(222, "X", char(222), "Y"),
(223, "X", char(223), "Y"),
(224, "X", char(224), "Y"),
(225, "X", char(225), "Y"),
(226, "X", char(226), "Y"),
(227, "X", char(227), "Y"),
(228, "X", char(228), "Y"),
(229, "X", char(229), "Y"),
(230, "X", char(230), "Y"),
(231, "X", char(231), "Y"),
(232, "X", char(232), "Y"),
(233, "X", char(233), "Y"),
(234, "X", char(234), "Y"),
(235, "X", char(235), "Y"),
(236, "X", char(236), "Y"),
(237, "X", char(237), "Y"),
(238, "X", char(238), "Y"),
(239, "X", char(239), "Y"),
(240, "X", char(240), "Y"),
(241, "X", char(241), "Y"),
(242, "X", char(242), "Y"),
(243, "X", char(243), "Y"),
(244, "X", char(244), "Y"),
(245, "X", char(245), "Y"),
(246, "X", char(246), "Y"),
(247, "X", char(247), "Y"),
(248, "X", char(248), "Y"),
(249, "X", char(249), "Y"),
(250, "X", char(250), "Y"),
(251, "X", char(251), "Y"),
(252, "X", char(252), "Y"),
(253, "X", char(253), "Y"),
(254, "X", char(254), "Y"),
(255, "X", char(255), "Y");

select * from test_string_function_concat order by 1, 2, 3, 4;

select id, concat(c1, c2, c3) from test_string_function_concat  order by 1, 2;

select group_concat(c2) from test_string_function_concat;