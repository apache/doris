// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax="proto2";

package doris;
option java_package = "org.apache.doris.proto";

// Metric and counter data types.
enum PUnit {
  // A dimensionless numerical quantity
  UNIT = 0;
  // Rate of a dimensionless numerical quantity
  UNIT_PER_SECOND = 1;
  CPU_TICKS = 2;
  BYTES = 3;
  BYTES_PER_SECOND = 4;
  TIME_NS = 5;
  DOUBLE_VALUE = 6;
  // No units at all, may not be a numerical quantity
  NONE = 7;
  TIME_MS = 8;
  TIME_S = 9;
}

message PProfileCounter {
    required string name = 1;
    required PUnit type = 2;
    required int64 value  = 3;
};

message PChildCountersName {
  repeated string child_counters_name = 1;
}

// A single runtime profile
message PRuntimeProfileNode {
  required string name = 1;
  required int32 num_children = 2; 
  repeated PProfileCounter counters = 3; 
  required int64 metadata = 4; 

  // indicates whether the child will be printed with extra indentation;
  // corresponds to indent param of RuntimeProfile::AddChild()
  required bool indent = 5; 

  // map of key,value info strings that capture any kind of additional information 
  // about the profiled object
  map<string, string> info_strings = 6; 

  // Auxilliary structure to capture the info strings display order when printed
  repeated string info_strings_display_order = 7; 
  
  // map from parent counter name to child counter name
  map<string, PChildCountersName> child_counters_map = 8;

  required int64 timestamp = 9;
}

// A flattened tree of runtime profiles, obtained by an
// in-order traversal
message PRuntimeProfileTree {
  repeated PRuntimeProfileNode nodes = 1;
}
