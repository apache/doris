# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: Build Extensions

on:
  pull_request:

concurrency:
  group: ${{ github.ref }} (Build Extensions)
  cancel-in-progress: true

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      broker_changes: ${{ steps.filter.outputs.broker_changes }}
      docs_changes: ${{ steps.filter.outputs.docs_changes }}
    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: recursive

      - name: Paths filter
        uses: ./.github/actions/paths-filter
        id: filter
        with:
          filters: |
            broker_changes:
              - 'fs_brokers/**'
            docs_changes:
              - 'docs/**'
  build-broker:
    name: Build Broker
    needs: changes
    if: ${{ needs.changes.outputs.broker_changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: '17'

      - name: Setup thrift
        run: |
          pushd thirdparty
          branch="${{ github.base_ref }}"
          if [[ -z "${branch}" ]] || [[ "${branch}" == 'master' ]]; then
            curl -L https://github.com/apache/doris-thirdparty/releases/download/automation/doris-thirdparty-prebuilt-linux-x86_64.tar.xz \
              -o doris-thirdparty-prebuilt-linux-x86_64.tar.xz
          else
            curl -L "https://github.com/apache/doris-thirdparty/releases/download/automation-${branch/branch-/}/doris-thirdparty-prebuilt-linux-x86_64.tar.xz" \
              -o doris-thirdparty-prebuilt-linux-x86_64.tar.xz
          fi
          tar -xvf doris-thirdparty-prebuilt-linux-x86_64.tar.xz
          popd
          export PATH="${DEFAULT_DIR}/ldb-toolchain/bin/:$(pwd)/thirdparty/installed/bin/:${PATH}"
          
          thrift --version
          # mkdir -p thirdparty/installed/bin/
          # cd thirdparty/installed/bin/ && ln -s /usr/bin/thrift thrift
      - name: Build broker
        run: |
          cd fs_brokers/apache_hdfs_broker/ && /bin/bash build.sh
  # build-docs:
  #   name: Build Documents
  #   needs: changes
  #   if: ${{ needs.changes.outputs.docs_changes == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout ${{ github.ref }}
  #       uses: actions/checkout@v3

  #     - name: Build docs
  #       run: |
  #         cd docs && /bin/bash build_help_zip.sh
  #     - name: Build
  #       run: |
  #         git clone https://github.com/apache/doris-website.git website
  #         cd website
  #         echo "[\"current\"]" > versions.json 
  #         mkdir -p docs
  #         cp -R ../docs/en/docs/* docs/
  #         cp -R ../docs/sidebars.json sidebars.json
  #         mkdir -p i18n/zh-CN/docusaurus-plugin-content-docs/current
  #         cp -R ../docs/zh-CN/docs/* i18n/zh-CN/docusaurus-plugin-content-docs/current/
  #         cp -R ../docs/dev.json i18n/zh-CN/docusaurus-plugin-content-docs/current.json

  #         mkdir -p community
  #         cp -R ../docs/en/community/* community/
  #         mkdir -p i18n/zh-CN/docusaurus-plugin-content-docs-community/current/
  #         cp -R ../docs/zh-CN/community/* i18n/zh-CN/docusaurus-plugin-content-docs-community/current/
  #         cp -R ../docs/sidebarsCommunity.json .

  #         cp -R ../docs/images static/
  #         npm install -g yarn
  #         yarn cache clean
  #         yarn && yarn build
  #         cd ../
  #         rm -rf website
